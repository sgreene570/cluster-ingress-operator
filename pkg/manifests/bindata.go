// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/canary/deployment.yaml (542B)
// assets/canary/namespace.yaml (124B)
// assets/canary/route.yaml (304B)
// assets/canary/service.yaml (331B)
// assets/router/cluster-role-binding.yaml (329B)
// assets/router/cluster-role.yaml (883B)
// assets/router/deployment.yaml (2.206kB)
// assets/router/metrics/cluster-role-binding.yaml (285B)
// assets/router/metrics/cluster-role.yaml (259B)
// assets/router/metrics/role-binding.yaml (297B)
// assets/router/metrics/role.yaml (291B)
// assets/router/namespace.yaml (332B)
// assets/router/service-account.yaml (213B)
// assets/router/service-cloud.yaml (631B)
// assets/router/service-internal.yaml (429B)
// manifests/00-cluster-role.yaml (2.715kB)
// manifests/00-custom-resource-definition-internal.yaml (6.458kB)
// manifests/00-custom-resource-definition.yaml (62.643kB)
// manifests/00-ingress-credentials-request.yaml (1.725kB)
// manifests/00-namespace.yaml (338B)
// manifests/0000_90_ingress-operator_00_prometheusrole.yaml (324B)
// manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml (392B)
// manifests/0000_90_ingress-operator_02_servicemonitor.yaml (598B)
// manifests/0000_90_ingress-operator_03_prometheusrules.yaml (839B)
// manifests/01-cluster-role-binding.yaml (456B)
// manifests/01-role-binding.yaml (454B)
// manifests/01-role.yaml (564B)
// manifests/01-service-account.yaml (283B)
// manifests/01-service.yaml (416B)
// manifests/01-trusted-ca-configmap.yaml (395B)
// manifests/02-deployment.yaml (3.211kB)
// manifests/03-cluster-operator.yaml (444B)
// manifests/image-references (540B)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCanaryDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x6a\xeb\x30\x10\x85\xf7\x7e\x8a\x03\x5e\xe7\x5e\xdf\xcd\xc5\x68\x9b\xb4\x34\xd0\x36\x86\x84\xee\xa7\xf2\x24\x11\x91\x67\x84\x46\x09\xe4\xed\x8b\x4d\xf3\x43\x29\xd1\x4a\x48\xe7\x93\xce\x37\x35\x5e\x38\x46\xc5\x2a\xb1\xd8\x3e\x6c\x0b\x96\xb2\xcb\x6c\x86\x39\x09\xe5\x33\x7a\x4e\x51\xcf\x03\x4b\xa9\x6a\xac\x13\xfb\xb0\x0d\x1e\x27\x8a\x47\x36\x50\x66\x18\x17\x50\x41\x3e\x4a\x09\x03\x57\x87\x20\xbd\xc3\xe2\x46\x51\x0a\x1f\x9c\x2d\xa8\x38\x50\x4a\xf6\xf7\xf4\xaf\xaa\x21\x34\x30\x48\xfa\x69\x63\x89\x3c\xff\xf2\xd8\x9f\xca\x12\x7b\x57\x01\x29\xeb\xd4\x6a\xc1\xd4\xc7\x20\xbc\x66\xaf\xd2\x9b\xc3\xff\xa6\xa9\x80\xc2\x43\x8a\x54\x78\x8c\x02\x17\x68\x5c\x5e\xa5\x50\x10\xce\x76\x39\x01\x66\xd3\xa7\x0e\xfb\xd1\x7c\xa6\x17\xf3\x99\x9f\x8c\xaf\x31\xa0\xc6\x72\xa0\x1d\x23\xd8\x4f\xcb\x5b\x26\x8c\x89\xee\x18\x63\xa7\x31\xf8\xb3\xc3\x72\xfb\xae\xa5\xcb\x6c\xa3\xfc\x2d\x57\x38\x0f\x41\xa8\x04\x95\x37\x36\x1b\xa1\x6f\xe0\x99\x62\xfc\x24\x7f\xd8\xe8\xab\xee\x6c\x25\x4f\x39\x6b\xbe\x23\x93\xe6\x72\xd7\x7e\xec\x7f\xb5\xea\x34\x17\x87\xb6\x69\x9b\xbb\xfb\x69\x5c\x45\xbd\x46\x87\xcd\xbc\x7b\x48\xb6\x6d\xfb\x80\xfc\x0a\x00\x00\xff\xff\x2a\x83\x17\x13\x1e\x02\x00\x00")

func assetsCanaryDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryDeploymentYaml,
		"assets/canary/deployment.yaml",
	)
}

func assetsCanaryDeploymentYaml() (*asset, error) {
	bytes, err := assetsCanaryDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/deployment.yaml", size: 542, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1, 0x87, 0x34, 0x42, 0xb3, 0x42, 0x22, 0x46, 0xb9, 0xdd, 0xb4, 0x6, 0x54, 0xeb, 0x89, 0x21, 0x1b, 0x63, 0xa4, 0x10, 0x58, 0x43, 0x37, 0x4b, 0x19, 0xdc, 0x5d, 0x37, 0xe9, 0x9f, 0x18, 0x45}}
	return a, nil
}

var _assetsCanaryNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xb1\xaa\x82\x31\x0c\x05\xe0\xbd\x4f\x11\xfe\xbd\xf7\xe2\xda\x87\x70\x74\x3f\xb4\x51\x83\xf6\xa4\x34\x41\xf0\xed\xc5\xc9\xfd\x7b\x18\x47\x93\x33\xa6\xc6\x42\xd7\x82\x65\x17\xdd\x61\xce\x26\xaf\x53\x99\x9a\x18\x48\xb4\x22\x42\x4c\x6d\xe2\x4b\x19\x77\xbb\x66\x35\xde\xb6\x46\xd4\x0e\x62\xbf\x8b\x08\x48\x4f\xa4\x39\xe3\xeb\xe5\x67\xff\xcc\xff\xe9\x43\x6b\xe8\x53\x7b\xfa\x6e\x72\x1c\xe5\x13\x00\x00\xff\xff\xee\x6f\x7a\xeb\x7c\x00\x00\x00")

func assetsCanaryNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryNamespaceYaml,
		"assets/canary/namespace.yaml",
	)
}

func assetsCanaryNamespaceYaml() (*asset, error) {
	bytes, err := assetsCanaryNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/namespace.yaml", size: 124, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfa, 0xbe, 0xf, 0xe9, 0xe4, 0xde, 0x20, 0xfc, 0xbd, 0x8, 0xcf, 0x4f, 0x86, 0xdf, 0x8b, 0x6d, 0x40, 0x53, 0xe1, 0xe7, 0xc, 0x94, 0x75, 0xa4, 0x2b, 0x7f, 0x8c, 0xc7, 0xaf, 0xbd, 0xd9, 0x93}}
	return a, nil
}

var _assetsCanaryRouteYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xbf\x6e\xf3\x30\x0c\xc4\x77\x3d\xc5\x01\x9e\x3f\x7f\xce\x16\x68\xed\xd2\x2e\x6d\xd0\x00\xdd\x09\x89\x71\x88\x2a\x92\x40\xd1\x0e\xf2\xf6\x85\x65\x04\xed\x44\x1e\xff\xdc\xef\x06\xbc\x72\x4a\x05\x1f\x95\x73\xbb\xca\xc5\xf0\x96\x67\xe5\xd6\xf0\x42\x99\xf4\x01\x2d\x8b\xb1\x1b\x70\xae\x1c\xe4\x22\x01\x2b\xa5\x85\x1b\x48\x19\x54\x6b\x12\x8e\x20\x83\x2e\xd9\xe4\xc6\xee\x5b\x72\xf4\xf8\xec\x4f\x54\xe5\x8b\xb5\x49\xc9\x7e\xb7\x19\xcb\x93\x32\x4a\xf9\xbf\x1e\xdc\x80\x4c\x37\x06\xe5\xd8\x9b\x56\x29\x70\x77\x6e\x6c\x7f\x5c\x47\xd7\x2a\x07\xef\x80\x5a\xd4\xb6\x0a\x18\xe9\xcc\x76\xda\x34\x8e\xd3\x71\xfa\x67\xa1\x3a\xc0\xca\xbe\xde\x73\x9c\x59\x57\x09\xdc\x27\xc3\x53\xed\xcc\x5f\x02\x7a\xf0\xed\xe4\xce\x32\x5f\xcd\xe3\x30\x4d\x0e\xb8\x4b\x8a\x81\x34\x9e\x4a\x92\xf0\xf0\x78\x2f\x99\xdd\x4f\x00\x00\x00\xff\xff\xe4\x82\x62\xe3\x30\x01\x00\x00")

func assetsCanaryRouteYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryRouteYaml,
		"assets/canary/route.yaml",
	)
}

func assetsCanaryRouteYaml() (*asset, error) {
	bytes, err := assetsCanaryRouteYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/route.yaml", size: 304, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x33, 0x51, 0x97, 0x20, 0xf, 0x89, 0x13, 0xa8, 0x2d, 0x6b, 0x7f, 0x3e, 0x2e, 0x78, 0x55, 0x9f, 0x49, 0x92, 0x7f, 0xd4, 0x9a, 0x52, 0xb7, 0x84, 0x49, 0x18, 0x30, 0xc5, 0xa7, 0x15, 0xf3, 0xaa}}
	return a, nil
}

var _assetsCanaryServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcc\xb1\x6a\x33\x31\x10\x04\xe0\x5e\x4f\x31\x70\xb5\x7f\xfc\x77\x42\xed\x35\x71\x95\x03\x87\xf4\x8b\x6e\xed\x88\xc8\xd2\xb2\xbb\x77\xe0\xb7\x0f\xbe\x0b\xc1\xa4\x4a\x27\xcd\xcc\x7e\x03\x5e\xb8\xd6\x8e\x57\xe1\x66\x1f\xe5\xe2\x38\xb5\xab\xb2\x19\x46\x6a\xa4\x77\x18\xeb\x5a\x32\x87\x01\x67\xe1\x5c\x2e\x25\x63\xa5\xba\xb0\x81\x94\x41\x22\xb5\xf0\x0c\x72\xe8\xd2\xbc\xdc\x38\x7c\x96\x36\x27\x9c\xbf\xcf\x48\xca\x3b\xab\x95\xde\x12\xd6\xff\x61\x40\xa3\x1b\x83\xda\xbc\x3d\x4c\x28\xf3\x06\x19\xfb\x13\xf2\x2f\x98\x70\x4e\x01\xf0\xbb\x70\xc2\x58\x17\x73\xd6\xd3\x14\x00\xe9\xea\xf6\xa8\x0e\x1b\x91\x10\x8f\xf1\x78\xf0\x2c\x01\xd8\xdb\x3d\xda\xbf\xda\xbd\xe7\x5e\x13\xde\xc6\x69\x4b\x9c\xf4\xca\x3e\x3d\xcf\x7e\xa0\x18\xe3\x6f\x28\xc6\xf8\x17\xe8\x31\xfb\x0a\x00\x00\xff\xff\x41\xbe\x5b\x7c\x4b\x01\x00\x00")

func assetsCanaryServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryServiceYaml,
		"assets/canary/service.yaml",
	)
}

func assetsCanaryServiceYaml() (*asset, error) {
	bytes, err := assetsCanaryServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/service.yaml", size: 331, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x45, 0xde, 0xe2, 0x1e, 0x7a, 0x6d, 0xaf, 0xcf, 0xb3, 0xf8, 0x47, 0x40, 0xf, 0xe4, 0x19, 0xcd, 0x25, 0x2b, 0x90, 0x14, 0x3, 0x97, 0xc7, 0x48, 0x2d, 0xb, 0xbb, 0x7e, 0x99, 0xde, 0x85, 0xd2}}
	return a, nil
}

var _assetsRouterClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x25\xea\x0c\xa2\x43\xd3\x01\x37\x58\x24\x7a\xef\xc4\xbb\x31\x49\xec\xc8\xf6\xa4\xe0\xf4\x28\x4a\x44\xc3\x4a\x29\x2d\xf9\xbf\xff\xfe\x13\xbc\xb3\xf4\x0e\x31\x10\x98\xb6\x20\x03\xd3\x89\x20\x14\x38\x1c\x3e\xc9\x56\xae\x04\x6f\xb5\x6a\x93\xc8\x69\x64\xe9\x0b\x7c\x4c\xcd\x83\xec\xa2\x13\x6d\x71\x96\x7b\xc2\x85\xbf\xc8\x9c\x55\x0a\xd8\x15\x6b\xc6\x16\x83\x1a\xff\x60\xb0\x4a\x1e\x5f\x3d\xb3\x3e\xaf\x2f\x69\xa6\xc0\x1e\x03\x4b\x02\x10\x9c\xa9\x80\x2e\x24\x3e\xf0\x2d\x3a\x96\xbb\x91\x7b\xb7\x9b\x24\x6f\xd7\x6f\xaa\xe1\x25\x75\xb0\x17\x1f\x3e\x87\xce\x1f\xe1\xf8\xdf\x4f\x5f\xb0\x3e\xa2\xa6\x6d\xd8\x85\x6e\x5b\xf1\xbf\x19\xe7\x32\x27\xf0\xdf\x00\x00\x00\xff\xff\x83\x13\xa9\xa6\x49\x01\x00\x00")

func assetsRouterClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleBindingYaml,
		"assets/router/cluster-role-binding.yaml",
	)
}

func assetsRouterClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role-binding.yaml", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x9a, 0xeb, 0xd3, 0x79, 0x1a, 0xa6, 0x75, 0xb5, 0xda, 0x10, 0x70, 0xf9, 0x80, 0xd1, 0x51, 0x55, 0x98, 0x4d, 0x11, 0x98, 0x79, 0x5c, 0x46, 0x99, 0xa3, 0x39, 0x68, 0xe9, 0xa2, 0x72, 0x56}}
	return a, nil
}

var _assetsRouterClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x31\x6f\xdb\x40\x0c\x85\x77\xfd\x0a\x22\x9d\xad\xa0\x5b\xa1\xb5\x43\xb7\x0e\x45\xd1\x9d\x3a\xbd\x54\xac\x2f\xc7\x03\xc9\x93\x9b\xfe\xfa\x42\xb2\x13\x18\xb6\x83\x24\x9b\xa8\x3b\x7e\xef\xdd\x23\x3f\xd1\xd7\xdc\x3c\x60\xe4\x49\x2b\x26\x32\xcd\xa0\x07\x35\x32\x6d\x01\xf3\x9e\x7e\xce\xe2\xe4\xb3\xb6\x3c\xd1\x08\x62\x27\x83\x87\x49\x0a\x59\xb6\xb2\xaa\xbb\x8c\x19\x7d\xb7\x97\x32\x0d\xcf\xc4\x1f\x9a\xd1\x71\x95\x5f\x30\x17\x2d\x03\xd9\xc8\xa9\xe7\x16\xb3\x9a\xfc\xe3\x10\x2d\xfd\xfe\x8b\xf7\xa2\xf7\xcb\xe7\xee\x11\xc1\x13\x07\x0f\x1d\x51\xe1\x47\x0c\xa4\x15\xc5\x67\x79\x88\x9d\x94\xdf\x06\xf7\xdd\xd1\x52\x67\x2d\xc3\x87\x6e\x47\x5c\xe5\x9b\x69\xab\xbe\x36\xed\xe8\xee\xae\xa3\xd5\x9b\x36\x4b\x38\xfd\x43\x99\xaa\x4a\x09\xdf\xaa\x15\xec\x95\x13\x8e\xa5\xc3\x16\x39\x16\x0b\x6c\x3c\xb5\x64\xf1\xd8\x3e\x0e\x1c\x69\xee\xae\x75\xd6\x27\xa0\x84\xa4\xf3\x37\x5c\x4b\x87\xee\x51\x0c\x8b\xe0\x70\xa1\x90\x0c\x1c\x78\x85\x7c\x19\xce\x35\xd8\xdb\xf8\x07\x29\x38\x25\xb8\x7f\x4c\x60\x4b\xb0\x7f\x49\xf6\x26\x7e\xbb\xf3\xd1\x4c\xde\x0f\xbe\xf7\xe0\x68\x17\xfc\x56\xa7\xdb\x86\x1d\xa9\x99\xc4\xd3\x1b\xe8\xe7\x6b\x49\x4b\xe0\x6f\x24\x2d\x1e\xc6\xa7\xb9\x9f\xeb\x38\xce\x9a\xbf\xaf\xeb\x70\x3c\x98\xd5\xa3\x20\x0e\x6a\xfb\x1b\x2e\x26\xf1\xa4\x0b\xec\xe9\xd5\x99\xbc\xec\x59\x7e\x73\xa1\xfe\x07\x00\x00\xff\xff\x45\xf5\x79\x0d\x73\x03\x00\x00")

func assetsRouterClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleYaml,
		"assets/router/cluster-role.yaml",
	)
}

func assetsRouterClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role.yaml", size: 883, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x8f, 0x37, 0xcb, 0xab, 0xde, 0xe5, 0xa2, 0x91, 0xc9, 0x97, 0x4d, 0x2d, 0xc3, 0x31, 0xf, 0x76, 0x59, 0x61, 0x77, 0xe0, 0xf7, 0xcb, 0xcc, 0x9b, 0x90, 0x68, 0x90, 0x5a, 0xfe, 0x7a, 0xae}}
	return a, nil
}

var _assetsRouterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x92\xda\x38\x10\xbd\xf3\x15\x5d\xe1\xec\x98\x24\xb3\x53\xbb\xbe\x51\xe0\xd9\xa5\x2a\x80\x0b\x9c\x5c\x29\x8d\xdc\x80\x6a\x64\x49\xdb\xdd\x26\xc5\x7e\xfd\x96\x0d\x33\xd8\x8e\x67\x32\x7b\x58\x9f\x54\xea\xd7\xaf\x5f\xcb\x4f\xea\x31\xcc\x31\x58\x7f\x2e\xd1\x09\xfc\x30\x72\x84\x02\xf7\xaa\xb2\x02\x27\x65\x2b\xe4\xd1\x18\x16\xee\x40\xc8\x0c\x33\xef\x84\xbc\xb5\x48\xc0\x01\xb5\xd9\x1b\x7d\x05\x81\x22\x04\x15\x82\x35\x58\x80\x12\xa0\xca\x89\x29\xf1\xe3\xe8\xc9\xb8\x22\x69\x55\x18\xa9\x60\xbe\x23\xb1\xf1\x2e\xa9\x13\x38\x3e\x7d\x1a\x8d\xc1\xa9\x12\x41\xb9\xa2\x59\x70\x50\x1a\x1b\x46\x46\xe9\xb0\xd5\x55\x93\x11\x40\x20\xdf\x28\x9a\xa3\x2a\xac\x71\xb8\x45\xed\x5d\xc1\x09\xdc\x4f\x26\x23\x00\xc1\x32\x58\x25\x58\x43\x01\x9e\x93\x9a\x35\xd2\xc9\x68\x9c\x6a\xed\x2b\x27\x2b\x55\x62\x02\xe4\x2b\x41\xba\x02\xc6\xe0\x7c\x81\x5b\xb4\xa8\xc5\x13\x18\xfe\x49\xc3\x05\x17\xc8\x78\x32\x72\x9e\x59\xc5\x7c\xe1\xe1\x33\x0b\x96\x91\xb6\x15\x0b\x52\xa4\xc9\x88\xd1\xca\x5e\x13\xb4\x77\xa2\x8c\x43\xe2\x67\x2d\x00\x51\xd3\x6e\x4f\xc1\x45\x85\x29\xd5\x01\x5f\x2f\x5f\x7f\x0d\x24\xab\xac\xcd\xbc\x35\xfa\x9c\xc0\x62\xbf\xf2\x92\x11\x72\x7d\xce\x37\x9c\x20\x95\xc6\x29\x31\xde\x2d\x91\xb9\x4e\xba\x26\x3c\x28\x6b\x1f\x95\x7e\xca\xfd\x57\x7f\xe0\xb5\x4b\x89\x7c\x5b\x46\xf0\x24\x2d\xb9\x37\xc1\x47\x91\xd0\xda\x6e\x75\x97\x79\x92\x04\x7e\x9f\x74\xa2\x81\xbc\x78\xed\x6d\x02\xf9\x2c\x7b\x85\x8e\xdf\xe2\xbb\xbb\xfb\xf2\x9f\x08\x4b\x14\x32\xfa\x4d\xca\x4f\x7f\x7c\xb9\x7f\x17\xe7\x18\x96\x48\x87\x9e\xad\x6f\x61\x74\xa7\xa4\x83\x66\x51\xc2\x50\x31\xd2\x8b\xa9\x83\x62\xfe\xe1\xa9\x68\x3c\x7d\x40\x87\xa4\xa4\x43\x38\xd0\xc2\x36\x9f\xe6\xdb\x5d\xb6\xde\xe4\x1d\x95\xcd\x75\x4b\xe0\x43\x2d\xff\xc3\x40\xda\x66\xfd\x2d\x4f\x37\xbb\x6d\xba\xf9\xbe\x98\xa5\xbb\xd5\x74\x99\x6e\xb3\xe9\x2c\x1d\x22\xf1\x01\x1d\x1f\xcd\x5e\x22\x73\xb9\xe0\x03\x7c\xf3\xf4\x61\xfa\xed\x6b\xbe\x9b\xa5\x9b\x7c\xf1\xb0\x98\x4d\xf3\x74\x37\x5f\x6c\x86\xe8\x62\x14\x1d\x87\x27\x13\x8b\xe5\x38\x90\x39\x29\x19\x6a\xec\x99\x71\x9e\x6e\xf3\xc5\x6a\x9a\x2f\xd6\xab\xdd\x6c\xba\xcb\xa6\xf9\x5f\x83\xac\x27\x45\x31\x55\x2e\xd6\xde\xed\xcd\xa1\x54\x81\xe3\xeb\x2d\x8e\xb4\x6a\x2d\x3f\x6a\x6a\xbb\xde\x9a\x13\x3a\x64\xce\xc8\x3f\x62\xd2\x61\x36\xce\x88\x51\x76\x8e\x56\x9d\x5f\x5e\x8e\x4f\x5d\xcb\xd6\x96\xfc\x13\xa5\x9b\x08\x10\x94\x1c\x13\x88\x8f\xa8\xac\x1c\xff\xe9\x07\x87\x8c\x45\xa8\x0a\xf3\x7f\x0b\x89\xeb\x2a\xe7\xf7\xc9\x61\x5f\x91\x46\xee\x12\x12\xfe\x5d\x21\x0b\xf7\xcb\xe8\x50\xd5\x8a\x26\x65\x6f\xbf\xc4\xd2\xd3\x39\x81\xcf\xbf\xdd\x2f\x4d\x2b\x76\xf2\xb6\x2a\x71\x59\x3f\xae\xbd\x87\xa3\xac\xf7\xb2\x8b\xea\xb7\x8d\x02\x57\xa3\x5c\xc7\x50\xa4\x91\xa4\x1e\x35\x7d\x54\xdd\xf3\xda\xd9\x73\x02\x42\x15\xbe\x5a\xec\x4d\xff\x0c\x94\xbd\x05\xa3\xc7\xca\x15\xf6\x1d\x45\x2f\x5d\xbf\x34\x1c\xbd\xa3\x01\x46\x4d\xdd\xbf\x7a\x45\x2f\x7d\x81\x09\xdc\x7d\x9e\x74\x1e\x95\x6d\x03\xaf\xe7\x4c\x77\x26\x44\xed\xe7\x28\xfa\x65\x07\x97\x33\x58\xaa\xd0\x2e\x6c\x04\xcb\xde\xcf\x7a\xc2\x73\x9b\xa6\x77\xb5\x9e\xdd\xf7\x2a\xe0\xd7\x07\xe9\x43\x3d\x8e\x94\x4d\x60\xaf\x2c\xdf\x22\x3f\x1d\xc2\xbf\x01\x00\x00\xff\xff\x88\x0a\x20\xee\x9e\x08\x00\x00")

func assetsRouterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterDeploymentYaml,
		"assets/router/deployment.yaml",
	)
}

func assetsRouterDeploymentYaml() (*asset, error) {
	bytes, err := assetsRouterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/deployment.yaml", size: 2206, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0x3, 0xe, 0x6e, 0xda, 0xa5, 0x5c, 0x83, 0x5c, 0x1d, 0x96, 0x75, 0xdb, 0x87, 0xf7, 0x77, 0xaa, 0x9c, 0xdc, 0x43, 0x33, 0xaf, 0x54, 0x72, 0x19, 0xf1, 0x6e, 0x81, 0xc, 0x46, 0x47, 0x66}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\x2d\x73\x53\x0f\xde\x57\xf0\x9e\x9d\xa6\x36\xb6\x93\x0c\x49\xa6\x07\x9f\x5e\x8a\x22\xc2\x42\xaf\x81\x7c\xdf\xff\xad\x2c\x53\x86\x97\xad\x7b\x90\x5d\x75\xa3\x67\x96\x89\xe5\x23\x61\xe3\x77\x32\x67\x95\x0c\x76\xc3\x32\x62\x8f\x45\x8d\xbf\x30\x58\x65\x5c\x2f\x3e\xb2\x3e\xec\x8f\xa9\x52\xe0\x84\x81\x39\x01\x08\x56\xca\x60\xda\x83\x6c\xa8\x2a\x1c\x6a\x07\xcc\xfb\xed\x93\x4a\x78\x4e\x03\xfc\x18\xdf\xc8\x76\x2e\xf4\x54\x8a\x76\x89\xbf\xd7\x66\x5a\x29\x16\xea\x3e\xac\x17\xff\x3d\x7b\xc3\x42\x19\xb4\x91\xf8\xc2\x73\xfc\x27\x9b\x6e\x74\xa5\xf9\x90\xdf\xa5\x9c\x0c\x02\xc0\xc6\xaf\xa6\xbd\x9d\xd4\xa5\xef\x00\x00\x00\xff\xff\x7f\xc0\x4a\x40\x1d\x01\x00\x00")

func assetsRouterMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleBindingYaml,
		"assets/router/metrics/cluster-role-binding.yaml",
	)
}

func assetsRouterMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role-binding.yaml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0xce, 0x4e, 0xd1, 0x37, 0xde, 0x79, 0x91, 0x5c, 0x71, 0xd1, 0x88, 0x1b, 0xdb, 0xaf, 0x1, 0xe5, 0x8c, 0x81, 0xb3, 0xfd, 0x30, 0xe3, 0x5d, 0xb0, 0x59, 0x8b, 0x2a, 0x47, 0xf9, 0xa0, 0xdf}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x12\x75\x72\xa2\x43\x69\x29\xe8\x29\xe8\x9d\xec\x70\xb1\x2e\x6b\xaf\x6c\xef\x49\xf0\xf4\xe8\x44\x90\xa8\xe7\x93\xfe\x79\xa2\xd7\x63\x44\xc2\xc9\xed\x40\x90\x02\x15\x95\xd6\x2f\xea\x6e\x0d\xb9\x63\x04\xa5\x51\x6c\xce\x1d\xe4\x36\x1e\xb6\x21\x5d\xb6\x20\x68\xed\x26\x9a\x85\xbb\x7c\xc0\x43\x4c\x17\xf2\x95\xb7\x99\x47\xee\xe6\xf2\xcd\x29\xa6\xf3\xed\x25\x66\xb1\xcb\xfd\xb9\xdc\x44\xeb\xf2\xd7\x7c\xb7\x03\xa5\x21\xb9\x72\xf2\x52\x88\x94\x1b\x96\x33\x32\x35\x53\x49\x73\xd1\x6b\xf1\x71\x20\x96\x32\x11\x77\x79\x73\x1b\x3d\x1e\x7a\xfa\x95\xb3\x75\x68\xec\xf2\x99\xb3\x58\x21\x72\x84\x0d\xdf\xf0\xdf\x78\x5c\xce\xcf\x85\xe8\x0e\x5f\xcf\xf1\x8a\x2c\x3f\x01\x00\x00\xff\xff\x4f\xd5\xdf\xe0\x03\x01\x00\x00")

func assetsRouterMetricsClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleYaml,
		"assets/router/metrics/cluster-role.yaml",
	)
}

func assetsRouterMetricsClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role.yaml", size: 259, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x77, 0x73, 0x9c, 0x6, 0x33, 0xf2, 0x91, 0x6f, 0x3b, 0x35, 0x49, 0xf3, 0xa5, 0xfc, 0x1d, 0x2e, 0x2e, 0xa6, 0x5b, 0x95, 0xa6, 0x7e, 0x8d, 0xfe, 0x7e, 0xf4, 0x62, 0x30, 0xa5, 0x37, 0x61}}
	return a, nil
}

var _assetsRouterMetricsRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x40\x0c\x04\xd0\x7e\x4f\xe1\x0b\x24\x88\xee\x6b\x3b\x68\xe8\x3f\x12\xbd\xb3\x71\x12\x93\xac\xbd\xb2\xbd\x29\x38\x3d\x42\x8a\x44\x05\xd2\x6f\x47\x33\x9a\x87\x8d\x3f\xc8\x9c\x55\x32\xd8\x84\x65\xc4\x1e\x9b\x1a\x7f\x61\xb0\xca\xb8\xdf\x7c\x64\x7d\x3a\x9f\xd3\xce\x32\x67\xb8\xeb\x41\xaf\x2c\x33\xcb\x9a\x2a\x05\xce\x18\x98\x13\x80\x60\xa5\x0c\xcd\xb4\x52\x6c\xd4\x7d\xd8\x6f\x7e\xc5\xde\xb0\x50\x06\x6d\x24\xbe\xf1\x12\x03\xcb\x6a\xe4\x9e\x4c\x0f\xba\xd3\xf2\x33\xc7\xc6\x6f\xa6\xbd\xfd\x63\x48\x00\xbf\x84\xbf\x1e\xbd\x4f\x9f\x54\xc2\x73\x1a\xae\xf6\x3b\xd9\xc9\x85\x5e\x4a\xd1\x2e\xf1\xa0\xb4\xaa\x70\xa8\xb1\xac\x90\xbe\x03\x00\x00\xff\xff\x15\x9f\x30\x56\x29\x01\x00\x00")

func assetsRouterMetricsRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleBindingYaml,
		"assets/router/metrics/role-binding.yaml",
	)
}

func assetsRouterMetricsRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role-binding.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xef, 0x8, 0xfb, 0x1f, 0xa3, 0xc7, 0xfb, 0xbc, 0x6, 0x78, 0xad, 0x0, 0x28, 0x90, 0xc8, 0xe8, 0xf5, 0x7d, 0xf8, 0xd0, 0xeb, 0x52, 0xf, 0xd4, 0x81, 0xce, 0x69, 0xb8, 0x8c, 0x26, 0x8c}}
	return a, nil
}

var _assetsRouterMetricsRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\x3b\x0f\xdd\x02\xfd\x40\xf7\x0e\xdd\x19\xe9\x36\x26\x62\x8b\x02\x49\xb9\x68\xbf\xbe\x88\xe3\x02\x9d\x78\xef\x01\xc1\xc3\x7f\xf4\xa6\x0b\x9c\x1a\x50\x51\xe9\xfa\x45\xdd\x74\x45\xcc\x18\x4e\xa1\xe4\xc5\xb8\x83\x4c\x47\xc0\x68\x45\x98\x14\x27\xb4\xda\x55\x5a\x24\xee\xf2\x0e\x73\xd1\x96\xc9\xae\x5c\xce\x3c\x62\x56\x93\x6f\x0e\xd1\x76\xbe\x5f\xfc\x2c\xfa\x7f\x7b\x49\x77\x69\x35\xef\xae\xb4\x22\xb8\x72\x70\x4e\x44\x8d\x57\xe4\x3f\xca\xe9\x7e\xf1\x03\x7b\xe7\x82\x4c\xda\xd1\x7c\x96\x8f\x98\xa4\xdd\x0c\xee\xc9\xc6\x02\xcf\x69\x22\xee\xf2\x6a\x3a\xba\x3f\x2e\x4d\x74\x3a\x25\x22\x83\xeb\xb0\x82\x83\x39\x6c\x93\x02\xdf\xcb\xef\xd7\xcf\xd6\xb5\x3e\xc2\x06\xbb\x1e\xcb\x37\xc4\x3e\x17\xf1\x67\xf8\xe4\x28\x73\xfa\x09\x00\x00\xff\xff\x67\x78\x6f\x08\x23\x01\x00\x00")

func assetsRouterMetricsRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleYaml,
		"assets/router/metrics/role.yaml",
	)
}

func assetsRouterMetricsRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role.yaml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0xe3, 0x68, 0x2c, 0xfd, 0xf1, 0x27, 0x9d, 0xa0, 0x3b, 0x10, 0x3e, 0xca, 0x3b, 0x76, 0x39, 0xf4, 0xb1, 0x37, 0x7b, 0xa3, 0xa7, 0x11, 0xc0, 0x6, 0x4b, 0x47, 0xbb, 0x93, 0x4b, 0xb7, 0xc2}}
	return a, nil
}

var _assetsRouterNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xb1\x4e\xc3\x50\x0c\x85\xe1\x3d\x4f\x71\x14\xe6\x14\xb1\xde\x77\x80\x05\x89\xdd\xbd\x71\x53\x93\x1b\x3b\xb2\x9d\x56\xbc\x3d\xa2\x05\x51\x84\x3a\xfb\xd3\x2f\x9f\x59\x74\x2c\x78\xa1\x85\x63\xa5\xca\x1d\xad\xf2\xc6\x1e\x62\x5a\x70\x7a\xea\x16\x4e\x1a\x29\xa9\x74\x80\xd2\xc2\x05\xb6\xb2\xc6\x51\x0e\x39\x88\x4e\xce\x11\x1d\x40\xaa\x96\x94\x62\x1a\x5f\x10\xbf\x68\x27\xf6\xa8\x36\xf2\x10\xdc\xb8\xa6\x79\x41\xdf\x77\x40\xa3\x3d\xb7\x6f\xfc\x00\x6a\xcd\xce\x37\xe5\xc5\x54\xd2\x5c\x74\x42\x1a\x9a\xd9\x8c\x83\x39\x5e\xd9\x4f\x52\xf9\xf9\x7a\x85\xed\xdf\xb9\x66\x40\x14\x79\x94\xb8\xfc\x77\x1d\xf1\xef\x85\xda\xb6\x48\xf6\x9b\x70\x41\x9f\xbe\x71\x7f\xb1\xf7\x97\x01\xca\x79\x36\x9f\x77\x7f\x7a\xab\x35\xa9\x1f\xc3\xe4\xb6\xad\x05\x3f\xfc\x33\x00\x00\xff\xff\xfc\x31\x60\x23\x4c\x01\x00\x00")

func assetsRouterNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterNamespaceYaml,
		"assets/router/namespace.yaml",
	)
}

func assetsRouterNamespaceYaml() (*asset, error) {
	bytes, err := assetsRouterNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/namespace.yaml", size: 332, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0xe3, 0x8d, 0x5c, 0x13, 0x8b, 0x1, 0x55, 0x92, 0x5, 0xf, 0xe, 0x67, 0x18, 0xd5, 0xb5, 0xcd, 0x7f, 0x3c, 0x8, 0x6d, 0x82, 0x43, 0xd5, 0x94, 0x6a, 0x16, 0x59, 0x51, 0x20, 0xc9, 0x5f}}
	return a, nil
}

var _assetsRouterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\xb1\x4e\xc4\x30\x10\x84\xe1\xde\x4f\x31\xd2\xd5\x9c\x44\xeb\x8e\x92\x16\x24\x7a\xb3\x99\xbb\x5b\x91\x78\xcd\xee\x3a\x88\xb7\x47\x41\x29\xa7\x98\x5f\xdf\x05\x2f\x22\x36\x7b\xe2\x66\x0e\xb7\x99\xf4\x80\x38\x5b\x72\xc1\xe7\x2f\xf2\x41\xd8\xa0\xb7\x34\xbf\xe2\x35\xf1\xa3\xeb\x0a\xe7\xf7\x54\x27\x64\x9d\x91\x74\x84\xd8\xe0\x52\x2e\x18\xf4\x4d\x23\xd4\x7a\xc0\xb9\xfe\x57\xd2\xf0\x76\x84\x31\xdc\x84\x11\xda\xef\xd7\xf2\xa5\x7d\xa9\x78\xa7\xef\x2a\x3c\x0d\xa5\x0d\xfd\xa0\x1f\xef\x8a\xfd\xb9\x6c\xcc\xb6\xb4\x6c\xb5\x00\xbd\x6d\xac\x27\xf0\x9c\x31\x9a\xb0\x1e\xba\x1e\x0f\xbd\xe5\x93\xf6\xbb\x33\xa2\xfc\x05\x00\x00\xff\xff\x33\xdc\xda\x8c\xd5\x00\x00\x00")

func assetsRouterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceAccountYaml,
		"assets/router/service-account.yaml",
	)
}

func assetsRouterServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRouterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-account.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xe3, 0x6, 0x3a, 0x88, 0x2e, 0x33, 0xe3, 0x24, 0xf0, 0xf0, 0xe9, 0x43, 0xc8, 0x46, 0x6c, 0x60, 0x9, 0x69, 0x84, 0x3, 0xd8, 0xc3, 0x80, 0xb, 0xab, 0x37, 0x13, 0xce, 0xf2, 0xeb, 0x60}}
	return a, nil
}

var _assetsRouterServiceCloudYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6b\x14\x41\x10\x85\xef\xfd\x2b\x1e\xec\x39\x41\x31\x07\x99\x63\x72\x12\x82\x2c\xb8\x78\xaf\xf4\xd4\xec\x34\xe9\xa9\x6a\xaa\x6a\x56\xf7\xdf\xcb\xf4\xec\x82\xa2\x78\xec\x07\xf5\xfa\x7b\xdf\x01\xaf\x4a\x23\x9e\xa9\x92\x64\x36\x7c\x63\xbb\x94\xcc\x08\x45\xab\x94\x19\x45\x30\x99\x4a\x40\x27\xc4\xcc\x30\x5d\x83\x6d\x8b\x73\xd5\x75\x04\xcb\xa5\x98\xca\xc2\x12\xfe\x98\x0e\xf8\x22\x67\x63\x77\xbc\xa8\x84\x69\xad\x6c\xf0\xc6\xb9\x4c\x25\xe3\x42\x75\x65\x07\x19\x83\x5a\xab\x85\x47\x50\xc0\x56\x89\xb2\xf0\x63\x7a\x2f\x32\x0e\x77\x82\x44\xad\x7c\x67\xf3\xa2\x32\xe0\xf2\x31\x2d\x1c\x34\x52\xd0\x90\x80\x03\xbe\xd2\xc2\x28\x0e\xe7\xf8\xa3\x02\x10\x5a\xd8\x1b\x65\x1e\xa0\x8d\xc5\xe7\x32\xc5\x43\xd9\xa1\x12\x50\xe9\x8d\xab\x6f\x25\xd8\x18\x86\xdb\x9e\xb4\x31\x6e\x69\x5c\x1b\x0f\xdd\xc9\x5d\x49\x02\x9c\x2b\xe7\x50\xfb\xfb\x6c\x63\x39\xcd\xc5\x41\xd5\x15\x33\x79\x77\xc4\xd3\xc4\xb9\x1b\x5b\xc8\xde\x8b\x9c\xf1\xfa\x8c\xa6\x5a\x11\x64\x67\x0e\x07\x39\x56\x99\x99\x6a\xcc\x57\xfc\x98\x59\x20\xda\xcb\x6e\x7a\x9b\x8e\xbb\xa7\x66\xec\xbc\xd9\x17\x10\x44\x47\xc6\x1b\xcf\x45\xc6\xfe\x8f\xef\xaa\xb6\xd9\xfc\x33\xd8\x84\xea\xc9\x68\x9a\x4a\x3e\x6a\x2d\xf9\xba\x0d\xc9\x54\x13\xd0\xd4\xa2\xaf\x7e\xe8\x82\x06\xcc\x11\xad\xaf\x69\xa6\xa1\x59\xeb\x80\xd3\xcb\x71\x4f\xd4\x62\xc0\xe7\x0f\xfd\xb1\x03\x1f\x7b\x74\xbb\xf9\xbd\xc2\xff\xdb\xf1\xf4\xf4\xe9\x9f\x25\x9e\x7e\x05\x00\x00\xff\xff\x56\xdc\x0d\xe9\x77\x02\x00\x00")

func assetsRouterServiceCloudYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceCloudYaml,
		"assets/router/service-cloud.yaml",
	)
}

func assetsRouterServiceCloudYaml() (*asset, error) {
	bytes, err := assetsRouterServiceCloudYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-cloud.yaml", size: 631, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0x97, 0xc4, 0xab, 0x8b, 0xa9, 0xa1, 0x47, 0xf7, 0xf, 0xeb, 0x38, 0x1b, 0xc2, 0xf7, 0x8c, 0xd9, 0xba, 0x35, 0x9b, 0x1, 0x67, 0x26, 0xd7, 0x3f, 0x6d, 0xa5, 0x5f, 0xf0, 0x92, 0x84, 0x8f}}
	return a, nil
}

var _assetsRouterServiceInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x6b\xfb\x30\x10\x05\xf0\x5d\x9f\xe2\x41\xd6\xff\xbf\x34\x24\x94\x56\xab\xa7\x6c\x86\x96\xee\x87\x7c\x49\x8e\xca\x92\xb8\x3b\xbb\xf4\xdb\x97\x38\x0d\xb8\x74\xc9\x22\x90\xee\xe9\xf7\xb8\x0d\xba\x3c\x99\xb3\xe2\x95\x75\x96\xc4\xf8\x14\x3f\x63\xe0\x23\x4d\xd9\x31\x53\x9e\xd8\xc2\x06\x87\x72\x52\x36\x43\x57\x8b\x6b\xcd\x99\x15\xd6\x38\xc9\x51\x12\xa8\x94\xea\xe4\x52\x8b\x81\x94\x41\xad\x65\xe1\x01\xe4\xd0\xa9\xb8\x8c\xfc\x10\x3e\xa4\x0c\xf1\xd6\x11\xa8\xc9\x3b\xab\x49\x2d\x11\xf3\x36\x6c\x50\x68\xe4\x7f\xcb\x69\x8d\x12\x83\xca\xf0\x87\x35\xf6\x5f\xe4\xa5\x3f\x06\xc0\xbf\x1a\xc7\xdb\x1a\x87\x3e\x00\xad\xaa\xdb\x65\xf4\x7f\x21\x23\xce\xee\x2d\x00\xd7\x49\xc4\xf3\xe3\xf5\xa2\xd5\x6b\xaa\x39\xe2\xad\xeb\x97\x17\x27\x3d\xb1\xf7\x4b\xe8\xe7\xcf\x9a\xb0\x95\xb1\xdf\xef\xee\x44\x6c\xa5\x8c\xec\x2a\x69\xed\x6c\x5f\x76\x4f\x77\x40\x4b\xec\x3b\x00\x00\xff\xff\x90\x5e\x33\xca\xad\x01\x00\x00")

func assetsRouterServiceInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceInternalYaml,
		"assets/router/service-internal.yaml",
	)
}

func assetsRouterServiceInternalYaml() (*asset, error) {
	bytes, err := assetsRouterServiceInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-internal.yaml", size: 429, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x63, 0x52, 0x85, 0x8b, 0x99, 0xe6, 0xc7, 0xcb, 0x34, 0x3d, 0x8d, 0x43, 0x65, 0x10, 0x63, 0x51, 0x80, 0xc1, 0x29, 0x17, 0xb6, 0x8f, 0x84, 0xdc, 0xf8, 0x33, 0xa1, 0x21, 0xc2, 0x5a, 0x4f}}
	return a, nil
}

var _manifests00ClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x8f\xe3\x36\x0c\xbd\xfb\x57\x08\xc9\x61\x81\x05\xe2\xa0\xb7\x22\xb7\xa2\x05\x7a\x6a\x17\x28\x8a\xde\x19\x89\xb1\xd9\x91\x45\x81\xa4\x32\xeb\xfe\xfa\xc2\x5f\x33\x3b\x49\x26\xc9\xee\xe4\x14\x8b\x22\x1f\x5f\xc8\x27\x4a\x6b\xf7\x6b\x2c\x6a\x28\x4e\x38\xa2\x3b\xb0\x38\x6b\xd1\x71\x46\x01\x63\x71\x64\x8a\xf1\x50\x57\x6b\xf7\xf7\x97\xdf\xbe\xec\xdc\x2f\x2e\xb2\x39\x3e\x0c\x5e\x8a\x4e\x5b\x2e\x31\xb8\x3d\x3a\xc1\x1c\xc1\x63\x70\xfb\x7e\x84\x52\x47\x69\x84\x4a\xd0\xa1\x66\xf0\xa8\x23\xfa\x73\x4b\xbe\xad\xd6\x6f\xb3\x80\xb7\x02\x31\xf6\x2e\x21\x06\x75\xe0\x3d\xaa\xd6\xd5\x13\xa5\xb0\x5b\x08\xfe\xc5\x11\x2b\xc8\xf4\x0f\x8a\x12\xa7\x9d\x93\x3d\xf8\x1a\x8a\xb5\x2c\xf4\x1f\x18\x71\xaa\x9f\x7e\xd6\x9a\x78\x7b\xfc\xa9\xea\xd0\x20\x80\xc1\xae\x72\x23\x83\xdd\x90\x2c\x69\x4b\x07\xdb\x50\x6a\x04\x55\x37\x4b\xfa\xca\x39\x48\x89\x6d\xc4\xd0\x21\xc2\x39\x4a\x3e\x96\x80\xb5\x60\x44\x50\xac\x5f\xa2\x07\xfc\xa1\x24\x9b\x0e\x12\x34\x18\x36\x2d\x35\xed\x06\x8e\x40\x11\xf6\x14\xc9\xfa\x9d\x5b\x99\x14\x5c\x55\x52\x22\xea\xae\xda\x38\xc8\xf4\xbb\x70\xc9\x23\xf6\xc6\xad\x56\x95\x73\x82\xca\x45\x3c\xce\x36\xcf\xe9\x40\x4d\x07\x59\xc7\xe5\x6b\xd1\xc6\xa5\xa2\x1c\xc9\x23\x78\xcf\x25\xd9\x64\xc3\x14\x32\xd3\xb2\x9a\x3d\x96\x85\x17\x9c\x37\x32\x87\xd9\xff\x88\x93\xf3\x11\x65\xbf\x30\xf9\xbc\xaa\xce\xf9\x41\x1e\x59\x9c\x30\x0c\x98\x23\xf7\xdd\xbd\x20\x99\x23\xf9\xfe\x1c\x26\x73\x08\xa4\x52\xf2\x50\xec\x7d\x09\x0d\xde\x87\xd7\x71\x22\x63\xa1\xd4\xd4\x9e\x05\x59\x6b\xcf\xdd\x39\xfc\x5c\x87\xd9\xfb\x04\xd9\x0b\x82\xe1\xf8\xd9\xa0\x8d\xbf\x25\x87\xc1\x74\x9e\xef\x5d\x75\x5d\xe8\xdd\x24\xd0\x51\xf5\xa7\x86\x3d\xa5\x40\xa9\x99\xec\xaf\x1e\x27\x5b\xd7\x39\x46\xd2\xe9\xe3\x19\xcc\xb7\xd7\x69\x2f\x9a\x7e\x23\xd8\x73\xca\xf3\x11\xf0\x9c\x4c\x38\x46\x14\x7d\xc7\xbc\x55\x03\x2b\x77\x75\x68\x0e\xae\xef\xa4\x10\x92\x0a\x7a\x96\x59\x9e\xaf\xcb\xef\x48\x39\x9d\x9a\x9b\xff\xf5\x20\xa0\x26\xc5\x5b\x11\x7c\xf3\x47\xf1\x25\xf7\xfc\x05\x99\x06\x05\x2d\xf5\x48\x68\xcf\x2c\x4f\x27\x5c\x86\xbe\xfc\x20\x97\xd7\x4c\xb7\x58\x7d\x93\xef\xa4\xff\x3f\x98\x7a\x16\xe5\xd2\x9d\xeb\xb2\x7b\x50\x8e\x8b\xad\x5c\xb4\xbb\x76\x7f\x90\x08\x0b\x06\x77\x10\xee\x1c\xa8\xa2\xe9\x56\xb8\x18\xca\xb6\x43\x13\xf2\xba\x9d\x21\x37\xc3\x89\xa9\x7b\xe8\xe2\x85\xa3\x3a\x44\xdc\x60\x36\xa1\xea\x02\x7b\xa1\xa1\xd7\xe9\xdc\x41\x63\x18\x16\x98\x8c\xfc\xf5\x69\x61\xfc\x84\x49\xf0\x48\xf8\x7c\xb9\x07\x8f\x61\x72\x7b\x6c\x69\xd9\xff\x8b\xde\xa6\xcb\xf6\xa1\x84\xd6\x0e\x52\x70\xf8\x35\x43\x0a\x43\xcc\x70\xc3\x4f\x21\x1e\x12\x48\x3f\x45\x7e\xb4\x9b\x27\x64\x3f\x7d\xfe\xf4\x80\xd2\xdd\x9f\xfd\x03\xda\xbe\x83\x87\xa2\x2f\x42\xd6\xdf\xa0\xb2\xb8\x0d\x13\x1b\xbf\x9a\xe7\xa4\x26\x40\x67\x77\x74\x51\xfc\x26\xf8\xcf\xe1\x75\x31\x6d\xb4\xac\x36\x4f\xb9\x07\xb0\x0e\xa4\x9e\x8f\x28\xfd\xbb\xa2\x7b\x79\xb5\xc4\xf9\xb5\xf2\xfe\x9c\xfb\x3f\x00\x00\xff\xff\xb9\x30\x9d\x99\x9b\x0a\x00\x00")

func manifests00ClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00ClusterRoleYaml,
		"manifests/00-cluster-role.yaml",
	)
}

func manifests00ClusterRoleYaml() (*asset, error) {
	bytes, err := manifests00ClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-cluster-role.yaml", size: 2715, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1b, 0xbe, 0x2a, 0xa9, 0x7d, 0xf6, 0x6b, 0x81, 0xf4, 0xb5, 0xef, 0x58, 0x42, 0x32, 0xe, 0x72, 0x15, 0x54, 0x6b, 0xfb, 0x30, 0xd6, 0x17, 0xf8, 0x50, 0x3c, 0x6e, 0x74, 0xee, 0xc1, 0xdd, 0x48}}
	return a, nil
}

var _manifests00CustomResourceDefinitionInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\x5f\x6f\xdc\xb8\x11\x7f\xf7\xa7\x18\x6c\x1e\xee\xc5\xd2\x9e\x2f\x6d\x51\x2c\x50\x14\x81\x73\x39\x18\xcd\xa5\x41\xec\xe6\x80\x26\x06\x8e\x2b\x8e\x24\x5e\x28\x52\xc7\xa1\xd6\xb7\x2e\xfa\xdd\x8b\x21\x29\xad\xb4\x2b\xad\x8d\xe6\x8e\x4f\xde\xd1\x68\xf8\x9b\xdf\xfc\xe1\x50\x16\xad\xfa\x88\x8e\x94\x35\x1b\x10\xad\xc2\xdf\x3c\x1a\xfe\x45\xf9\x97\xbf\x52\xae\xec\x7a\x77\xb5\x45\x2f\xae\x2e\xbe\x28\x23\x37\x70\xdd\x91\xb7\xcd\x07\x24\xdb\xb9\x02\x5f\x63\xa9\x8c\xf2\xca\x9a\x8b\x06\xbd\x90\xc2\x8b\xcd\x05\x80\x11\x0d\x6e\x40\x1a\x72\x58\x58\x27\x29\x57\xa6\x72\x48\x94\xdb\x16\x9d\xf0\xd6\xf1\x1f\x86\x6a\x55\xfa\x5c\xd9\x0b\x00\x61\x8c\xf5\x82\xed\x10\xbf\x0f\xa0\x4c\xa1\x3b\x89\xb9\x43\x8d\x82\x70\xa2\xbf\x26\xd4\x65\xd6\x08\x23\x2a\x94\x59\xad\xaa\x3a\x13\x3b\xa1\xb4\xd8\x2a\xad\xfc\x7e\x03\x2b\xef\x3a\x5c\x5d\x50\x8b\x05\x5b\xab\x9c\xed\xda\x0d\x3c\x85\x81\x41\xa7\xdd\xa3\xab\xaf\xdf\xdd\x7e\x08\xf8\x83\x4c\x2b\xf2\xff\x98\xca\xdf\x2a\xf2\xe1\x59\xab\x3b\x27\xf4\xd8\xe3\x20\x26\x65\xaa\x4e\x0b\x37\x7a\x70\x01\x40\x85\x6d\x71\x03\xab\xd5\x05\x40\xeb\x90\xd0\xed\xf0\x5f\xe6\x8b\xb1\x0f\xe6\x8d\x42\x2d\x69\x03\xa5\xd0\x84\xac\xda\x6d\x5d\x62\x3a\x21\x23\x2f\x7c\x47\x1b\xf8\xcf\x7f\x2f\x00\x76\x42\x2b\x19\x58\x8b\x0f\xd9\xa1\x57\xef\x6f\x3e\xbe\xbc\x2d\x6a\x6c\x44\x14\x02\x48\xa4\xc2\xa9\x36\xe8\xc1\x6a\x40\x0f\x8a\x40\xb0\x33\x10\xa1\x41\x62\x14\x94\x01\x5f\x23\x3c\x5a\x83\x04\x92\x23\x8c\x12\xb6\x7b\x76\x22\x2f\xac\x29\x55\x35\x0d\x47\xa1\x3b\xf2\xe8\xd2\x6e\x00\x39\x13\x9f\xb7\xdd\x56\xab\xe2\xdf\xd6\x20\x08\x23\x7b\xa1\x53\x3b\xe1\x91\xa5\x39\x7c\x36\x70\x1d\x5f\x05\x21\x1b\x65\x18\x80\x6a\x3b\x1d\x3c\x02\x5b\x82\xaf\x15\x0d\x56\x7b\x22\x18\xb6\xb1\x1e\xa8\x6b\x5b\xeb\x3c\xca\x1c\xee\x6a\x45\x93\xe7\xd6\xe8\x3d\x94\xd6\x81\x32\x1e\x9d\x11\x1a\x0a\xdb\x34\x9d\x51\x45\xb0\x3d\xd8\xb4\x25\xfc\xb3\x45\x73\xcb\x9e\x40\x9f\x17\x94\xaf\x92\x82\xdf\x73\xa0\xec\xf6\x17\x2c\x7c\x12\xb5\x8e\xd5\xbc\xea\xe3\xc1\x6b\x54\x41\x83\xec\x88\xf5\x6f\x38\x2c\x51\x27\x31\x4a\x81\xe3\x5d\x94\xa1\x04\x0a\x21\xeb\xbd\x06\x87\x21\x35\x8c\x9f\x02\x4e\xa0\x85\x49\xa8\x72\xb8\xe5\xf4\x71\x04\x54\xdb\x4e\x4b\x28\xac\xd9\xa1\xf3\x21\xa4\x95\x51\x8f\x83\x65\x02\x6f\xc3\x96\x5a\x78\x24\x3f\xb1\x38\xb0\xb4\x13\xba\xc3\xcb\x10\xaf\x46\xec\xc1\x21\xef\x01\x9d\x19\x59\x0b\x2a\x94\xc3\x8f\xd6\x21\x28\x53\xda\x0d\xd4\xde\xb7\xb4\x59\xaf\x2b\xe5\xfb\x9e\x91\xe8\xf6\xfb\x75\x61\x8d\x77\x6a\xdb\x31\xb1\x6b\x89\x3b\xd4\x6b\x52\x55\x26\x5c\x51\x2b\x8f\x85\xef\x1c\xae\x45\xab\xb2\x00\xdc\x84\x0e\x90\x37\xf2\xc5\x90\xf6\xdf\x8c\x90\xc6\x78\x90\x77\xca\x54\x83\x38\xd4\xea\x22\xef\x5c\xb1\x31\xd1\xe3\x6b\x11\xff\x81\x5e\x16\x31\x2b\x1f\xbe\xbf\xbd\x3b\xa4\xd0\x24\xf1\x02\xe7\x81\xed\xc3\x6b\x74\x20\x9e\x89\x52\xa6\x44\x17\x03\x57\x3a\xdb\x04\x8b\x68\x64\x6b\x95\xf1\xe1\x47\xa1\x15\x9a\x29\xe9\xd4\x6d\x1b\xe5\x39\xd2\xbf\x76\x48\x9e\xe3\x93\xc3\x75\x68\x84\xb0\x45\xe8\x5a\x29\x42\x72\xdf\x18\xb8\x16\x0d\xea\x6b\x6e\x83\x7f\x34\xed\xcc\x30\x65\x4c\xe9\xd3\xc4\x8f\x1b\xfe\x54\x71\x52\x31\x00\x7d\x1f\x9e\x8d\x10\x3f\xe4\x00\x31\x4b\xfc\xb7\x2a\x53\x91\xc6\x52\x40\xd6\x56\x8e\x1b\x10\xd6\x62\xa7\xac\x1b\xe4\x86\x42\xdb\xca\x9f\xda\x1e\x02\xc5\x6c\x63\x0c\x22\x63\x03\xef\x44\x83\x13\x59\xec\x84\x77\x77\x6f\xe7\xa4\xfb\x76\xaa\xec\x85\xab\xd0\x8f\x13\x65\xae\x3b\x04\x8f\xe3\x56\x53\xe1\x11\x11\x49\xa7\xe7\xa2\xb6\xe4\xf9\x44\xea\xdd\x3d\xf4\xe9\x23\x23\xb3\xb1\x49\x11\x52\xe6\x2d\x9a\xca\xd7\x1b\xb8\x9a\x3c\x1a\xdc\x3c\x8b\x68\xd0\xea\x31\xa5\x73\x22\x48\x0c\x30\xfd\x46\x52\x0e\x37\x25\x3c\xa2\xb3\x97\x29\x5c\xa5\xe8\xb4\x3f\xb2\x0b\x6c\xe2\xe5\xb7\xf9\x2c\x76\x6e\x3f\xd5\xe8\xfc\x88\xab\xb4\xae\x11\x3e\x3c\xfd\xcb\x9f\x4e\x1d\x53\x4d\xd7\x6c\xe0\xdb\x39\xb7\xd8\xe8\x33\xfc\xda\xb7\x03\xd9\xa3\x43\x90\x21\xe5\xf0\xc6\x3a\xc0\xdf\x44\xd3\x6a\xbc\x84\xd5\xab\x15\xd8\x63\x78\x00\xab\xeb\x77\xaf\x7e\xfc\x7e\x35\xef\xd3\x6c\x3c\xd0\x74\xcd\x31\xb2\x0c\x82\x99\x13\xe9\xab\x89\x24\xa5\xda\x59\xb7\x92\x0e\x08\x37\x44\x2a\x89\xe6\x21\x0a\xe7\xc4\xfe\x94\xd8\x1b\x8f\x0d\x1d\x27\x0c\x80\x0a\xe2\x13\x12\x66\xbd\x4d\x43\xca\x62\xc9\x87\xc7\x3d\xf7\x8d\xa5\x70\x5c\xa1\xf1\x7a\x0f\x76\x1b\xe6\x21\xd9\x2b\x1d\x8a\xfd\xc3\x73\xab\x7d\xa9\x08\x7b\xd3\x3f\xa0\xe1\x83\xfe\xe8\xb8\x3e\x41\x79\xaa\xfe\x04\xe2\x6a\x50\x3c\x61\xe9\x50\xc3\xc9\x0b\x80\x9f\x6a\x34\x53\x21\x9b\x4f\x5d\x3f\x96\x52\xe8\xe1\x56\x6b\x74\x49\x4e\xa7\xf4\x07\x35\xe7\x90\x5a\x6b\x24\x1f\x66\x29\xf2\xca\x00\x8a\xa2\x1e\x66\xba\xc7\x30\x71\x71\xa9\x0a\x93\xac\x85\x01\x49\x9c\x98\x6c\x85\xf3\xaa\xe0\xb1\x35\xbc\x04\xa5\x50\x9a\x18\x90\xf0\xe1\xef\xce\x85\xb2\x89\xfb\x1c\xa6\xc5\x14\x2f\x6e\x09\x6a\x96\x03\xde\xad\x1f\x2b\x81\x6c\x34\x78\xe4\x66\x21\x78\x3c\xf2\xe8\x1a\x65\x30\x6a\x28\x0f\x06\x51\xf2\xf1\x78\x62\xd2\xa1\x77\xfb\x60\x63\xe4\x51\x78\xab\x3f\x49\xa2\xdf\xbf\x4b\xd7\x09\xe3\xf0\xd9\x8c\x89\x03\x33\x97\xdf\x88\x90\x14\xfa\xa3\xb0\x2c\xc3\x9a\xab\xca\x85\xda\x9b\x6c\xfe\xfa\xdd\x2d\x4f\xd5\xb7\x93\xda\x3a\x60\x10\x3d\x82\x07\xe5\x6b\x65\x78\x1e\x4a\x14\x9d\x98\x85\x59\x74\x8b\xe5\x16\xd7\x52\xd1\xc5\x35\x64\xc5\xec\xd3\xe3\x1b\xca\x41\x3b\x90\x29\xcc\x1e\xc6\x22\x22\x5b\x28\xae\x92\xe0\x0b\xfb\x39\x6b\x13\x46\x9c\xf7\x79\x17\xee\x1c\x37\x25\x84\xbb\x09\xd5\xfd\xf0\x97\x14\x87\x4c\x47\xf8\xbc\x7a\x23\x94\x46\xf9\x79\xb5\x60\x7b\x00\x04\x0f\x4a\x6b\x1e\xd8\x08\x7d\x04\xc4\x54\x0b\xb2\x26\x8e\xd1\x48\x24\x2a\x4c\x1e\x6e\xd3\x8e\x4b\x46\x45\x47\xc3\x81\x9f\x6a\x2d\x9f\x47\xb0\x9c\x2c\x71\x2d\xa4\xcc\x0c\xdd\x29\x71\xae\x07\x87\x14\xc1\x2f\x1d\xf9\x3e\x81\x8c\x14\x4e\x9e\xa9\xeb\x7e\x95\xe1\xee\x7a\x9a\x36\x63\xbc\x0b\xc9\x13\xd7\xdc\x94\x36\x5e\x59\x4a\xe7\xc5\xc7\x7e\x3a\xa0\x8d\xd7\xf9\xf4\x8c\x4b\x0b\xf2\x77\x4e\x18\x0a\x7e\xde\xa9\xd3\x79\xed\xd4\xa1\xd9\x63\x7e\xbc\xfa\x7e\xc2\xed\x29\xf3\xaa\x59\x02\x08\x7d\xa6\x7c\xf5\x9e\x31\xf9\xbe\xda\xcc\xe9\x19\xfe\x7f\x99\x39\x33\x84\x9e\xd8\xfa\xc3\xf7\x92\x86\x38\xd5\x9f\xd1\x83\x92\x66\xdf\x47\xc3\x99\xf5\x50\x63\x6a\xed\x6e\x38\xaf\x53\x23\x41\x39\x9f\xf7\x4f\x66\xfd\xd3\x79\xa9\x16\xeb\xe1\xb8\x6d\x2a\xd9\xc3\x55\x92\xaf\x74\xa5\xc2\x74\x1a\xf2\xb1\xca\x57\x4a\x42\x09\xde\x42\xa9\xcc\xf1\x25\x62\x02\x3a\x0d\xc4\x7c\x03\x19\x26\x87\xcf\x06\xac\x81\x57\x3f\xdd\x46\x2e\x92\xc5\x12\x7d\x51\xa3\x84\x8e\xce\xc7\xe5\xe7\x9b\xd7\x3f\x83\x20\x50\xa1\x1b\x7f\xba\xba\x0f\xc6\x1e\x79\x94\x58\x34\x17\x5e\x3a\x63\x53\xf0\xa5\xbe\x75\x98\x0d\x03\x83\x0c\x9f\xf0\xc2\x0e\xdf\xdd\x5f\xf2\x16\x3f\x5c\xbf\x9f\xdb\xe0\x8c\xd5\xc3\xd6\xe7\x37\x78\x79\x1f\x38\xf9\x74\x75\x7f\xb8\x88\x4b\x5b\x50\x2e\x1e\x28\x17\x8d\x78\xb4\x26\x2f\x6c\xb3\x2e\xb4\x5a\xc7\x2f\x2e\x6b\x87\x25\x3a\x34\x05\xae\x9d\xed\x3c\xfe\xf9\xe5\xba\x42\x9f\x45\x96\xb3\xc0\x72\xed\x1b\xfd\xc2\x86\x78\x2e\x75\x39\x5e\x9f\xbe\x3b\xde\xb4\x51\x85\xb3\x64\x4b\x1f\xf6\x44\x93\x75\x14\x76\x16\x4c\xf1\xda\xa0\x7f\xb0\xee\xcb\x5a\x1a\x5a\xf3\x3e\x7f\xdf\x29\x7c\xf8\x5b\x78\x96\x15\x5a\x65\x11\xdf\x0b\xf1\x98\x25\xcd\x4c\x1a\x0a\x88\x32\xaa\xed\xc3\x39\x24\x2f\x47\x48\x0a\x6d\x3b\x99\x57\xd6\x56\x1a\x03\x0e\xde\x8f\xe1\x8d\x3c\xdf\x5d\xad\xd3\x44\xca\xe5\x45\xcc\xc0\xd2\x09\xfb\xac\xa2\xf7\xa2\x3a\xd3\xa3\xa6\xf5\xc1\xba\xc7\xa5\xf0\x6b\x87\x69\x82\x3c\xce\xf8\x33\x5e\x0f\xb5\x70\x39\x7c\x31\x0a\x9f\x98\xc9\x8b\xaa\x52\xa6\x12\xad\x0a\x39\x7e\x5c\x76\x9c\x7c\xe7\x12\x3a\xa6\x6a\xca\xc0\x3b\x51\x51\xc8\x41\x2f\xaa\xac\x54\xda\xa3\xa3\xcb\xaf\x48\xb9\x05\xa0\x21\x07\x87\x8f\x6d\x93\x0c\x7c\x2a\x30\x67\x0f\x73\x00\x21\xe3\xc0\x20\xf4\xfb\x67\x1c\xbe\x27\xd1\xde\xf5\xff\x93\xd8\x5d\x1d\x7e\x05\x03\x59\xfa\xf7\xc2\x2e\xb6\xf8\x78\xfb\xda\x80\x77\x1d\xa6\x4f\xe4\xd6\xf1\x41\x1a\x25\x87\x73\x4c\x14\x05\xb6\x1e\xe5\xbb\xe3\xef\xfc\xab\xd5\xe4\x23\x7e\xf8\x39\x9a\x58\xe1\xd3\xfd\x45\xb4\x8a\xf2\x63\x8f\x83\x85\xff\x0b\x00\x00\xff\xff\xf5\x70\x72\x64\x3a\x19\x00\x00")

func manifests00CustomResourceDefinitionInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionInternalYaml,
		"manifests/00-custom-resource-definition-internal.yaml",
	)
}

func manifests00CustomResourceDefinitionInternalYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition-internal.yaml", size: 6458, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd8, 0xca, 0x23, 0xdf, 0xb3, 0xce, 0x84, 0xd, 0xfd, 0xa9, 0x64, 0x42, 0x7c, 0x92, 0x5d, 0x40, 0x6, 0x5b, 0xb9, 0x2f, 0x4b, 0xfc, 0xd1, 0xe, 0xde, 0x96, 0x5a, 0x66, 0x8c, 0xce, 0x9a, 0xe}}
	return a, nil
}

var _manifests00CustomResourceDefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x61\x77\x1b\x37\x92\xe0\xf7\xfc\x0a\x1c\xb3\x3e\x4b\x8e\x48\xc5\x76\x92\xcb\x6a\xf6\xed\x3c\x59\x76\x62\xbf\x51\x64\x9d\xa9\x4d\x66\x13\x65\x7c\x60\x37\x48\x62\xd5\x04\x3a\x00\x5a\x32\x33\x33\xf7\xdb\xef\xa1\x00\x74\xa3\x9b\x00\x1a\x94\xed\x9d\x7d\x7b\xee\xf7\x66\x62\xb1\xd1\x85\x42\x55\xa1\xaa\x50\x55\x00\x70\x4d\x7f\x24\x42\x52\xce\x4e\x10\xae\x29\x79\xa7\x08\xd3\x7f\xc9\xd9\xcd\xb7\x72\x46\xf9\xf1\xed\xe3\xcf\x6e\x28\x2b\x4f\xd0\x59\x23\x15\xdf\xbc\x21\x92\x37\xa2\x20\xcf\xc9\x92\x32\xaa\x28\x67\x9f\x6d\x88\xc2\x25\x56\xf8\xe4\x33\x84\x30\x63\x5c\x61\xfd\xb3\xd4\x7f\x22\x44\x59\x51\x35\x25\x99\x09\x52\x11\x2c\xc9\x8c\xd7\x84\xc9\x35\x5d\x2a\x0d\x5b\x92\x6a\x39\xdd\x60\x86\x57\xa4\x9c\xae\xe9\x6a\x3d\xc5\xb7\x98\x56\x78\x41\x2b\xaa\xb6\x27\x68\xa2\x44\x43\x26\x9f\x21\xc4\xf0\x86\x9c\x20\xca\x56\x82\x48\x59\x70\xa6\x04\xaf\x2a\x22\xa4\x06\x27\xb0\xe2\xa2\x07\xf7\x33\x59\x93\x42\x77\xbf\x12\xbc\xa9\x4f\x50\xb8\x91\x81\x6a\xd1\x34\x43\x7c\x65\x3a\x38\x6b\x3b\x80\x77\x15\x95\xea\x4f\xe1\xf7\xe7\x54\x2a\x68\x53\x57\x8d\xc0\x55\x08\x45\x78\x2d\x29\x5b\x35\x15\x16\x81\x06\x9f\x21\x24\x0b\x5e\x93\x13\x74\xa1\xd1\xa9\x71\x41\xca\xcf\x10\xba\x35\x4c\x01\xf4\xa6\x76\xfc\xb7\x8f\x0d\xb0\x62\x4d\x36\xd8\xe0\x8d\xf4\xe0\xd8\xe9\xe5\xab\x1f\x9f\xce\x7b\x3f\x23\x54\x12\x59\x08\x5a\x2b\x60\xed\x64\x07\x75\xfb\x7e\x41\x24\xc2\xc8\xf2\xc0\x61\x87\x3a\xf4\xd0\x92\x8b\x16\x24\x42\x6a\x4d\x50\x51\x35\x52\x11\x31\x43\x57\xfa\x8f\xae\x65\x81\x19\x92\x44\xdc\xd2\x82\xa0\xd7\x35\x61\x73\x4d\x69\xf4\x86\x37\x8a\x20\xcc\x4a\xf4\xa7\x66\x41\x04\x23\x8a\x48\x47\x48\x0f\xb0\xb0\x72\x25\x67\xe8\x9a\xa1\x9f\xd6\x84\x21\xcc\x76\x09\x8e\xa8\x44\x85\x20\x58\x91\xf2\x08\x61\xc4\xc8\x5d\x00\x67\x0f\x6c\x49\xea\x8a\x6f\x37\x84\x29\xef\x4b\xa4\x38\xc2\x55\xc5\xef\x90\x16\x77\xc1\x70\x85\x94\xc0\xcb\x25\x2d\xf4\x1b\x41\x70\xb1\x86\x81\xda\xc1\x48\xa4\xd6\x58\x79\x40\xc9\xbb\x9a\x4b\xe2\x90\x43\x5c\xd8\x41\x7a\x63\xf8\xb7\xba\xc4\x8a\xb2\x15\x52\x6b\x2a\xdb\x17\x68\x83\xb7\xa8\x22\x18\x30\x28\xa9\x14\x0d\xb0\xc7\x03\xbd\xe4\x02\xd5\xcd\xa2\xa2\x05\x5a\xe2\x42\x03\x60\x44\xdd\x71\x71\xa3\x87\xc7\x48\x01\x33\x0b\x61\x19\x1d\x3b\x12\xe4\x96\xca\x3e\x50\xdd\xeb\x82\x20\x68\x50\x22\xde\x28\xa0\xf1\x5a\xa9\x5a\x9e\x1c\x1f\xdf\xb4\x6c\xd1\x53\xb2\xe4\x85\x3c\x2e\x38\x2b\x48\xad\xe4\xb1\xa3\xc0\xd4\x62\x41\xd9\xea\xd8\xf6\x39\x1d\xca\xb8\x79\x2c\xf3\xc8\x2d\x11\xa8\xe6\x52\xd2\x45\x45\x8e\x90\xd4\x4a\x65\x51\x11\x54\x92\x25\x6e\x2a\x25\x61\xa0\x9a\xc6\x75\x85\xd5\x92\x8b\x0d\xc2\x82\xa0\x46\x92\x72\x86\xe6\x84\x20\xcd\x03\x9f\x2c\x94\x54\x25\x7c\xb3\xe1\x42\x43\x51\x98\x56\x72\x36\x69\x9b\xd4\x42\x4f\x72\x45\xdd\x7c\x36\x8f\xa7\xdc\xbc\x5f\x07\x53\xe3\xa1\x9e\x3d\xa6\x95\x46\x8f\x32\x60\x38\x71\x33\x90\x94\x76\xc2\x21\xbe\x74\xdc\xac\x05\x91\x84\x19\x3d\xd7\x03\x8c\x74\x23\xcc\x10\x5f\xfc\x07\x29\x94\x1e\x8a\xd0\x60\x90\x5c\xf3\xa6\x2a\x35\x9b\x6e\x89\x50\x48\x90\x82\xaf\x18\xfd\xbd\x85\x2d\xb5\x40\xe8\x4e\x2b\xac\x88\x54\x03\x98\x94\x59\x29\xbd\xc5\x55\x43\x8e\x60\x32\x69\x9e\x0a\xa2\x7b\x41\x0d\xf3\xe0\x41\x13\x39\x43\x3f\x68\x3a\x51\xb6\xe4\x27\x2d\xa3\x57\x54\x39\xa5\x5e\xf0\xcd\xa6\x61\x54\x6d\x8f\x81\x8b\x74\xd1\x28\x2e\xe4\x71\x49\x6e\x49\x75\x2c\xe9\x6a\x8a\x45\xb1\xa6\x8a\x14\xaa\x11\xe4\x18\xd7\x74\x0a\xa8\x33\x10\xbf\xd9\xa6\xfc\xbc\x15\xf5\x87\x3d\x5c\xd5\x56\x2b\x32\xa9\x04\x65\x2b\xef\x05\x68\xd7\x04\x07\xb4\x76\xd5\xf3\x13\xdb\x4f\xcd\x28\x3a\x42\x9b\x89\x44\xd0\x9b\x17\xf3\xab\x6e\x32\x69\x66\x0c\xa9\x0f\x74\xef\x3e\x94\x1d\x0b\x34\xc1\x28\x5b\x12\x61\x98\xb8\x14\x7c\x03\x30\x09\x2b\x6b\x4e\x99\xb2\xaa\x8d\x12\x36\x24\xbf\x6c\x16\x1b\xaa\x34\xdf\x7f\x6b\x88\x54\x9a\x57\x33\x74\x06\x96\x4e\x4f\xab\x46\x4f\x75\x2d\xb7\xaf\x18\x3a\xc3\x1b\x52\x9d\x69\x3b\xf7\xb1\x19\xa0\x29\x2d\xa7\x9a\xb0\x79\x2c\xf0\x8d\xf4\xb0\xb1\xa1\x9a\xf7\xc2\xd9\xcf\x08\xbf\xf4\x6b\xcd\x2e\xd0\x91\x35\x29\xe8\x92\x16\x30\x17\xcc\x14\xd1\xf3\x53\x52\x41\x4a\xb4\x20\x6b\x7c\x4b\xb9\xb0\xbf\x0f\xe8\xba\xa3\xdc\x67\xbd\x06\xe1\x29\x6d\x90\x01\x25\x72\xa6\xdf\x42\xd7\x64\xd8\x62\x68\xfd\x76\xbf\x30\xe2\x26\xc8\x92\x08\xc2\xb4\x30\x71\x2d\x7d\xa4\x10\x44\x81\x36\xc5\x94\xf5\x09\xd8\x92\x6c\xdd\x6a\x31\x54\x78\xf0\xb4\xaa\xd4\x43\xde\x42\x8b\x5d\xc5\x3c\x33\x46\x0d\x2c\xc5\x50\x6c\x01\x61\xce\x1e\x2a\x4b\x4e\x80\x41\x05\xe2\x77\xcc\xef\xe3\x28\x30\x72\x3d\x0e\x50\x9b\x01\x90\xd7\x0c\x4c\xb4\x1d\xd5\xa6\x91\xed\xd0\x00\xc7\x25\xd7\x36\x50\xcf\xad\x1b\xb2\x95\xa0\x55\x40\x42\xf4\x77\x08\xa9\x4a\xce\x0a\xa1\x76\x29\x8b\x7a\xc3\x5e\xd2\xca\x38\x01\x7a\xb6\xd9\xcf\x6e\xc8\xf6\x44\xc3\x1c\xbc\xbc\x66\xe8\xd5\x12\x35\x4c\x12\x75\x14\x80\x8a\xd1\x1d\xad\xca\x02\x8b\xb2\xd7\x81\xe6\x53\xa3\xf8\x06\x2b\x5a\xe0\xaa\xda\xa2\x15\x61\xda\x9d\x23\x25\x60\x6c\x4c\xc6\xd5\x8e\x70\x0d\xf1\xa4\x52\x2b\x15\x5a\xb6\x86\x27\x60\x3a\x4b\xbe\xd1\xb4\x39\xd0\x70\x65\xb3\x30\x7f\xca\xc3\x10\xae\xac\x04\x20\x1d\x2e\x5e\x5f\x0f\x25\x3a\x3b\xd5\x83\xa9\xb4\x7a\xe8\x23\xaf\x55\xf9\x0a\xbe\x08\x40\xbd\xa3\x6a\xed\x7b\x58\x0f\x25\x52\x42\x73\x4d\x2a\x2e\xc8\xcc\x12\x30\x4a\xa7\x00\x44\x4d\x1d\x40\x56\xae\xb1\x30\xd2\xb9\x69\x2a\x45\xeb\x8a\xa0\x97\x57\x57\x97\xc7\x4f\x10\x61\x78\xa1\xdd\x02\x01\x82\x89\x0e\xee\xd6\xb4\x58\x23\xba\xa9\x2b\x1a\x94\xd3\xd3\xf3\xcb\x8b\x43\x8d\x25\xb3\xda\x52\xa2\x03\x3a\x23\xb3\x23\xa4\x3d\xff\x45\xb5\x45\x0b\xc1\xef\x24\x11\xf2\x10\x6c\x3a\x56\xa8\xa2\x0b\x22\xd4\xd6\x38\x57\x8d\x0c\xb1\x4a\x7b\xb1\xbe\x8b\xa3\x59\x4a\x25\xda\x10\xac\xdd\x1d\xdb\x13\x78\x98\x00\x41\xff\xd4\x36\x46\x8a\x07\x59\xc4\xd5\x5a\xfb\x43\xad\xff\xa9\xbd\x38\x2d\x07\x15\xbd\x21\x15\x60\xb3\xc4\xb4\xb2\x3d\x59\x55\xd5\x80\x87\x69\xd8\x5a\x55\xdb\x00\xdc\x1b\xa6\x67\x25\x96\x3e\x02\x05\xc7\x15\x91\xda\x5d\x9b\xb9\x49\x47\xd9\x54\xe3\xe9\x73\xe8\xe0\x6e\x4d\x34\x4a\x01\xa0\x9d\x1c\x71\xa1\x99\x26\xa6\x56\xaf\x92\xf2\x70\x54\x92\x40\x6e\x02\x40\x5b\x1f\xfc\xa1\x44\x8b\x86\x56\x6a\x4a\x19\x7a\x7d\xda\xa8\xb5\x51\x56\xc2\xf3\x9f\xdc\x13\x57\xba\xfa\x81\x65\x48\xe0\xf7\xa1\x3d\xd7\x2b\x19\x67\x0b\xac\x8a\x55\x41\x8b\x98\xf2\x3d\xf9\xad\x76\x3e\xc9\xdd\xb1\x75\x3c\xa7\x7a\x98\x53\x63\xab\xe4\x31\xac\xdd\x8e\x3f\x87\xff\x04\x31\x42\xe8\xea\xf5\xf3\xd7\x27\xe8\xb4\x2c\x91\x91\x84\x46\x92\x65\x53\x19\x5f\x52\xce\x3c\xe7\xf0\x08\x1c\x94\x23\xd4\xd0\xf2\x8f\x0f\x83\xc0\x22\x46\xd5\x7f\xb9\x63\x44\x81\x2c\xa0\x42\x46\xad\x93\xd1\x3b\x60\x91\x9e\x5f\xcc\x81\xcc\x6e\xf1\x91\xb0\x28\x11\xbd\x64\x0d\x82\x96\xef\x82\xb3\x25\x5d\x35\x82\x74\xb3\x7e\x49\xb0\x76\x29\x24\x68\xf9\x47\xe8\x3b\xab\x0d\xcf\x39\x2e\x9f\xe1\x0a\xb3\x82\x88\xb9\xe9\x39\x00\xbe\xf5\x95\x60\x89\x22\xd7\xda\x76\x48\xa5\x85\x70\xb5\x3d\x42\xdd\x30\x50\x00\x83\xe7\x17\xf3\x00\x44\xed\xb9\x8a\x52\x5a\xa7\xdf\x82\xbf\x6c\xa1\xcf\x2d\xf0\x99\xc1\x16\x2c\x68\xa3\x17\xd3\x08\x77\x73\x26\x64\x4c\x77\x0d\xf4\x91\xd1\xac\xde\x7c\x74\xf3\xca\xd8\x05\xb3\xf6\x32\x63\x88\x51\x56\x49\xcf\x2e\x18\x9c\x77\x2d\xb2\xc5\x55\x2b\x01\xe3\xc6\x52\xe9\xe8\x15\xc4\x55\x71\x44\x59\x49\x6f\x69\xd9\xe0\xca\xae\x24\xa5\xc2\xaa\x91\x44\x22\xc9\x8d\xda\x22\xac\xd4\xfa\x44\x48\xab\x81\xd0\xdd\x9a\x08\xf0\x5a\x14\x16\x2b\x32\x94\x3b\x60\x96\x5b\xdb\x6a\x91\x6a\xe9\x7c\xcd\x1c\x9f\xc0\x1f\xd0\xfe\x2b\xa3\xbf\x35\x04\xe1\x0d\xd7\x64\xad\xaa\x5d\xbf\x4c\x06\xcd\x35\x2b\xb5\x3e\x1e\x3a\xc1\xc6\x46\x91\x4d\xad\xb6\x47\xdd\x6a\x0f\xc6\x08\x50\x67\x46\x22\xfa\x71\x20\x6b\xef\x02\xbd\xcc\xb4\x1e\x9c\x19\x8c\x03\xea\x2a\x31\x2f\xe3\xc2\x34\x36\x1d\xe3\x5f\xfa\x73\xcb\xb2\xd4\x9f\x9b\x21\x17\xa4\xf3\x2e\x1c\x58\xa0\x86\xd1\x48\x76\x55\x2d\x8f\xac\x15\x46\x15\xc7\x25\x5a\xd8\x79\xd8\xaa\x78\x6d\x10\x43\x2c\x20\xaa\x98\xf5\xbc\xaa\x9e\x73\xaa\x8d\x1a\xd6\xc8\x72\xa6\xb5\xae\xc0\x52\x89\x06\xd6\x13\x7b\xf3\x00\xa4\x71\xe6\x96\xea\xd6\x41\x3c\xfd\x69\x7e\x62\x1a\x04\x94\x07\x3a\x00\x67\xe6\x85\x95\xc1\x00\x54\x08\x7a\x1d\x6a\x38\xbf\x37\x82\x9c\xe4\xc1\xe9\xbe\xfa\xfe\xec\x32\x64\x89\xae\x33\x11\xea\x00\xbd\x7a\xf6\xc3\x59\xc5\x9b\xf2\x24\x53\x07\xc6\xe0\x9c\xd3\xc5\x2d\x15\xea\x04\xa1\x97\x5c\xaa\x0b\x1b\xb5\xb9\x66\xe8\x94\x6d\x2d\xbb\x1d\x01\x43\x4a\x40\x2f\xe7\xd0\x81\x89\x96\x6a\xfd\x76\xc1\x19\x39\x6c\x79\xa9\xb8\x0f\x15\x98\x1e\x97\xd2\x90\x18\xee\x4c\xd4\x7d\x4d\xff\xba\xeb\x3e\xc3\x03\xf0\x5a\xa3\x35\xaf\x4a\x89\x6a\x2c\xf0\x86\x28\xad\xc1\x9c\x07\xee\x8d\x28\x62\xc1\x53\xf6\x66\x86\x2e\xcd\x1a\x1f\x71\xa6\xdd\xa1\x25\xd0\x50\x4b\xbd\x4f\xa9\x84\x35\x0f\x1a\x6c\xfd\x54\x9e\x1c\x64\x8c\xd5\x6f\x1e\x1f\x6c\x6f\x66\x87\xd1\x42\xd1\x11\x05\x24\x33\x0c\x22\xcd\x43\xdb\xe2\x96\x96\x44\x5c\xb6\x28\xc6\x5a\x0e\xd5\xe2\xee\x97\x76\xb4\x6e\xb5\xdf\x1b\x62\x14\x28\x02\x17\x50\x6c\x4c\xc0\xc0\x85\x0f\x5c\xfc\xab\x61\x25\x11\xd5\x56\x33\xba\xaf\xb3\x5a\xc4\x63\xb4\x43\x66\xc1\x1b\x30\x3e\xad\xff\x5c\xeb\x35\x8d\x0d\x30\xb6\x1d\xef\x0e\x2b\xd1\x81\xf1\x1d\x8d\xa7\x60\x62\x90\x08\x2f\x78\xa3\xec\x7a\xdd\x75\x19\x98\x5d\x1e\xfd\x47\x38\xa4\x1f\x7c\x97\x7c\x3d\x64\x0d\xbe\x93\x6e\x1c\xb2\x75\xb9\x2c\x81\x89\x52\x94\xad\x76\x62\xd8\xc1\x5e\x05\xe9\x31\xe4\xf4\xa7\x79\x9f\xa9\x32\x62\xdf\x47\xe0\xa6\x19\xa0\x91\xdf\xa5\xeb\x18\xaa\xfb\x51\x1d\x65\x53\x5e\x3f\x45\x85\xa5\xa4\xc5\xf9\xa8\x1e\xf0\x9f\x1e\x47\x02\x10\x76\xa6\x4d\x8f\x4f\xa3\xe0\xd1\x50\xa9\x60\x06\xfc\xb1\x3d\x0d\xf4\x8b\xd3\x24\x19\x60\x87\xba\xe6\xcc\x00\x4c\x4d\x33\xf3\x8c\x68\x51\xff\xb1\x7e\xce\x7b\x10\x34\x00\xe1\x23\x11\xd4\xe5\x5b\x3e\x18\x41\x2f\xce\x9f\x7d\x50\x62\x42\xd3\xfd\xa8\x37\x71\xb8\x68\x15\x0b\xff\xe6\xcb\xdd\xd9\x9d\x31\x36\xf0\xe3\xa5\xc2\x4c\x51\x08\xfe\x19\xb2\xed\xe4\x34\x41\x4d\xfc\xa8\x97\x55\x19\x30\x4d\xc6\x42\x2b\x1f\xbb\x26\xbd\x9e\x58\x19\xbc\x9e\x9c\xa0\x53\x27\x90\x60\x04\xd1\xb3\x3d\x70\xd5\xeb\xa6\x0d\xbe\x21\x12\x62\x40\xda\xa4\x94\xa4\x80\xdc\x98\x44\x7a\x49\x45\xc1\x29\x33\x11\x5d\x25\x30\x93\x35\x17\x39\x0c\xae\xf0\x96\x08\x74\x70\x75\x76\x79\x3c\x9f\x9f\x1f\x22\x6b\xe1\x41\xbb\xd9\x38\xb8\x6d\x02\x21\x36\xfd\x7f\xf3\xc3\x71\x11\x40\xa0\x16\xd1\x20\x34\x0b\x24\x2e\x4b\xc8\xb4\xe3\xca\x69\x47\xeb\x82\xa3\x36\x90\x52\xf2\x42\xce\xf0\x9d\x9c\xe1\x0d\xfe\x9d\xb3\x59\xc1\x37\xc7\xa7\xf0\xcf\x17\x67\xf3\x63\x93\x55\x32\xd9\x05\xad\x04\x57\x0d\x2d\xc9\xb1\x66\xfe\xd4\x31\x7f\x0a\x1e\xe8\x6c\xad\x36\xd5\xe7\x45\xb5\xc8\xc0\xd6\xf2\xea\xe2\xfc\x99\xe1\x93\xf3\xf7\x7a\x7c\xf2\xb8\x90\x01\x32\xc8\x27\x4d\x0f\xd4\x31\x68\x48\xfe\x5c\xc2\xfe\xe3\xc9\xca\xaa\x45\xda\x42\x21\x70\x79\x9b\xcd\xf8\xec\x9e\xba\x59\x91\xd1\xf2\xe2\xfc\x59\xa6\xfa\x89\xc4\xb7\xfc\x47\x90\xdf\x1a\xed\xec\xa5\x51\x9c\x02\xc0\x64\x93\x4c\x85\x37\xae\xec\x7a\x8a\xce\xd7\x73\xe3\xae\xe4\x08\x59\xc2\xae\x3b\x3a\xd5\x32\xd4\x66\x5a\xc1\x69\x9a\x9c\xfe\x34\x9f\x1c\xa1\x09\x2c\x65\x27\xa1\xa5\xba\xff\x4c\x9e\x61\x41\x7e\x20\x0a\x57\xfa\x9b\xef\xcf\x2e\xf5\x7f\x20\x58\xab\x70\x71\x33\x31\xf9\xdd\xc9\x8f\xf3\x7a\x4d\x04\x99\xa4\xe5\x7b\x5c\x5c\xa6\x5a\xd1\x8f\xb5\xd0\x78\x8f\xb4\x69\x91\x1e\x69\xf7\xfd\xd9\xe5\x48\x8b\x76\xa8\x23\xed\x2c\x05\x46\x5a\xbd\x7a\xf6\x43\x86\xa0\x8d\x88\xf6\xb8\x58\x8f\x88\x74\x86\x38\x9b\x2a\x9f\xbc\xc5\x16\xb4\x85\xb0\x60\xa1\x75\x8c\xc9\xb4\xc2\x6f\x58\x21\x93\xa1\xd9\x91\xcc\xd4\x8a\x4b\xda\x9a\x95\x72\x86\x2e\x6d\x51\x46\x4f\x7e\x5d\x38\x63\x62\x64\xef\x95\x2d\x38\x48\x08\x5f\x5a\xf0\xa6\xc8\x81\x48\x34\x49\x04\x87\xcc\x33\xca\xba\x34\xdb\xa6\x86\x64\xf7\x09\x01\x30\x5e\x92\x4b\x1e\xce\x7e\x0e\x3d\x53\xdb\x34\xbe\xf4\xbf\xb0\x2d\xe2\x31\x25\x74\xef\x58\xc7\x00\xf6\xbd\xe2\x1d\xb5\xa0\xb7\xc1\x1c\xfa\xce\x58\x6d\xcb\xf8\x50\x2f\x6d\x03\x37\x98\x58\x10\x62\x9f\x21\x5a\x98\xf7\x1a\x5a\xdc\x7c\xc4\xfd\xe3\x00\x72\xda\xef\x6d\x24\x99\x19\x9f\xd6\xce\x9c\xc8\xd8\x3a\x3f\x36\x14\x85\xbc\x66\xc8\x06\xec\xec\xac\xce\x4a\xeb\x20\xc8\xa8\x98\xb4\x87\x57\x45\xe7\x77\x80\x9c\x04\xc0\x0a\x9d\x99\x22\x97\xde\x8a\x28\x66\x96\x62\xc9\xf0\xae\x72\x0e\x32\x11\xb6\x72\xa0\x8b\x5a\x53\xb6\x8a\xa9\x87\xd3\x20\x6a\x83\x0a\x3c\x3f\x80\xde\x75\x16\x03\x79\xcd\xb4\x17\x97\x97\x39\x0c\x55\xad\xd9\xdf\x8e\x3f\xd7\x3a\x73\x44\x65\x9a\x18\x47\x97\xce\x82\xd0\xba\x97\x76\xef\x12\x2a\x6d\x68\xc3\x15\x50\x06\x53\xd1\xfa\x31\x73\xdb\xba\xb3\x21\xea\x3c\x94\x5d\xc6\x86\xe1\x0d\x99\xf9\x79\x9b\xb8\xac\xb5\x3d\x9b\x69\xc3\xe0\xab\xdf\x39\x23\xd2\x16\xb3\x41\x02\xb1\x64\xfb\x26\x5e\x50\x9b\x7c\x31\xe5\x88\x3f\x73\x66\xb2\xe8\xf6\x47\x33\x29\xf5\xaf\xa6\x60\xd3\xa7\x8d\x41\x69\x13\x5f\x2e\x6b\x41\x68\x84\x20\x4c\x55\x5b\x24\x9b\x5a\xfb\xf5\x6e\x08\xdc\x14\xa7\x9c\xfe\x34\x3f\x32\x7e\x89\xf1\x87\xbe\x3f\xbb\x6c\xe3\xe7\x32\x21\x24\x8f\x86\xe1\xf7\xb1\xe9\xa6\x3b\xd4\x3a\x3c\xca\x37\xa1\xa4\xcb\xb6\x85\x01\x50\x69\xe5\xd7\xe5\xbf\x3e\xc2\xec\x5b\x73\xa9\xbc\x89\x77\x84\x16\xbc\x61\xb1\xd5\xb5\xe2\x30\x22\x8b\xfb\xb7\x5f\x02\x01\xbf\xfa\xea\xa9\xa9\xd8\x6d\xa4\xc1\x59\x10\x59\x73\x5b\x96\xa9\xf5\xb7\x43\x37\xee\x27\x61\xd6\x89\x68\x3f\x53\x15\xce\x87\x8d\x2b\xb5\x5b\x8a\xe1\x83\x0e\x5d\x9b\x3d\x75\x86\xe4\x9a\xa1\xe7\x9c\x48\xc4\xb8\xca\xcc\xb8\xa1\x5e\xd6\x2d\xc1\x90\xfd\x30\xcd\x51\x87\x47\x2e\xff\xae\xb1\x25\xef\xea\x8a\x16\x54\x05\x8b\x48\x50\x67\x04\x6d\xf9\x92\x61\x0b\xe4\x64\x37\x98\x35\x50\xe2\x91\x26\x69\x72\x12\x0c\xfc\x82\xac\x89\x00\x16\x26\xc6\x7a\xdf\xee\x38\xe0\x19\x36\x27\x50\xf6\xe7\x9e\xfb\xda\x1c\x74\xda\x22\x10\x81\xbc\x97\xbd\x31\x25\x72\x2e\x18\x3d\xaa\x09\xb4\xca\x2d\xb7\x0c\x6f\x6c\x19\x0e\xae\x2a\x5e\x40\x17\x8b\x6d\x57\x71\xf3\x07\xb4\xe6\x77\xe4\x96\x88\x23\xdd\xb3\xd5\x70\xb1\x75\x81\xc2\x8a\x16\x00\xde\x41\x83\x84\xaf\x91\x88\x62\x8d\xd9\x8a\xb4\xf5\xc1\xed\x44\x31\x21\xf3\x08\x48\x5b\x7a\xe3\x4c\xc3\x90\x5f\xc6\x6a\x41\x89\xac\xb8\x0d\xe6\x02\x51\xd2\xc3\x9f\x66\xa6\x4a\x75\xcb\xb1\x24\xdf\xd4\x4d\xf5\xc8\xdb\x1c\xe7\x39\xb9\x4e\x88\xaf\x11\x22\x4b\xba\x84\x4b\xa9\x9d\x8f\x97\x04\x97\xc1\xac\x59\xdf\xa3\xf4\x9a\xb6\x55\xe5\x35\xaf\x68\xb1\x05\x65\xfb\xf2\xea\xea\x12\xad\xcd\x7b\x97\x54\x09\xd4\x33\xa3\xb6\xf6\x5d\x2f\xe1\x4c\xd2\xc5\xcf\xf1\x7b\x6b\x38\x28\x84\xdc\x37\xab\xbb\xe4\xe2\x0e\x8b\x92\x94\x06\xd5\x4b\x40\x30\xc7\x61\x0e\x7e\xe8\xa6\x11\x01\x83\xc9\x40\x1b\xae\xf9\x5d\x42\x07\xec\xee\xef\x90\x44\x19\x05\xf5\x9d\xeb\xe1\x08\xfd\x79\xda\xfe\xa1\xff\xd5\xff\x41\x0b\x58\xcc\xb8\xfa\xed\xb4\x10\xf5\xbf\xbc\x14\x5c\x71\xa3\xb3\x77\x7e\x9e\xda\xd2\xb0\x08\xe0\x3e\xfb\xbc\x5a\x1f\xbb\xd5\x42\x3b\x4b\x76\x12\xb6\x31\xc7\x36\xba\x7d\x5a\xd7\x84\x95\xd7\xd1\x38\x91\x59\xdf\x77\xb4\x84\x10\xaa\x06\xb5\x4b\x2d\x0c\xa0\xa4\x8d\x91\x5a\x84\x62\x70\xed\x84\xd7\xcb\x08\xf2\x8e\x4a\x88\xb4\xfa\x22\xa8\x71\x7b\x43\xea\x0a\x17\xe4\x7a\x72\x34\x44\x23\xea\xbf\x44\x91\x6b\x59\xd9\x61\x86\x04\xc0\x87\x95\x0c\x8b\x19\xc6\x16\xb9\x96\x27\x88\x8b\x1e\x8b\x1e\xed\xe0\xfd\x6a\x79\xc1\x19\xf9\x20\x34\xdd\x45\x3b\x66\xc0\x80\xc1\x5b\x98\x7d\xda\xe2\xe3\x4a\x10\x5c\x6e\x35\x80\x16\xaf\x0b\x6d\x04\x3e\x08\x35\xcd\x96\x9a\x10\x4d\x3b\xbe\x46\xfd\xb6\x6d\x98\xe3\xcf\xb6\x4e\x93\x18\xb5\x62\x15\x14\x95\x9e\x94\xde\xc3\x3a\x98\x4f\x23\x2f\xad\x84\x45\xde\x1a\x3e\xc6\x6c\x81\x26\xc1\xfe\x16\x00\xd9\x12\xb7\x57\x91\x38\x51\x5f\xb3\xb9\xb6\xde\xfe\xb8\x7e\x46\x1d\x52\x07\xa8\x80\xdd\x90\xa0\x08\x22\x54\x37\x84\xee\x58\x1a\xf0\x77\xec\xb6\x20\xca\x60\xd7\x0a\x65\x90\x5e\x2b\xf8\x26\xce\x4a\x50\x3c\x6e\x23\xca\x0c\x5d\x6d\x6b\xe3\x87\x1c\x19\xe7\xcb\xf6\xe9\xb9\x61\xc6\xf7\x59\xe3\xdb\x98\x0a\xc6\x56\x73\xb9\xea\x68\x5b\x0e\x68\xfd\x0d\xbf\x3f\xab\xe8\x6c\x1f\x05\x8e\x29\xc7\x85\x31\x46\xda\x21\xf2\x72\x62\xb0\x4f\xce\xee\x06\xd5\x43\x46\xb8\x28\x34\x39\x2a\xbe\x92\xa6\x16\xbb\xa0\x15\x55\x31\x4f\x00\x32\x40\x85\x09\xe6\xb7\xc5\x92\x03\x6a\x74\x66\x74\x68\x34\x23\x20\x99\xf6\xcd\x8a\xb5\x47\x36\xc3\x0a\x40\x10\xaa\xd5\x2d\xe8\xf0\x1c\x18\xaf\x28\x30\x85\x2e\x99\x41\xdf\x87\xa6\x75\x4f\x4b\x11\x0b\xc2\xdb\xb6\x60\x10\x4c\x44\x7b\x3d\xe3\xf4\xf0\xa1\x34\xec\xb5\x55\xee\x86\x2c\x6b\xac\x97\x28\x88\x2c\x97\x66\xfb\x58\xa5\xf9\xc0\xf0\x26\x15\x6a\xa7\xb2\xc5\xab\x9c\xa1\xb6\x6e\xf8\xe5\xe9\xa5\xe0\xef\xb6\x53\x53\x69\x98\xbd\x9a\x02\x88\x9b\xba\x82\x20\x41\xbb\x52\xa0\xd2\x8d\x16\xbc\x7f\x08\x7a\x43\x29\xf4\x96\x29\xfc\x0e\x61\x99\xf0\x24\xda\x81\x57\x7c\x65\xa1\xcc\x90\x11\x07\x32\xee\x42\xa5\x07\x3e\x79\xf0\xd7\x2f\xfe\xfc\x77\x7e\x7d\x8d\x1e\x14\xf4\xe4\x41\x51\xbf\x7d\xb0\xa4\x27\x0f\x96\xf5\xdb\x07\x57\xf2\xed\x03\xa1\x4e\x1e\xd4\xb4\x9c\xfc\x01\x49\x9b\x67\x2c\xb8\x30\xab\xeb\x32\x9d\x4f\xb3\xd4\x43\x25\x2f\x9a\x96\x12\x26\xc6\x75\x72\x7c\x5c\x2c\x38\x53\x64\xb6\xa2\x6a\xdd\x2c\x66\x94\x1f\xaf\x71\x0d\xc4\x2e\x0b\xce\x6e\x8f\x9f\xcc\xbe\x3c\xee\x69\x26\x93\x65\xfc\x76\xf6\x64\xf6\x34\x5c\xc5\x8e\x60\x2f\xe8\xbb\x73\xc2\x56\x6a\x7d\x82\x1e\x7f\xf9\xe4\xab\x78\x3b\xca\x5c\xbb\x2f\xa3\x8d\x6a\xac\x14\x11\xec\x04\xfd\xe5\xe0\xc1\xc1\x83\xbf\x1d\x5c\xff\xf5\x97\xe9\x17\xbf\xfe\xf1\x97\xff\xfd\xe7\x17\xbf\x1e\x1c\x75\xff\x3e\x7c\x74\xfd\xf7\xc3\x3f\x1e\xfc\x72\x3a\xfd\x19\x4f\x7f\xff\xf5\x8b\xbf\x5d\xff\xf2\xcb\xec\xcb\xe9\x3f\x9f\x4e\x7f\x7e\x0b\x3f\x1c\x5c\x1f\xfc\xf2\x97\xc3\x5f\xbf\xb8\x3e\x3c\xfc\xe3\xc1\x51\xfc\xdd\xe1\xa3\xeb\x5f\x0f\x0f\xff\xf6\xcb\x5f\x1e\xfc\x72\x52\x30\x25\xaa\x93\x5f\x7f\x3d\x7c\xf4\x4f\xf7\xcf\x20\xa4\xf6\x34\xa0\x9d\x50\x3f\x08\x63\x6f\x76\x32\x6f\xa7\x83\x37\xef\xd0\x41\x7f\xdb\xf4\xf0\x21\xef\xb0\x96\xfe\x23\x67\x6e\xa6\xb4\x9c\x1c\x66\x98\x8a\x94\x9c\x7a\x46\x64\xa0\x17\x41\x6d\xc3\x1c\x70\xea\xa0\x2d\xfe\xc6\x09\x88\xa6\x2e\xde\x1f\x15\x8c\x16\x77\x91\x45\xca\xd0\x9b\xef\xce\xd0\x93\x6f\x1e\x7f\x83\xa4\xdd\x0b\xf3\xd5\xec\x09\x4c\xbc\x54\x52\x37\x30\x25\x19\x0f\x68\xe1\x78\xfa\xe9\x23\x89\xf1\x3f\xfd\xed\x2f\xbf\x4c\xff\xc7\xe7\xff\xf4\xe0\x7f\x3e\x7c\xf4\x85\x95\xc2\xbf\xbc\xfd\x3f\x78\xfa\xfb\xdf\xfe\xef\xaf\x5f\xbc\x87\x9c\x25\xf3\x14\x89\x97\x15\x5f\xad\xf4\xda\x21\xbd\xda\xb4\xad\xba\x85\x66\x3f\x33\x73\xa7\xe5\xca\xfa\x1a\x0b\x02\xad\xc3\xfb\xcf\xd6\x44\x10\xa7\x35\x77\x8d\xa8\x3d\x47\xc1\x54\x4c\x80\xd9\xd6\x9e\xaf\xdb\x3f\xb6\x68\x42\x01\x0e\xdf\xc8\x43\xe8\x84\x4a\x68\xbe\xcb\xd9\xb4\x31\x35\x70\x72\xfc\x37\xdb\x63\xe7\xbd\xd9\x15\xa8\xdb\x43\xd6\xee\xe2\x4d\xce\xa8\x96\x4c\x29\xaf\xc2\x1b\x1d\x90\x9f\xca\x6e\x7c\xf7\xf5\x18\x4a\xa2\xdd\x74\x63\x08\xf2\xb4\x92\xf7\x85\xc6\xc0\x84\xaa\x7d\xba\xaf\x78\x7c\x1e\xe5\x15\x45\xb6\x71\xb8\x3d\x4a\x31\xba\xd8\x5d\x34\x5b\x78\xe6\x9a\x24\xa1\x22\x4f\xbc\xdb\x91\xc6\xd3\x85\x2d\xd0\x74\xe1\x44\x66\xfd\x89\xdc\xca\x8a\x07\xa6\x5f\x74\xd8\xe6\x83\xf0\x98\xb1\x7b\xeb\xd2\xa3\x33\x94\x59\x57\x38\x1c\xe4\x1c\xe0\xa4\x47\xc8\x19\x79\xbd\x1c\xab\x0d\xc9\x2f\x8a\x45\x08\x97\xa5\x88\x4e\xc2\xfe\x63\xfd\x5e\x44\xeb\xdb\xb8\x6e\xfe\xcf\xc2\xe0\x9b\x64\xf3\xfc\xfe\xb3\x7b\xef\x09\x84\xfd\xca\x65\x97\x5f\x5d\xb6\xbf\x58\xb7\xc1\xc8\x44\xc6\x90\xbc\x93\x0a\x30\x9c\x21\x41\xe8\x2d\x81\x39\x8e\x36\x44\x4a\xbc\x22\xd1\xc4\x58\xf7\x64\x57\x7a\x21\xb7\x22\x8b\xc4\x03\xa3\x03\x9e\xb8\xef\x06\xae\x92\x95\x7d\xf7\x36\x63\xc0\x7c\xd9\x1f\x5c\x4a\x15\xa7\x57\x06\xc3\x21\x99\x10\x47\xc5\x0b\x5c\x3d\x8e\x86\x38\xfc\x27\xb7\x2c\xef\x86\x88\xf1\xd2\xe3\x29\x84\xf6\x33\x9a\x6d\x30\x4d\x97\x5b\x99\x66\x25\x26\x9b\x8c\x8a\xe7\x29\xc2\x4d\x70\xa3\xf0\xb0\x59\xa6\x44\x4e\x51\x55\xe7\x8c\x82\x91\xbb\xf1\xe2\xcf\x29\x6a\x9a\xa2\xce\x68\x56\x88\xec\xa1\x3e\xc9\x68\xb7\x54\x39\x9d\xb2\xac\x56\xb8\x29\xe9\x78\x01\xf1\x14\xe1\x8a\x64\x14\x1a\x9b\xa1\xe6\x8c\x01\xe4\x38\xee\xde\x0e\x1a\x3e\xce\x6d\x98\xdd\xf5\xd3\xdc\x86\x69\x5b\xe0\x35\xfc\x3a\xb7\x61\x5a\xb7\x7b\x0d\xff\xd7\x87\xd4\x8c\x75\xb4\x34\xcc\x7f\xfa\xa5\x53\x5c\x28\x67\x03\xfe\xed\xf9\xa5\xf9\x9b\x35\x9b\x05\x11\xff\x18\x43\xd0\x1a\x48\xa6\x9e\x8e\x73\x7a\x83\xdf\xd1\x4d\xb3\x39\x41\xdf\x7c\xfd\xf5\xd3\x71\xee\x6c\x28\x33\xcd\xc7\x85\xcd\x90\x1d\xb6\xba\x8e\xe8\xc4\xdc\xda\x63\x6b\x5f\xc7\xfc\x8e\xb1\x62\xff\x8f\x53\xa1\x1c\xdc\x8a\xe1\xbb\xf0\xda\x51\xd4\x6e\xfb\x18\x07\xaf\xd1\x2b\xd5\x2e\xe3\x13\xf9\xa6\xd6\x1f\x46\xd7\x63\x7a\xf3\xca\x0b\x3d\xb8\x33\xf3\xba\x40\xb2\xb5\xe2\xb4\x24\x05\x16\x9d\x7b\x3f\x02\x93\xe1\x0d\x29\xc1\xd6\xae\xe4\xf5\xc4\x55\xf7\x04\x02\x1c\x35\x37\x27\x95\x74\xfd\x8d\x40\x8e\xc0\x51\x1c\xdd\x09\xaa\x48\x1b\x58\xf6\xb0\x1e\xa7\xe9\xd5\x9a\x74\x8b\x55\x38\xe4\xc4\x9e\x48\x58\x11\x7b\xe6\x87\x25\x26\xb0\x08\x45\x0e\x9e\xf1\x1f\xf2\xae\x26\x85\x6a\x97\x67\x6d\x8c\x07\x97\x7a\x92\x40\x85\x61\x9f\xca\x2e\xb7\x90\xb9\x28\x92\xbc\x6a\xcc\x29\x28\x46\x19\xe0\xd2\x2e\xfb\xec\x09\x57\x54\xe6\x8f\xfe\x82\x2b\x9b\x08\x30\xd5\x86\xfd\xe1\xda\xd3\x58\xe0\xbd\xf9\x1b\x8f\x79\x71\x0b\x82\x4a\xc1\xeb\x9a\x94\x36\x5b\x86\x04\x56\xc4\x3a\x76\x12\x91\x77\x05\x21\x36\x7d\x99\x2b\x50\xa2\x61\x8a\x6e\xc8\x43\xe9\xf6\xdd\xd8\x4c\xcc\x90\x1e\x0f\x25\x2a\x70\x8d\x0b\xaa\xb6\xa3\x03\xd7\xf3\xc4\x2c\xa9\xf4\xbf\xcf\x1d\xff\x61\x7d\x69\x0e\x86\xda\x59\xb7\x8d\x33\xbe\xcf\x60\x98\xa9\xee\x74\x27\xcc\x06\x3a\xdc\x1c\x6c\x03\x7a\x7c\x04\xaa\xc5\xa4\xf3\x89\x41\x64\xb3\x84\x6c\x04\xf2\x1a\xf7\xb2\x46\x6d\x8a\xcb\xf6\x68\xf6\x7d\x15\x64\xc4\x59\xce\xd9\x90\x90\xb7\xee\x9f\x5a\x96\x64\x28\xe9\xff\x02\xd5\xfd\x6b\xa5\xea\x33\x5c\xab\x46\x90\x33\xce\x6f\x92\xcb\xc9\xfe\x56\xf9\x9d\x0f\xbd\x75\x13\x04\x5f\x0b\xfb\xf3\xc8\x0e\xde\x2e\xc0\x57\x18\x70\xc3\x2c\x5b\x3c\xb2\x97\x80\xca\x78\xdb\xbf\x9e\x12\x0e\x74\x7c\x4a\x51\x45\x36\xc9\x35\x72\x6f\xf4\x3b\x79\x6e\x4b\x0a\x3d\x70\x43\x8e\x2e\x92\x97\x14\x04\xcc\x7c\x62\x99\x19\xb0\x4b\x91\x94\x26\xc8\x0d\x04\x6c\xb0\x2a\xd6\x57\x19\x9b\x30\x7b\x03\x6d\xbf\x1a\xac\x8a\x9d\x0b\x00\xef\xe3\xe5\xc3\xdd\xb3\x20\xa8\x26\x42\x7b\x6f\xe6\x68\x0f\xa3\x3b\x61\xd0\xa6\x6c\x38\xb0\x41\x69\x14\xe8\xe4\xc5\x3b\x5c\xa8\x89\xdb\xd0\x49\xf4\x5f\xee\x2c\x46\x83\x19\xec\x0b\xb9\x14\x64\x49\xdf\x4d\x50\x3a\xb9\x61\x9e\xf6\x2c\xc7\x1a\x3e\x32\x60\x8c\x08\xba\xde\xfc\x9c\xe2\x51\x32\x15\x61\x1e\x48\x3f\x38\x97\xa7\xfd\x12\xd9\xe3\xec\xe0\x2d\x08\xb6\xed\xc5\x62\x3b\x0a\x96\xb6\x9b\xe7\xe1\x4c\x59\x87\x6f\xaa\x1f\x03\x7a\xdc\xc7\xb6\xd8\x7c\xc7\x45\x97\xf2\xb1\x46\xa0\x25\x2d\x08\x45\x36\xb2\x9a\x0f\x1d\x06\x68\xb2\xe4\x7c\x62\xea\xf9\xac\x8c\xc3\xd1\x68\xad\x38\x94\xa6\xc5\x28\x58\x2e\xa0\xe1\x02\x8b\x09\x5a\x34\x0a\xea\x59\xb4\x53\x69\x61\xe8\xdf\xdb\x3c\x92\x80\x1a\x55\x55\xac\xc7\x17\x4a\xc8\xe1\x42\x65\xd6\x1c\x44\x99\xa1\x96\x29\x02\x11\x1a\x6d\x95\xc5\xa7\xec\x85\x5f\x97\x74\xda\x6f\xe6\xdb\xaf\xbc\x99\x8f\xdd\x82\x0a\x55\xe6\x15\x4f\xe5\xcb\x2c\x9a\xda\x8f\x35\x53\x0a\xb4\x9b\xdb\x7a\x60\xf2\x14\xae\xc2\xc8\x56\x58\x8c\xa5\xca\xcd\xe3\x09\xca\x91\xfb\xc3\x3b\x63\x96\x33\x32\x2d\xd6\x58\xe0\x42\x41\x71\x6e\x45\x37\x14\x0e\x7e\x4e\xa7\xf7\x3a\x74\x8d\xcf\xa4\xc4\xd6\xf3\xf4\xa8\xb4\x63\x36\x69\x78\x93\x8e\xd4\x63\xc9\xd1\x7c\x4a\x34\xcc\x54\xdb\xda\xc9\xe8\xf9\x42\x33\xe4\xf9\xaf\xe3\x35\xe2\x3e\x15\xda\xc5\x03\x1c\x12\xbb\x81\xd3\x9d\x31\x92\xa4\xc6\xe0\xae\x42\xad\xbd\xd3\xb5\x8a\x8f\xed\x81\xd4\x4f\xcb\xd6\x5e\xa9\x20\x18\xe4\xb6\x9c\x66\x04\x48\xbb\xe4\x4e\x26\x38\x6d\xdb\xdc\xf5\x76\xfe\x6a\x3b\x9d\x17\x37\x4f\x2a\x3b\x8e\x07\x56\xe9\x95\x92\xa3\xb5\x16\x76\x30\x2e\x37\xed\x67\xa0\x3d\x60\xbb\x19\xe8\x51\x90\xdf\x3c\xf9\xe6\x6b\x2f\x43\xfd\x38\x83\xf6\x59\xe9\x65\xdb\x3a\x27\xc9\x6c\x9e\x2e\xd5\x1c\xcf\x33\x27\xea\x19\xcc\x93\xad\xb0\x3a\x43\xb1\x37\x27\xad\x7d\x89\xf0\xd3\x1a\x49\xc3\xd6\x51\xea\x0f\x4a\x0e\xc6\xd9\x3a\x6e\xb2\x4d\xe1\xc1\xff\x97\x6c\xcd\x09\x83\x4d\x3b\xd7\x62\xa4\x95\x25\xc8\x58\x80\x6b\x2c\x0e\xb6\xc1\xef\x5e\x81\xe3\x9f\xd0\x40\xac\xa9\x20\x90\x72\xa2\xd5\xf8\xd8\x62\x0b\x0b\x11\x8d\x2e\x78\x4b\xa6\x68\x35\xbe\x7b\x76\xab\xf2\xfb\x5f\xb6\x35\x13\x3d\x3d\xfd\x8f\x5a\x6a\xb9\xfe\x7b\x4b\x2d\x74\xcd\x7a\x96\x8d\x4a\xc4\x6b\x73\xdc\x36\xab\x6c\x8d\x65\x72\x75\xa4\x38\x2a\x2a\x82\x85\x22\xef\x94\x9b\x76\xde\x65\x02\x0c\x4a\x44\x25\x29\xb4\xf7\x38\x7c\x9d\x00\x6b\x4a\x4b\xdc\x5e\xf4\x50\x28\x8e\x88\x0d\x65\xb0\x81\x9d\xb0\x42\x6c\x0d\xd2\x07\x23\xc4\xa5\xf2\x08\x91\x72\x45\xa6\xed\xe7\x50\xff\x2d\x88\x85\xe1\x63\x77\x38\x43\xe8\x65\xb2\x48\x1b\xf5\x4e\xbf\x6b\xd9\xa5\x71\xbf\x3a\x9f\xa3\x1a\x4b\xa9\xd6\x82\x37\xab\x75\xef\xf8\xe1\xf7\x3d\xc0\xcb\xda\xf8\x7d\x02\xc3\xf6\x93\xde\x26\x0a\x4d\x5c\xbf\x98\x6b\xa4\x22\xdd\x3d\x9a\xe1\x66\xa4\xc9\x9c\x29\xe3\x7b\xc2\xed\x89\x65\x7a\x51\x31\x1a\x06\xd8\x21\x40\x2a\x14\x60\x78\x9c\x19\x0a\x40\x5e\x38\xc0\x2f\xc2\xde\x2f\x1c\x80\xf6\xaa\x0d\xd8\x63\x71\xb0\x33\xf0\x9c\x05\x42\x06\xcc\xee\xc0\x12\x3b\x68\x5b\xf8\x6b\xce\x0c\xf7\x7f\x73\xde\x78\x16\xd0\x84\xc7\x1e\xf2\xc8\xb3\x60\x66\x78\xed\x79\x35\xc4\xdd\x93\xeb\xb9\xef\x43\xcf\xf7\xf1\xde\xd1\x7e\x59\xb0\x7d\x3c\x73\x94\xe9\x9d\xa3\x51\x0f\xdd\x2b\xeb\xcc\x74\xe5\x50\xda\x9d\x0b\xd7\x89\x66\x41\x8d\xd5\x92\x66\x7c\x9c\xe3\x7d\x25\x8a\x37\xbb\x67\x8f\x14\x70\x5e\x32\x32\xd7\xc7\x32\x2d\x47\x4a\xf0\xd1\x3e\xe7\xc4\x65\x3a\x5b\x28\xcb\xe1\x42\xe6\x82\xa6\x9a\x33\xb9\x57\xae\xd3\x7d\x13\xb3\x69\xf6\xed\x87\x37\x6a\x7b\x01\xfe\x64\xd5\xe2\xcf\x27\xab\xf6\xc9\xaa\x0d\x71\xfa\x64\xd5\x3e\x59\xb5\xff\x1e\x56\x2d\x33\xaf\x7b\xce\x57\xdf\xed\xb3\x91\x6f\xd2\xfb\x28\xbc\x9f\xcf\x56\xeb\xa4\xf3\xdb\x56\x9b\xb8\xb4\x5c\x7f\x33\xe6\xde\xbb\x1d\x51\x5f\x47\xc1\x55\x06\x46\x39\xf5\x76\xe2\x3d\x94\xed\xde\xb8\xe1\x86\xba\x04\xe0\x6b\x48\x72\xd9\x0d\x6d\x71\x10\x47\xed\x1e\x39\xdb\x34\x95\x28\xfe\xd0\xbb\xe2\x52\xe8\xef\x84\x58\x1c\x9f\xbc\x10\xcb\x6e\x20\x25\x15\x74\xc8\x0e\xb1\xf4\x03\x29\xa9\xc8\xc8\x5e\x21\x96\x50\x20\x25\x01\x3c\x15\x62\x79\xa5\x50\xe9\x4e\xe1\xc1\x66\xd7\xa8\x4b\xbe\x18\x32\x8d\x44\x89\xee\x17\x69\x79\xef\xe3\xff\xbc\xb2\xba\x60\x8b\xfb\x6e\xca\x62\xee\xa2\xd6\x39\xa9\x48\xa1\x78\x60\x5b\x4c\x5f\x1f\xec\x7c\xe0\x5f\x24\xb2\xa4\x95\x22\xc6\xc5\x91\x04\x14\x43\xdb\x3c\x64\xb9\xc6\xef\x05\xb2\x7b\x7d\x4d\x17\x70\xe3\x91\xee\xd0\xcd\xf1\x30\x31\xe5\x1a\xbb\xeb\x61\xa2\xb7\x89\x30\x87\x2b\x65\xab\xbd\x4f\x1a\x81\x78\xf4\x8b\x77\xb5\xc6\xb5\xbb\x1d\x38\x49\xb6\xe1\x27\xe6\x82\xa4\x8a\x4a\x20\x52\x85\x17\xa4\x42\xd2\x11\xd4\xca\xc2\x06\x2e\x7d\x8c\x88\xd4\x15\x5c\x47\xd5\xb5\x03\xcf\xff\xf4\xe2\x79\xcc\x65\x4e\x7a\xfb\x3d\x54\x4f\x13\xe8\xd8\x8b\x2d\xdd\x9b\x64\xf4\xd3\x16\xc1\xd9\x4c\x99\x3c\x42\x18\xdd\x90\xad\xc9\xc6\x62\xd6\x15\x65\xda\x5a\xbf\xaa\x3d\x1c\xf4\x86\xc4\x35\xa9\xfe\xd8\x5e\x0b\x1a\x69\x93\xb3\x22\xb8\x21\xc9\x8d\x20\x3d\x72\xdc\x90\xad\x2b\x71\x35\x74\xd1\x3f\xb4\xbe\x70\x4b\x8a\xf1\xc8\xb5\x5e\xf5\xa5\xac\x4e\x96\x6b\xe3\xa8\x96\x8d\x7e\x4b\xe6\xee\x1e\x51\xc3\x88\x87\xd2\x10\x5d\x4b\xe3\x9a\xd6\x63\xe5\x3a\xd8\x4d\x68\x77\x29\xab\x39\x3e\xd2\x81\x37\xf2\xf7\x8a\x1d\x69\xd3\xa3\xff\xf3\xe2\x1d\x95\x23\xde\xaa\xe6\xe5\x73\x4e\xe4\x05\x57\xd0\xfa\xbd\x89\x63\x50\xcb\x26\x8d\xad\x29\xd2\x22\xcd\x8c\x73\xa5\xc7\xe7\xdf\xda\x2a\x67\x76\xd7\x7d\x72\x1c\x2d\x89\xa9\x44\xaf\x98\x36\x3e\x96\x06\xed\x5a\x4c\x5a\xf0\xce\x23\x67\x9c\x4d\xc1\xbd\x49\xfb\xce\x76\xc7\xbf\x0f\xdf\x90\x55\xf7\xe1\x53\xce\xef\x2a\x4d\xf2\x1e\x1a\x06\x05\xa3\x61\xcd\x1b\x73\x23\x70\x85\xb5\x4e\x2e\xe1\xf8\x3c\x53\xfb\x84\x15\x59\x8d\x1c\xd0\xbd\x21\x62\x45\xb4\xa3\x5f\xac\x53\xa3\xca\x88\x3a\x64\xfa\xf8\xe3\x4e\xf1\xd8\x0a\x60\x9a\x50\x35\xd3\x96\xec\x91\x06\xa3\xfe\x76\x1a\x3f\x30\x08\xe7\x5a\xa1\x44\xa8\xd1\x9d\xe8\x7e\x39\xaa\xd1\x46\x29\xb6\x6b\x8b\x4c\xd7\x46\x9f\x6f\x70\xad\x25\xff\xaf\x5a\x3d\x83\x10\xfd\x1d\xd5\x98\x0a\x39\x43\xa7\x70\xdb\x7b\x15\x93\x7f\xff\x0b\x5b\xc4\xe2\x03\xd7\x70\xb5\x23\xff\x5b\x43\x6f\x71\xe5\x0a\x90\x19\x22\x55\xea\x40\x4d\x57\x40\xe8\x59\xcb\x23\x74\xb7\xe6\x92\xd8\x7b\x58\xed\xfa\x60\x72\x43\xb6\x93\xa3\xde\x0c\x89\x40\xd4\x8d\x5f\x31\x7b\x18\xf9\xce\xa4\x6c\xed\x14\xb8\xc7\x13\x78\x37\x99\xed\x18\xd8\x08\xec\x11\xb3\x7b\x6f\xb7\x8c\x97\xe4\x52\xcf\x43\xdd\xf7\xa8\x4b\xe6\x37\xb6\x9b\xd8\x65\x7b\x68\xa3\xf3\xa6\x10\xbf\x75\xae\x59\xb1\x26\x65\x53\x85\x85\xc5\x2e\xe6\x42\xae\x58\xcf\xa1\x6a\xaf\x24\xea\x5f\x76\x7e\xe1\xe3\x12\x00\x9f\xb8\xf7\xdc\x3d\x23\xf7\x76\xf2\x32\xe1\xab\x86\x89\xe3\xbb\xaa\xed\xc9\x83\x03\xd3\x5d\x7a\x17\xfb\x45\x78\x1d\x3c\xdd\x31\xed\x68\xda\x5b\x18\x16\x44\xe1\x59\xff\x98\x5f\x1e\x9d\xcd\x15\x65\xcd\x3b\x3b\xd2\xa9\xe0\x15\x19\x7c\x79\xc7\xc5\x0d\x11\x27\xe8\xe1\x43\xdb\x73\xdb\x6f\x5b\xdf\x19\x81\x2c\x87\x2e\xbb\x9e\x10\x56\xe1\x4b\x1f\xf3\x7b\x6f\xf9\xcf\x73\x8d\x77\xb8\xb4\x8f\x7b\x9c\x8c\xeb\x7b\x8e\xf3\xde\x2e\x32\xda\xbb\xe2\x3b\xdf\x55\x4e\x1b\x3c\xd8\x36\x71\x0f\x77\x79\x04\xaa\x51\x98\xe3\x2e\x33\xda\x23\x90\x3e\xe2\x3a\xef\x90\x28\xcf\x7d\x1e\xcf\x16\xb4\x51\x8b\xb1\x70\x63\x76\x84\x30\xc7\x95\xde\x19\x4e\xae\x3b\x3d\x3a\x20\x7b\x47\xfb\x1e\x2e\xf5\x28\x48\xeb\x1b\xee\xe3\x56\xa3\x7d\x08\x36\xee\x5e\xa3\x7b\xba\xd8\xe3\xd4\x1a\xb8\xc1\xe3\x6e\xf6\x28\xc8\x9e\x1b\xbe\x87\xab\x9d\x85\x6b\xd0\xeb\x4f\xba\xdb\xa3\x60\x77\xdd\xf1\x5c\x97\x1b\xe5\x26\xfb\xf6\x0a\xaf\xe7\x66\x5a\x73\x0a\xfc\x52\x2b\xfe\x0c\x57\x1c\xe5\x86\xdd\xc7\x71\x1e\x75\xcb\xd1\x9e\xae\x39\xca\xa5\xea\xbd\x5d\xf4\x44\xc7\xc6\x79\xdf\xdb\x4d\x4f\x0d\xc5\x77\xe0\xf7\x74\xd5\x53\x60\x07\x73\x2f\xd7\x5d\x4f\x80\x8c\x3a\xf2\x39\x6e\x40\xe6\xe2\x2e\x7e\x57\x07\xaf\xec\xf1\x52\x59\xe7\x3c\x79\xcd\xfb\x9e\x8f\xff\xa2\x73\x53\x63\xcb\x9c\xd4\x21\xe4\xb2\xbd\xcd\xdf\x8b\x82\x6a\x56\x6a\xa5\x04\xfd\xa5\x6f\xab\xc8\xba\xac\xa2\x97\xac\x38\xd6\x6c\x52\x53\xcc\xca\x69\x37\x8c\xe3\xb0\x63\x99\x1f\x9d\xbc\x82\xa3\x5d\x4b\x93\xd7\xb8\x6a\xe1\xc2\x68\x94\xc2\x7a\x65\x03\x1b\xa5\xcd\x9b\x84\x8b\x84\xd9\x16\x01\x86\xee\x5a\x37\x55\xb8\xf3\xe4\x95\x80\xeb\xe5\xff\xa5\x9d\x36\x47\xe6\x78\xc9\x7f\x4d\x1e\x2b\x8f\xba\x89\xa5\x15\x75\x2b\xce\xff\xe2\xfe\xf5\xaf\xef\x13\xb2\x34\x18\x64\x7b\xa6\x2f\x4c\x66\xa3\x7f\xeb\x92\x19\xae\x3d\x2a\x53\x71\xbb\x8d\x2d\xa9\xe7\x5f\x80\x78\x98\xcd\xd2\x76\xf3\x5c\x55\xf5\x00\xc9\x99\xb9\xca\xde\xdf\xfd\x66\x36\xed\x65\x38\x13\x30\x17\x2f\xf8\xdc\x2c\x48\xc9\x11\x6c\x72\x22\xa2\xfb\x05\x74\xc0\x05\x7f\xf1\x8e\x14\x4d\xec\xde\x1c\xf3\x64\x29\xd9\x7d\x02\xbf\x7f\xea\x3c\x57\x33\xde\x9e\xe7\xda\x89\x74\x6e\xe8\x37\x49\xcb\x1b\xb2\x6d\x83\x8d\xce\x67\x1e\x4d\x80\x7a\xa1\x47\xe7\x63\x18\xa7\xe5\x0f\xee\xfa\x82\xcd\xc2\x1d\xc5\x60\xf7\xbb\x5b\xa6\xa7\x83\x84\x55\xd5\xb2\x47\x2f\x3e\xaa\xca\xa0\xf7\x9f\x1e\xbb\x7e\xfd\x81\x62\xd7\xad\x0d\x09\xbb\xd8\x9e\xdf\xfc\xe2\xb7\x06\x57\x33\xf4\x3c\xe7\x2e\x60\xc5\x5d\x73\x0b\x60\x27\xd4\xd5\x5e\xb2\xb3\xe4\xb6\xae\x27\xcd\x4d\xc9\x8d\x7c\x61\xd0\x70\x05\x66\xad\x1a\xeb\x24\x05\x8e\xda\xc2\xa8\xc6\x42\xd1\xa2\xa9\x70\x7a\xe9\xa4\xe7\xfe\x8a\x8b\x64\x9c\x39\x8b\x77\x9d\xb8\xcf\x49\xc1\x59\x99\xbf\x46\xbe\x1a\x7e\xe9\x73\x13\x0e\xea\x26\x82\xf2\x72\x6c\xd7\xa0\xa2\x1b\x32\x9c\x78\x07\x26\xd1\xdc\x1e\x1c\xb2\x74\xba\xad\x55\x18\x23\xb3\x47\xad\x89\xb8\xa3\x50\x39\xe0\x57\x1e\xd0\x15\xe3\x82\x94\x87\x9d\x15\xe9\xb4\x40\x5a\x5d\xfa\x87\x90\x53\xe5\xae\x4f\x81\xf8\x8c\xc5\xd5\x4e\x43\xcb\xd6\x16\x6c\x12\xea\x92\x0b\x38\x30\xfd\xa0\xe4\xe6\x3a\x96\x5b\x5a\xa8\xc3\x19\xfa\x99\x08\x6e\x36\xd1\x92\x15\x56\xf4\xb6\xf5\x94\x46\xb7\x20\x42\x59\x98\xb9\x4d\x04\x4b\xf4\x25\x3a\x00\x90\x88\x6e\x36\xa4\xa4\x58\x91\x6a\x7b\xe8\x72\xb2\x72\x2b\x15\xd9\xa4\x86\xed\x9d\xbe\xf3\x4d\x6a\x1f\x52\x5e\xfd\x14\x0c\x21\x5b\xba\x7e\x84\x4a\xa7\x9e\x9a\x76\x47\x80\xf7\x44\xc5\x9a\xf7\x51\x1d\x1d\x5d\x07\xfa\x95\x75\x5d\x99\x62\x8e\x8a\x6e\x85\xec\x3f\xb4\x9c\x62\x24\xc8\x4a\xcf\x5b\x3b\xe3\xde\x73\x66\xbe\x57\x16\x22\xf1\xb1\x5e\x96\xd2\x02\x8f\x5d\x0d\xe2\x9a\x39\x0e\xb8\xeb\xf3\xbb\xc3\xa0\xb2\x8a\x05\x1d\x98\x59\x28\xbe\xac\x38\x0a\xd4\x98\xa5\x8f\x7c\x4a\x89\x9a\xe0\x8d\x22\xa7\xe5\x86\xc2\x82\x65\x2c\xb6\xde\x6f\xdd\xee\xb0\xc2\xfe\x05\x28\x6b\xcc\xca\x4a\xfb\x7c\x8c\xdc\x19\xf0\x81\x31\x16\x15\xa6\x1b\x09\x87\x29\x77\xfb\xe7\xf5\x72\x4a\x3b\x4b\x08\x2e\x8b\x67\x5b\xd7\x0a\x17\x82\xdb\x73\xcc\x4d\xf1\x44\xf0\x6a\xe0\xe0\xfd\xf5\x23\x37\xd4\xf7\xc7\x13\x0a\xd0\xef\x5c\x5f\x9f\x7b\x41\xfd\x48\xdc\xde\x8d\xe5\xf5\x1d\x23\x42\x9b\xed\xac\xe8\xfd\xce\x57\x83\xd3\x70\xcd\x65\x62\x78\x43\x2c\xe9\x62\x69\x9a\x21\x41\xbd\x49\x0c\xec\xb3\x7b\xd3\x7e\xec\x55\x4e\x9a\xa3\xa8\x62\xca\xe8\x9a\xa1\x29\x9a\x2b\x41\x0b\x75\x82\x9e\x73\x7b\x6f\x86\xe6\x26\x10\x19\xaa\x51\x4b\xba\x5c\x12\xa1\xfd\x01\xaf\xeb\xa8\xbb\x02\x43\xe8\xce\x8a\xd7\x63\x9b\x99\x6e\xe0\x0a\xd2\x0b\x07\xc2\x9e\x8a\x71\x62\x8e\xc7\xb0\xdd\xc5\x34\x04\xb7\x60\x3b\x54\x6a\xac\xd6\xdd\x91\x9d\xba\x27\xe4\xd1\x71\x87\x54\x89\x85\x61\x27\x7e\x83\xfa\x1a\x43\x96\x7b\xdc\xb7\x11\x1c\x68\xa4\xad\xe9\x24\xa1\xf6\xa2\xaa\xd3\x79\x66\xf9\x97\x04\xf5\xbf\x18\x08\xa1\xe5\xf7\x1d\x55\xeb\x16\x74\x6c\xad\xa7\xbf\xa7\x21\xf9\xf3\xae\x45\xd8\x4d\xbd\xfd\xd4\xeb\x3e\x9d\x9f\x32\xc5\x90\x7c\xe9\xd0\xfa\xe5\xf1\xaf\xee\xca\xdc\x78\xa1\x55\x04\xa4\xb9\x0b\xc1\x96\x67\x03\xbc\x87\xb2\xf3\x6b\x8d\x0e\x04\x11\xd5\x9d\xb8\x10\x81\xad\x67\x2c\xf8\xe6\xb8\xbd\xa1\xf1\x18\xd7\xf4\x78\x51\xf1\xc5\xf1\x06\x4b\x45\xc4\x31\x00\x3b\xbe\x7d\x7c\x6c\x6e\x15\x5f\xc5\xe6\x84\xad\x66\x3c\x41\xff\x56\x97\x18\x6e\x7d\xe9\xd3\xc2\x9c\x0d\xe6\x7e\x93\xee\xc0\x18\xc5\xbb\xdf\x9e\x53\x99\x5e\x92\xda\x33\x47\x34\xd9\x70\xb9\xa1\x4a\xfb\x45\x3e\x4f\xf1\x70\xc8\x9a\xba\xf3\x66\x61\xae\xd5\x8c\x4f\x3c\xa9\x78\x8d\xda\xbb\xde\xae\xd6\x44\x12\x07\xd7\xa9\x98\x46\x8f\xca\xe0\x8b\xb3\x64\x07\xfa\xbe\xd0\x9a\x49\x71\x0d\x40\x90\x16\xe5\x44\x15\x5d\xf4\xbc\xbc\x01\x31\xed\xf5\x6e\x72\x97\xa0\xda\xcf\xcc\xa7\xa8\x8b\xed\x87\x4d\x94\xe2\xe8\x7a\x12\x00\x76\xaf\x1b\x7a\x86\x98\x8e\x35\x1b\xc1\x3d\xa9\x39\x52\x1e\x93\xe6\x6b\x6e\x11\x65\xaf\x71\xba\x80\xf2\x8d\x91\x17\x57\x2a\x19\xc0\xf9\xfe\xc5\x93\xae\x54\x32\xea\x5b\x7c\x2a\x9e\x84\xe7\x53\xf1\xa4\xf7\x7c\x2a\x9e\xfc\x54\x3c\xf9\xa9\x78\xf2\x53\xf1\xe4\xa7\xe2\xc9\x4f\xc5\x93\xff\x35\x8b\x27\x55\x25\xe7\xa4\x68\x04\x55\xdb\x4b\xc1\x97\xb4\x0a\xc4\x13\x07\x09\xd8\x9d\x2f\xbc\x9d\x6e\x92\x28\xed\x2c\xc9\x76\xfb\x4f\xfa\x48\x19\x70\xb2\x8c\x2f\xd6\xb9\x62\x23\xdb\x51\xfc\x65\x56\x00\x24\xae\x29\x5c\x6f\x2c\x92\x37\xdf\x23\x41\x24\x6f\x84\xbd\xc3\xba\xdb\x02\x76\xb7\x26\x21\xef\xdf\x1c\x8b\xac\x11\x79\x5d\x95\x47\x66\xe1\x6d\xc3\xbf\x86\xd9\x3f\xf0\x92\x08\xa6\x7d\x02\x20\x08\xac\xd3\x0c\xe6\x26\xcc\x1e\x3e\xe0\xd7\x35\xef\x5f\x34\x49\x25\x92\x0d\xf0\x0a\x02\x12\x70\x11\x34\x5a\x10\x75\x47\x08\xd3\xa6\x94\x60\xa9\x0d\xc6\x77\x41\x31\x6c\xc3\x65\x2b\x7a\x4b\x98\x56\xaa\x36\x9a\x65\x60\x2b\xde\xee\xfe\xf3\x07\xd1\x62\xe2\x2e\xb4\x0f\x40\xe6\x6d\xe7\xe8\xcf\xb3\x7f\x9f\xfd\xac\x07\x8e\x9a\x7a\x25\x70\x09\xeb\xab\xde\xcb\x2f\x1e\xc3\x1e\x66\xbb\x4e\x44\x8c\xdc\x65\x0f\xdf\x2c\xd5\xbc\x42\xd3\xb0\xc3\x7e\xa4\x59\xd8\x54\x91\x7d\x4d\x66\x73\x33\xaf\x2a\xde\xa8\x9d\x83\x94\x88\xdb\xcb\x0c\x12\x7a\x6b\x6e\xfc\xf5\x65\xd1\xeb\x26\x24\xb5\x54\xa2\xc7\xb3\xc7\xdd\x2c\x77\x9b\xdb\x7d\x68\xd0\xe6\xc9\x0c\xa1\x53\x06\xcb\x08\xc7\x00\x1e\xbd\xef\x59\x10\x09\x31\x9a\xe1\x59\xce\x56\xb4\x60\x2f\x9d\x27\x5e\xde\xe9\x46\xe6\xd6\x4d\x02\xc4\x0e\xa1\xab\x9c\x7e\x91\x00\xe5\xf1\xec\xe9\xde\x2b\x11\x73\x26\x74\x4e\xf0\xc7\x9e\x1e\x0d\xfa\xbe\x91\x44\x4c\xdd\x91\x7d\xba\x6b\x69\x15\x87\x1b\xc9\x0c\x3d\x8b\xa9\x7c\xf2\x4e\x69\x85\x58\x69\x21\x12\xb0\x22\x33\x93\xb0\x3d\x9f\xda\x11\x03\x4b\x44\x99\xd9\xb5\xdd\x13\xa4\x68\x65\x32\x66\xe6\xd4\x04\x85\xa5\x12\xbc\x5e\xd3\x62\xa6\xb9\x64\x67\xce\x10\x7c\xc5\xf9\x8d\x44\x15\xbd\x31\x99\xaf\x44\x80\x13\xa1\x82\xd6\x6b\x22\xe4\x09\xfc\x32\x45\x2f\xce\x9e\xbf\x7c\x31\x7d\x71\xf6\x7c\x7e\x3a\x3d\x7b\x79\x7a\xf6\xf2\xf4\xc9\x97\xd3\xcb\xd7\xe7\xff\xfe\xf8\xe9\x97\x5f\xf7\xda\xbc\x09\xb5\x88\xf5\x34\xfc\xf0\xf4\xc5\xfc\xf1\x93\x6f\xa7\xdf\x9f\xfd\x30\x9d\xbf\x3c\x7d\xf2\xf5\x37\x81\xee\x77\xda\xc4\x81\x6f\x28\xbb\x3a\x9f\xdb\x7b\xb0\x4f\x34\xdb\x6e\x1f\xcf\x1e\x87\x63\x0d\x19\xfb\xb2\xc7\x97\x49\x8e\x6a\x51\x17\x6c\x20\x60\xa6\xb9\x1f\x09\x70\xe7\xab\xc3\x99\xc8\xf0\x1a\xe1\x6a\xc5\x05\x55\xeb\x68\x94\x1b\xb9\x62\x62\xb8\xc6\x99\xac\xb8\xa2\x10\x5c\xb2\xde\xa8\x06\xa5\x25\x76\x8d\x59\x29\xd7\xf8\x86\xcc\x50\x9b\x63\x4f\x81\xd4\x5a\x4f\x90\x0d\xbf\x25\x70\x02\xaa\xdd\xfd\x4d\x85\x71\x1d\x58\x29\x91\x4d\x4c\xda\xe8\xd1\xe0\x94\xe0\x14\xb2\x46\x75\x3f\x7f\x31\x9f\x9e\x3d\x3b\x7b\xaa\xf9\x88\xd0\xc1\x16\x6f\xaa\xc3\x93\xa0\xf8\xf9\x2d\xe3\xbb\x6d\x47\xfd\xe4\xbc\x9c\xf7\x78\xb5\x60\x4f\xac\x32\x79\xdd\xfb\x28\xc6\x71\x50\xe6\xc9\xb3\x59\x9d\x52\xb6\x61\x7c\xab\x4a\x15\x2f\x78\xd5\xde\x7f\x1c\x14\x81\x04\xcc\x81\x70\x7c\x37\x48\x55\x69\x56\x79\xf6\xc0\x5a\x8c\xc7\xb3\xd4\x95\x2b\xda\x9e\x3c\x9e\x3d\xed\x33\x35\x3c\x1d\xc1\xa4\xbd\xbe\x7a\x71\x82\x8a\x46\x08\xc2\x54\xb2\xbe\x0f\x8e\x51\xa1\xab\x35\x91\xaa\x0f\xcf\x95\x1f\x69\x02\xd8\x9f\xae\xce\xe7\x8f\x9f\xc4\xc5\x25\x7d\x4a\xf3\xd4\x87\x12\x3f\x3c\xb3\xd7\x2c\x7e\x9c\x48\xaf\x59\x9c\x70\xbd\x66\xf1\xcd\xfe\xef\x77\x57\x27\x82\x0c\xa9\xf3\x97\x72\x0c\xa1\xdf\xde\x98\xc3\x90\x05\x6c\xdd\xd9\x84\x61\x71\xb9\x82\x3b\x7a\x43\x67\x1b\xfe\x3b\xad\x2a\x3c\xe3\x62\x75\xec\xfc\xf0\xe3\x39\x78\xbc\x6f\xe7\xb4\x24\x6f\xaf\xce\xe7\x9f\xfb\xbe\xdd\xdb\x82\x6f\x6a\xac\xe8\x02\x6e\x40\x7b\x3b\x7b\xf2\xad\x20\x05\xdf\x6c\x08\x2b\x49\x39\x7b\xf2\xcf\xf1\x7e\xb5\x3c\x0e\xcc\x5f\x52\xe1\x5c\x9d\xcf\xdf\x9e\xbe\x98\xbf\x7d\xfc\xe4\xdb\xb7\xdf\x9f\xfd\xf0\x76\xcc\xd2\xf8\xdf\x3c\xf9\xfa\x1b\xf7\xcd\xd3\x6f\xbf\xf2\x00\x3a\xb3\xf8\xd6\x99\xc5\x2c\xb0\x49\xdb\x87\xd0\x98\x05\xdd\x0b\xf8\x93\xaf\xbf\x71\x9f\x76\xa8\xf7\x80\xf7\x5b\xe4\x03\xff\xe0\x4e\xc3\x98\xcb\x70\x0f\x9c\x83\xfa\x29\xa2\x40\x32\xdc\x85\x91\x49\xb8\x01\x67\x38\x67\xfa\x99\x96\x39\x13\xef\x7e\x53\xcc\xb8\xe5\xfd\xc9\xf5\xdf\x6e\x2a\x05\x99\xfb\xb4\x33\x3e\x67\xce\xf8\xe8\xb5\xba\x71\x68\xa2\x67\xa9\xbd\x3f\xf3\x79\x15\x89\xb0\xf5\x39\xcf\x4d\xd8\xe6\xe3\xb0\xfd\x75\x55\xbe\x5d\xe0\xe2\xe6\x0e\x8b\xf2\xbf\x39\xf3\x3f\xe9\xd1\x28\xf0\x8f\xa0\x47\xfd\xcf\xd2\xf8\xf6\xb8\x91\x4f\xe7\x37\xc3\x8f\x92\x40\xf7\x87\x18\x06\xa7\x87\x9f\xcf\xae\x37\xc3\x8f\x92\x40\xf7\x87\xb8\xcb\x9e\x21\x39\x22\x30\x77\x41\x75\x04\x8c\x09\xc1\x9e\xcc\x0f\xf1\x26\xd1\x5d\x3b\x9a\x08\xd4\xdd\x41\xf7\x16\x8e\x61\xd5\xfe\xe5\xc7\x52\xdd\xf1\xdb\x12\xc3\xb7\x24\xda\x8b\x0d\x03\xd1\x56\x1b\x0e\xe3\x02\x9d\x41\xa0\x26\x96\x03\x3a\x6b\xc3\x38\xb7\xd4\xde\x8b\x82\xb0\xd1\xd4\xfe\x02\x92\xb2\x92\xde\xd2\xb2\xc1\x55\xcf\x5c\xc4\x73\xbe\x60\x44\xba\x0b\xbe\x67\xbb\x38\xfa\x01\x61\x2c\xc8\x1e\x70\xe5\xfb\x5a\xa7\x37\x9d\x67\xff\x36\x2b\x18\x66\xf7\x39\xb5\xfd\x6b\x7c\xf5\xc2\x85\x29\x83\xca\x91\x29\xb4\x27\x5b\x13\xce\x35\xb1\x68\x73\x38\x02\x8d\x1e\xef\x87\x25\x54\x77\xba\x40\x0d\xdc\xff\x4f\x6e\x49\xc5\x6b\x5b\x1b\x43\xde\x51\x09\x35\x15\x7e\x93\x25\x6f\x58\xac\x44\xc6\xc4\x84\x29\x33\x27\xa9\xcd\x10\x7a\x4e\x6a\xc2\x4a\xd8\x3b\xc4\x50\x2d\x48\x41\x25\xa9\xb6\xb6\x70\xdc\x87\xda\x5e\xe3\x18\x87\x8c\xf5\xf0\x0b\x22\x6d\xc0\x1e\x6a\x25\xf4\x68\xa1\x60\xa8\x6c\x8a\xc0\x51\xfc\x2e\x2a\x3b\x22\x26\x54\x76\xcb\x73\x3f\xe8\xd3\x85\x6b\xbd\xca\xf7\x2d\x51\xe8\x8e\x44\x8b\xd1\x71\xc9\x6b\x5b\xb8\xa4\x79\xcc\x19\x92\x7c\xa9\xee\xf4\x18\x2b\xba\x10\x58\x50\x12\x3b\x54\x2d\x55\x11\xf4\xba\x8a\x15\x01\xf9\x22\x1d\x69\x92\x20\xc2\xd4\x4e\xc0\x84\xb2\xd8\xb7\x6e\x28\xf2\x42\x2a\xac\x9a\x41\x04\xab\x7f\x35\x3f\x34\x70\xb5\x15\x1b\x2e\xcd\xdd\xb9\xc0\x14\xbe\x80\x64\x51\xe9\x1a\xd9\x08\xd1\xce\xe9\xbd\x7d\x2d\x13\x8f\x69\xb6\xe2\xf6\x26\xaf\x28\x7c\xa7\x3d\x48\x43\x5b\x11\xde\xa2\xd7\xdd\x46\xea\xea\xbf\x43\xa9\xaf\xa2\xe0\x02\x26\x45\x34\x6b\xe2\xed\x72\xfc\x90\x75\xe2\x05\x67\x26\x89\x3c\x36\xde\x49\xd7\xb2\x5f\x99\xe4\xfd\x6e\xd3\x2a\x54\x58\xa6\x44\x4a\xae\x4e\x5b\x92\xb8\xfb\x49\x47\x06\x0c\x1d\x26\xd4\x81\xee\xd7\x94\x8e\x69\x12\x42\xd9\x19\xfc\xe6\x80\xba\x94\xa1\x44\x07\x74\x46\x8e\xd0\xcc\xa2\xb7\xc3\xc3\x50\x5a\xee\xb7\x06\x57\x12\xcd\xb4\xd9\x99\x39\x16\x1e\x5a\xf5\xab\xd5\x94\xfe\x5f\x9b\x88\xf7\xa9\x01\x2a\x2d\x18\x8e\x32\xdb\x15\xed\xfd\x60\x4e\x7a\x61\x0b\x45\x88\x0e\x4b\x82\x95\xb9\x67\x96\x95\x70\x43\x2a\xd8\x42\x1a\xae\x6f\x82\x55\xc9\x23\x74\xce\x71\xf9\x0c\x57\x98\x15\x44\xfc\x80\x19\x5e\x91\xd2\xac\x27\x44\x43\xdc\xc5\xae\xed\xbd\xc3\x1e\xd2\x21\xe2\x0a\xcd\x27\x65\x96\x38\x8f\xcc\xe5\xa5\xee\x2a\xd4\xba\x59\x54\x54\xc2\x4e\x50\x5b\x02\xb2\xed\x32\x56\xd8\x95\xf3\x05\x80\x56\x1c\x97\x68\x61\x11\x9c\x01\x6a\xdf\xe1\x4a\x02\x6e\x98\x6d\xcd\x6c\xe6\x92\xf4\xa4\x4b\x10\xbd\x58\xc5\x8a\xca\x25\x0d\x67\xd3\x03\xa3\x7f\x43\x70\xb9\xcd\x1a\x7b\xe4\xde\x45\x6f\xec\xa7\x7d\xbc\xb5\x58\x6e\x0c\x71\x67\x1e\x75\x86\x6d\x82\x19\x43\x5c\x6e\xef\x39\xec\x70\x95\xeb\xb5\xee\xfd\xf9\xc5\x7c\x1f\x66\x0f\x58\x1b\x80\x3a\xca\x6c\x2d\x92\x75\x85\x95\x56\x40\xce\x46\x6a\x34\x66\x49\x90\xa1\xc9\x0e\x45\xc6\x90\x41\x27\xca\x51\xb3\x64\xc9\x52\x80\x50\xb6\xb3\xbb\x95\xf9\xf9\xc5\x1c\xfd\xce\x19\xdc\xb8\xfb\x61\xc5\xeb\xf9\xc5\x7c\x3f\xa9\x4a\x13\x59\x23\xba\x2b\x49\xfa\x57\x41\xb4\x59\x90\x68\x8d\x6f\x09\x5a\x10\xc2\x90\x6c\xe0\xca\xa2\x65\x53\x55\x5b\x54\x98\xcd\x6d\x41\x4c\xef\x35\xe4\x5d\x27\x24\x9a\x63\x0a\x6e\x61\x3d\x73\xa0\xf5\x78\x60\x23\x98\x55\x71\xac\xc4\xa2\xec\x7a\xb6\xdb\x6f\x42\x88\x8f\x25\x1d\x2b\x2c\xd5\x95\xc0\x4c\x02\xa0\x2b\x1a\x3f\x7e\xdc\xd9\xc4\x12\x2b\x32\x4d\xf8\xbc\xa3\xd9\x05\x7b\xfa\xf2\xbd\x2b\xab\x04\xc1\x32\x9e\x25\x18\xfd\x3c\xe4\x25\xed\xf1\x79\xea\xb6\xfb\x91\x8f\x33\x2a\x93\x42\x79\x43\x33\x95\x47\xdc\x89\x6e\xbe\xc3\xf2\xae\x50\x7a\x1d\xe7\x7e\x64\xa8\x91\x81\x6d\xf0\x09\x74\x9d\x92\xba\x6c\x75\xd4\xdc\xaa\xa8\x11\x3c\xe2\x1f\x0e\x70\x6b\x55\x5e\x70\x2b\x44\x10\xdf\xb4\x2c\xaf\xb9\x54\x17\x44\xdd\x71\x71\x93\xb1\xbe\xf6\x5a\xa3\x35\xaf\x4a\xe9\xad\x64\xdb\x3d\x35\x2f\xbb\x46\x11\x8e\xa7\x94\xf9\x0c\x5d\x9a\xf2\x5f\x53\xe6\xa6\x75\x9a\x5d\xd3\x7b\x70\xef\x51\xc3\x66\xac\xbd\xb3\xc7\x19\x63\xf5\x9b\xc7\x07\xdb\x77\x21\x22\xe3\x8d\x8d\xc8\xf7\x10\xe6\xc6\x4b\x09\x83\x18\x2f\x82\xb0\x71\x0a\x71\xd9\xa2\x98\x9b\x23\xdf\xfd\xd2\x8e\xd6\x6d\x30\xed\x0d\x31\x91\x25\xa6\xcc\x28\x3b\xad\x5a\xdb\x3d\x90\x76\x25\xd1\xb0\x92\x88\x0a\x2e\x2f\xa6\x6c\x29\xb0\x54\xa2\x29\xe0\xda\x61\xd7\x7d\xf2\x90\xf8\x7b\x6c\xbe\xdc\x1d\x56\xa2\x83\xfb\x6f\xc4\xf4\xe8\x9f\x71\x3a\x11\xbe\x1b\x29\x29\xee\xb3\x06\xdf\xc9\x2e\x00\xd5\xaf\x72\x6b\x0b\x25\x47\x6e\xc5\x43\xd6\x77\xf6\x19\x72\xfa\xd3\xbc\xcf\xd4\xd8\xe6\xa1\x11\xb8\x69\x06\x68\xe4\x77\xe9\x3a\x86\xea\x7e\x54\x47\x7b\x5d\x4b\x53\x54\x58\x4a\x5a\x9c\x8f\xea\x01\xff\xe9\x71\x24\x00\x61\x67\xda\xf4\xf8\x34\x0a\x1e\x0d\x95\x0a\x66\xc0\x1f\xdb\xd3\x70\x89\x62\x35\x49\x06\xd8\xa1\xae\x39\x33\x00\xc7\x6f\x10\xc9\xbe\x54\x03\x21\x66\xb4\xf1\x7b\x10\x34\x00\xe1\x23\x11\xd4\xf6\xf4\xe1\x08\x7a\x71\xfe\xec\x83\x12\x33\xe5\x22\x75\x4f\x38\xdc\x0d\x27\x30\xe8\x7f\xf3\xe5\xee\xec\xce\x18\x1b\x1c\xc7\xaa\x3d\x64\xa8\x60\x72\x64\xdb\xa9\xac\x76\xdb\xb6\x69\xce\x25\x36\xdd\xa9\x43\x10\x8c\x7e\x84\xae\x27\x56\x06\xaf\x27\x27\xe8\xd4\x09\x24\x18\x41\xf4\x6c\x0f\x5c\xcd\x11\x52\x37\x44\x42\x8c\x45\x9b\x94\x92\x14\xd4\x54\x49\x61\x85\x08\x85\x10\x06\xb2\xc7\x4b\x61\x26\xf5\x72\x30\x03\x70\x85\xb7\x44\xa0\x83\xab\xb3\xcb\xe3\xf9\xfc\xfc\x10\x59\x0b\x0f\xda\xcd\x56\xdf\xda\x26\x2f\xaf\xae\x2e\x8f\xf5\xff\xcd\x83\x67\x05\x0c\x1f\xad\x16\xd1\x60\x69\x06\x24\xee\x02\x36\x56\x3b\xda\x7c\x2e\x6a\x43\xf7\x25\x2f\xe4\x0c\xdf\xc9\x19\xde\xe0\xdf\x39\x83\x7d\xbe\xa7\xf0\xcf\x17\x67\xf3\x63\xd8\x8a\xa6\x8e\x5d\x70\x5c\xac\x1a\x5a\x92\x63\xcd\xfc\xa9\x63\xfe\xd4\x6c\xf9\x85\xcb\x4c\x8a\x6a\x91\x81\xad\xe5\xd5\xc5\xf9\x33\xc3\x27\xe7\xef\xf5\xf8\xe4\x71\x21\x03\x64\x90\x4f\x9a\x1e\xa8\x63\xd0\x90\xfc\xb9\x84\xfd\xc7\x93\x95\x55\x8b\xb4\x85\x42\xa3\x75\x6f\xee\x99\xba\x59\x91\xd1\xf2\xe2\xfc\x59\xa6\xfa\xc9\x38\x63\x32\xef\x02\xa7\x29\x00\x4c\x36\xc9\x54\x78\xe3\xca\xae\xa7\xe8\x7c\x3d\x37\xee\x4a\x8e\x90\x25\xec\xba\x23\xb7\xf9\xda\x3b\x2d\x6d\x72\xfa\xd3\x7c\x72\x84\x26\xa7\xbf\x37\x82\x24\x0f\x55\xd4\xcf\xe4\x19\x16\xe4\x07\xa2\x70\xa5\xbf\xf9\xfe\xec\x52\xff\xe7\x75\x4d\xd8\x5c\xe1\xe2\xc6\xee\xea\x99\xfc\x38\xaf\xd7\x44\x90\x49\x5a\xbe\xc7\xc5\x65\xaa\x15\xfd\x58\x0b\x8d\xf7\x48\x9b\x16\xe9\x91\x76\xdf\x9f\xa5\x6e\x2d\x82\x54\x90\x1b\xea\x48\x3b\x4b\x81\x91\x56\xaf\x9e\xfd\x90\x21\x68\x23\xa2\x3d\x2e\xd6\x23\x22\x9d\x21\xce\xb2\xe0\x29\x59\xee\xa7\x92\x74\xdb\xc1\x49\x81\xe6\x37\xd8\x3b\xe4\xee\xc4\xce\x5e\x71\x49\x77\xd8\xc4\x0c\x5d\x72\x29\xe9\xa2\x22\x3d\xf9\x7d\xf1\x4e\x11\xc1\x70\x35\x31\xb2\x07\x29\x39\xfd\x67\x5c\xf8\xc6\xea\x73\x1d\x88\x44\x13\xd7\xe9\x08\x51\xdf\xe3\x82\x26\x20\xd9\x7d\x42\x00\x70\x7a\x3f\x17\x91\xb3\x1d\xfb\x9e\xa9\x6d\x1a\x5f\xfa\x5f\xd8\x16\xf3\x68\x7e\x01\xdd\x3b\xd6\x31\x80\x7d\xaf\x78\x47\x2d\xe8\x6d\x5e\xad\xb1\x6d\x19\x1f\xea\xa5\x6d\xe0\x06\x13\x0b\x42\xec\x33\x44\x0b\xf3\x5e\x43\xdb\xb7\x1c\x04\xce\xbe\x0b\x24\x0e\x4c\xa1\xbd\xdb\x23\x9e\xdc\x97\xdc\xf9\xb1\x81\xa8\x8d\x7e\x61\x63\x77\x24\x96\x49\x8c\xc0\x75\xbb\x92\xfe\xd4\x9e\xf5\xda\xeb\x00\x39\x09\x80\x15\x3a\x73\x87\x4d\x7a\x2b\xa2\x98\x59\x1a\xcf\x67\x36\xd2\x84\x15\x14\xa6\x8c\x08\xb7\x42\x4a\x1c\x94\x76\x1a\x44\x0d\xca\x14\xec\x09\x77\x8a\x3b\x3a\xdb\x6d\x97\xf1\x6c\xb1\x79\xcc\x89\xb7\x27\x59\x47\xde\xda\x44\x9e\x9c\x76\x98\xba\xdf\x8e\x3f\xd7\x3a\x73\x44\x65\x9a\x18\x47\x2f\xc7\x73\xe4\x9f\x37\xd3\x25\x3b\xda\xd0\x86\x4d\x87\xc4\x0f\x1d\x30\x73\xdb\xba\xb3\x21\xea\x3c\xd4\x3a\xda\x28\x44\x7b\xb5\xa8\x97\x53\x89\xcb\x5a\xdb\xb3\x99\x36\xac\x4b\x24\xb9\x7b\x44\xd1\x62\x7b\x8f\xd4\x94\x7e\x4c\x16\x19\xf8\x54\xfc\xcc\x99\xc9\x52\xdb\x1f\xcd\xa4\xd4\xbf\x82\xc4\xfd\xe4\xd3\xc6\xa0\x94\xd8\x11\xdd\xab\x57\xe9\x6a\x55\x60\x08\xf6\x5c\xa3\xd3\x9f\xe6\x47\xc6\x2f\x31\xfe\xd0\xf7\x67\x97\x6d\xea\x2e\x75\xfa\xd5\x23\x3f\xfc\x9b\x33\xdd\x74\x87\x5a\x87\x47\xf9\x26\x94\x44\x77\x90\x3c\x8f\x00\xa0\xb2\xdd\xce\xfa\xd1\x66\x9f\x39\x0a\xac\x15\xe7\x23\x73\x47\x6f\x0c\x26\x37\xb7\xa9\x18\xdc\xbf\xfd\x12\x08\xf8\xd5\x57\x4f\xcd\x1e\xf0\x46\x1a\x9c\xed\x2d\xd6\xe0\x0b\x68\xfd\xed\xd0\x8d\xfb\x49\x98\x75\x22\xda\x4f\x1b\x0f\xa6\x73\xb6\x52\xbb\xa5\xb8\xbb\xfc\x05\xd0\x9d\x19\x26\x3a\x43\x72\xcd\xe0\x5c\x08\x28\x5c\x0a\xf4\x10\x01\x3b\xbc\x20\x27\xc8\x90\xfd\x30\xcd\x51\x87\x46\x52\x6d\x99\x95\xbb\xea\x27\xba\x61\xca\x0e\x47\x0b\x4d\xcb\x16\x38\xc8\x62\x83\x59\x83\xab\x6a\x3b\x42\xd2\xe4\x24\x18\xf8\x05\x59\x13\x21\x75\x90\x76\xcf\xee\x38\xe0\x19\x36\x27\xb1\xb9\xed\xbe\x36\x07\x9d\xb6\x08\x44\x20\xef\x65\x6f\x80\xf8\x6d\x30\x7a\x54\x13\x40\x91\xe1\x96\xe1\x0d\x2d\x80\x47\xb8\xaa\xb8\xb9\xc9\x7b\xb1\x35\x2b\x1b\xad\x5b\xff\x80\xd6\xfc\x8e\xdc\x12\x01\x7b\xf4\xac\x86\x8b\xad\x0b\x14\x56\xb4\x00\xf0\x0e\x9a\x39\x22\x02\x24\xc2\x94\x42\x4a\x97\x1f\x69\x27\x8a\x09\x99\x47\x40\xda\xea\x32\x67\x1a\x86\xfc\x32\x56\x0b\x4e\xcf\x11\xb7\xd1\x7d\x14\xa9\x6a\xbe\x80\x6b\x13\x69\x39\x96\xe4\x9b\xba\xa9\x1e\x79\x9b\xe3\x3c\x27\xd7\x09\xf1\x35\x42\x64\x49\x97\x70\x29\x5d\x99\xdc\xf7\x84\xd9\x43\x6c\x47\xf2\xb5\xbb\x1f\x04\xca\x03\xd1\xaa\x7b\xeb\x3e\x48\x16\xcd\x05\x4e\xf4\x4d\x15\xcd\xc9\xbc\x03\xd0\xfc\x8b\xa8\xf0\xe0\xc8\xac\x23\xed\x59\xd8\x83\x84\xdc\x45\xcb\xde\x39\x06\x01\xae\x78\xb3\xba\xe6\x10\x9c\x17\xc6\xe0\xf8\x75\x83\xbb\xe5\x8f\x30\x1b\x4d\x5d\x62\x00\xa8\x3b\x49\x45\x83\x00\xa8\xf6\xc0\x46\xa8\x7a\xf3\x0e\x03\xe6\xcb\xdd\x82\xc7\xbd\x12\xf4\xaa\x92\x79\xa7\x94\x74\x0d\x1d\x63\xfb\x87\x91\x0c\xcf\x9c\x30\x9b\x80\x03\x43\xa3\xcc\x9e\xe0\xb1\x6f\x62\x3e\xb9\xab\xfd\xa3\xec\x68\xbf\xef\x6e\x76\xb4\x49\x1c\x6c\xf4\xa1\x77\xb2\x7f\x84\x5d\xec\xc9\x1d\xec\x99\xbb\x7e\xa3\xa7\x27\x8d\xef\x5a\xbf\xff\x8e\x75\xb7\x39\x3c\x6d\x2d\xf2\x77\xab\x0f\x58\x1c\x01\x9b\xbd\x53\x3d\xb0\x1f\x3d\xe6\xda\xec\xb1\x4d\x3d\xbe\x19\x3d\xe6\xe2\xec\xb3\x45\x3d\x65\x1c\x47\xb7\xa6\x67\x6c\x4b\xcf\xd8\x92\x9e\xb1\x1d\xfd\x03\xd6\xbf\xef\xfc\x68\xec\x94\xb7\x53\x47\x2a\x2e\xf0\xca\xdf\xbb\x23\x9b\x45\x5b\xcb\xec\x88\x25\x0b\xec\x2b\x55\x30\x33\xee\xd0\xcd\x4b\xac\xd6\x27\x6d\xb9\xf3\xce\x3d\x74\x5a\xb2\x9d\x36\x77\x4d\xfd\x32\xe7\xae\x21\x00\x18\x36\x4d\x17\x51\xdb\xba\x35\xf4\xd7\xbf\x7f\xf6\xff\x02\x00\x00\xff\xff\x3b\xad\xcb\xfa\xb3\xf4\x00\x00")

func manifests00CustomResourceDefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionYaml,
		"manifests/00-custom-resource-definition.yaml",
	)
}

func manifests00CustomResourceDefinitionYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition.yaml", size: 62643, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc3, 0xae, 0x41, 0x2b, 0x7f, 0x60, 0x1e, 0x7a, 0xd1, 0x98, 0xbf, 0x5a, 0xa2, 0x3e, 0xe1, 0x79, 0x56, 0x62, 0x73, 0x6f, 0x39, 0xe8, 0x8b, 0xae, 0x10, 0xc1, 0x11, 0xc5, 0xf3, 0x11, 0x5d, 0xaa}}
	return a, nil
}

var _manifests00IngressCredentialsRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x92\x31\x6f\x1b\x3f\x0c\xc5\xf7\xfb\x14\xc2\x8d\x7f\x40\x97\x7f\x50\x14\x28\xb4\x25\x6e\x91\x0e\x19\x02\x07\x68\x81\x6e\xb4\xf4\xee\x4c\x44\x16\xaf\x22\x2f\x45\xfb\xe9\x8b\xb3\xaf\x4e\x5c\x2f\xcd\x96\x21\x9b\xc4\x47\x91\x4f\xe4\x8f\x46\xfe\x82\xaa\x2c\x25\xb8\x98\x65\x4a\xb1\x22\xa1\x18\x53\xee\x64\x44\xd1\x2d\xf7\xd6\xb1\x5c\x3c\x5e\x36\x0f\x5c\x52\x70\xab\x63\x82\xae\xf1\x7d\x82\x5a\xb3\x83\x51\x22\xa3\xd0\x38\x97\x69\x83\xac\xf3\xc9\xb9\x28\xc5\xaa\xe4\x8c\xea\x4d\x24\x6b\xf7\xf0\x41\x3b\x96\xe0\xda\xcb\xee\xff\xb6\x71\xae\xd0\x0e\xc1\x1d\xfb\x78\x2e\x43\x85\xea\xa2\xe8\x48\xf1\x44\xde\x1b\xf4\x4f\x0e\xbd\x8c\xa8\x64\x52\x1b\xe7\xa8\x14\x31\x32\x96\xb2\x34\xe7\x12\xf3\x94\xd0\x55\x64\x90\xe2\xf4\x37\x8a\xdc\xfb\x1d\x15\x1a\x90\xfc\x96\x87\xad\xa7\x47\xe2\x4c\x1b\xce\x6c\x3f\x83\x6b\xad\x4e\x68\x1b\x1d\x11\xe7\x6a\x8a\x58\x61\x6b\xf4\x87\xd2\x07\xdb\x7f\xbb\xd1\xa3\x76\x66\x7c\xf9\xd7\x73\xbf\x63\x95\x47\x4e\xa8\xf7\x4b\x0b\xe7\x5e\xb2\x8a\x39\xff\xb0\x8e\xab\xaf\xf7\x77\xcf\x4a\xed\x15\x35\x32\xec\x50\xec\x53\xb1\xca\x58\x06\xe2\x1d\xfa\x1e\xd1\x82\xbb\xca\x59\x7e\xec\x63\xce\x51\x9c\x67\x16\x96\x9b\x77\xc8\xa4\xc6\x31\x0b\xa5\x0d\x65\x2a\x91\xcb\x10\x3e\x42\x63\xe5\x0d\x6e\x85\xd2\xf5\x3e\x8a\xaa\xc7\x27\x55\x26\xc3\xfb\x77\xe1\x96\xd5\x3e\x8b\x1a\xd2\x37\x29\x38\xd7\x57\x5b\x2a\x03\xd6\x50\x99\x6a\xc4\x1a\x51\x6a\xba\x87\x3d\x25\x1a\x0d\xe1\x66\x9e\xf3\x21\xe3\x8f\x50\x97\x7b\x70\xed\x7f\x6d\xe3\xbd\x6f\x5e\x25\xb5\x9e\x7e\x4d\x15\x6f\xec\xbe\x80\xdd\x79\x60\x67\xf4\x56\xc9\xb8\xe6\x92\xb8\x0c\x47\x72\xe7\x58\x70\xab\x79\x33\xbc\x99\x66\x17\xaf\x17\x83\x21\x8e\x6f\x10\xfc\x3b\x04\x37\xab\xbb\x33\x04\xc6\xf9\x61\xcf\x05\x69\x2d\x19\x27\x14\xe8\x45\x2a\xda\x51\xda\x71\x69\x7e\x07\x00\x00\xff\xff\xdc\xac\xda\x9d\xbd\x06\x00\x00")

func manifests00IngressCredentialsRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00IngressCredentialsRequestYaml,
		"manifests/00-ingress-credentials-request.yaml",
	)
}

func manifests00IngressCredentialsRequestYaml() (*asset, error) {
	bytes, err := manifests00IngressCredentialsRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-ingress-credentials-request.yaml", size: 1725, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5, 0xcd, 0x2e, 0x2b, 0x9f, 0x75, 0x2a, 0x55, 0x69, 0x54, 0x9b, 0x22, 0x38, 0x8d, 0x5f, 0x3f, 0x3f, 0x72, 0x22, 0x95, 0x4f, 0x44, 0x8c, 0x4b, 0xb0, 0x8d, 0xc9, 0x65, 0x47, 0xd0, 0xf6, 0x29}}
	return a, nil
}

var _manifests00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x41\x4e\xc5\x50\x08\x45\xe7\x5d\x05\xf9\x8e\xdf\x37\x4e\xdf\x1e\x74\x62\xe2\x9c\xbe\xd2\x16\x3f\x85\x06\x68\x8d\xbb\x37\x55\xa3\x35\x0e\x09\x9c\x7b\x0f\x37\xd6\xa1\xc2\x13\x2e\x14\x2b\x36\xea\x70\xe5\x17\xf2\x60\xd3\x0a\xfb\x43\xb7\x50\xe2\x80\x89\xb5\x03\x40\x55\x4b\x4c\x36\x8d\x63\x04\x60\x6d\xb2\x0d\x74\x75\x12\xc2\xa0\xab\xad\xa4\x31\xf3\x98\x57\xb6\xfb\x20\x19\xcb\x82\x8a\x13\x0d\x65\xe6\x69\x2e\xb8\x23\x0b\xf6\x2c\x9c\xef\x15\x2e\xe9\x1b\x5d\x3e\x73\xfe\x70\x6a\x03\x95\x20\xa1\x96\xe6\x15\x2e\xc7\x89\x60\x4f\xf2\x5d\x7a\x07\x28\x62\x6f\xbf\x50\x59\x4c\x39\xcd\x59\x27\x48\x03\x31\xbb\xc1\x68\x0e\xcf\xe4\x3b\x37\x7a\xfc\xda\x82\xf5\xaf\xd4\x32\x80\x15\x72\xe6\x00\xfd\x79\xf9\x9f\x42\x93\x2d\x92\xfc\x14\x7c\xd2\x3d\xb8\x7a\x6a\x67\x9d\x9c\x22\x8a\xad\xe4\x98\xe6\xdd\x47\x00\x00\x00\xff\xff\x56\xd4\x60\x54\x52\x01\x00\x00")

func manifests00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00NamespaceYaml,
		"manifests/00-namespace.yaml",
	)
}

func manifests00NamespaceYaml() (*asset, error) {
	bytes, err := manifests00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-namespace.yaml", size: 338, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x82, 0x12, 0x7c, 0x41, 0xb0, 0x57, 0xd3, 0xe3, 0xc1, 0x81, 0x36, 0x90, 0x2d, 0x43, 0xd2, 0x8a, 0x6a, 0xea, 0x66, 0xcd, 0x2f, 0x77, 0x69, 0xa, 0x20, 0x6, 0x7a, 0x74, 0xe9, 0x64, 0x7c, 0x0}}
	return a, nil
}

var _manifests0000_90_ingressOperator_00_prometheusroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\xe1\x5d\x2e\xba\x05\xfe\x81\xee\x1d\xba\x33\xf6\xc5\x26\x22\x8b\x02\x49\xb9\x68\xbf\xbe\x88\x13\x74\xe2\xdd\x81\x7c\x3c\x6e\xf2\x05\x73\xd1\x3a\x91\x5d\x79\x1e\xb9\xc7\xa6\x26\xbf\x1c\xa2\x75\xbc\x5f\x7c\x14\x7d\x3b\xde\xd3\x5d\xea\x32\xd1\xa7\x16\xa4\x1d\xc1\x0b\x07\x4f\x89\xa8\xf2\x8e\x89\x9a\xe9\x8e\xd8\xd0\x3d\xdf\x2f\xfe\x8a\xbd\xf1\x8c\x89\xb4\xa1\xfa\x26\xb7\xc8\x52\x57\x83\x7b\xd6\x06\xe3\x50\x4b\x44\x5c\xab\xc6\xf9\xca\x1f\x34\x22\xa9\x73\xe9\x0b\x46\x43\x01\x3b\xc6\xff\xeb\x47\x0d\x47\xb9\xe5\x9d\x2b\xaf\x58\xf2\x26\xeb\x96\xf9\x60\x29\x7c\x95\x22\xf1\x33\xd1\x10\xd6\x31\x24\xeb\x05\x3e\xa5\x4c\xdc\xe4\xc3\xb4\xb7\x93\x9d\x69\x18\x12\x91\xc1\xb5\xdb\x8c\x57\xe6\xb0\x43\x66\xf8\x69\x50\x97\xa6\x52\xe3\xe9\x9a\x2e\x0f\x71\xc0\xae\xaf\xe5\x15\x71\xce\x22\xfe\x14\xdf\x1c\xf3\x96\xfe\x02\x00\x00\xff\xff\x16\x06\x0b\x85\x44\x01\x00\x00")

func manifests0000_90_ingressOperator_00_prometheusroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_00_prometheusroleYaml,
		"manifests/0000_90_ingress-operator_00_prometheusrole.yaml",
	)
}

func manifests0000_90_ingressOperator_00_prometheusroleYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_00_prometheusroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_00_prometheusrole.yaml", size: 324, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb1, 0xf6, 0x2e, 0xc0, 0xa0, 0xe6, 0xdf, 0xf6, 0xbe, 0x76, 0x1d, 0x9c, 0x58, 0xe6, 0x74, 0x85, 0xad, 0x2f, 0x56, 0x9d, 0xdb, 0xd8, 0x5a, 0xc5, 0x4c, 0x91, 0x8d, 0xe0, 0x9d, 0x32, 0x51, 0xb5}}
	return a, nil
}

var _manifests0000_90_ingressOperator_01_prometheusrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xb1\x4e\x2b\x41\x0c\x45\xfb\xf9\x0a\x2b\xfd\xec\xd3\xeb\xa2\xe9\xa0\xa1\x0f\x12\xbd\x33\xeb\xec\x9a\xcc\xda\x23\xdb\x13\x09\xbe\x1e\x2d\x8a\xa0\x02\x89\xd6\xb2\xaf\xef\x39\xd8\xf9\x85\xcc\x59\xa5\x80\x9d\xb1\x4e\x38\x62\x55\xe3\x77\x0c\x56\x99\xae\x47\x9f\x58\xff\xdd\xfe\xa7\x2b\xcb\x5c\xe0\xa4\x8d\x1e\x59\x66\x96\x25\x6d\x14\x38\x63\x60\x49\x00\x82\x1b\x15\xe8\xa6\x1b\xc5\x4a\xc3\xf3\xf5\xe8\xf7\xb1\x77\xac\x54\x40\x3b\x89\xaf\x7c\x89\xcc\xb2\x18\xb9\x67\xed\x64\x18\x6a\x09\x00\x45\x34\x3e\x3f\xfa\x9e\x06\xc0\x52\xdb\x98\x69\x32\x6a\x84\x4e\xd3\xd7\xf5\xde\xc6\xa9\x5d\xf2\x86\x82\x0b\xcd\x79\xe5\x65\xcd\x78\x43\x6e\x78\xe6\xc6\xf1\x56\xe0\x10\x36\xe8\x90\x4c\x1b\x9d\xe8\xb2\x07\x62\xe7\x27\xd3\xd1\x7f\x61\x4c\x00\xdf\x88\x3f\x11\xf9\x38\xbf\x52\x0d\x2f\x29\xdf\xb7\x9f\xc9\x6e\x5c\xe9\xa1\x56\x1d\x12\x7f\x34\xb1\xa9\x70\xa8\xed\x32\x3f\x02\x00\x00\xff\xff\xc6\x91\xcb\xd6\x88\x01\x00\x00")

func manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,
		"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml",
	)
}

func manifests0000_90_ingressOperator_01_prometheusrolebindingYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml", size: 392, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x39, 0x5b, 0xa7, 0x95, 0xfe, 0xd6, 0x70, 0xd4, 0x96, 0xf8, 0x8c, 0xed, 0x68, 0x48, 0x69, 0xb0, 0xcc, 0x3f, 0x87, 0x8d, 0xa2, 0xcf, 0x53, 0x66, 0x29, 0x84, 0xb9, 0x1e, 0xec, 0x99, 0x23, 0xff}}
	return a, nil
}

var _manifests0000_90_ingressOperator_02_servicemonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\x8e\xd6\x40\x0c\x84\xfb\x3c\xc5\xea\xfa\x24\x20\xba\xb4\x48\x54\x40\x03\xa2\x77\x9c\xb9\x64\xf9\x77\xed\x95\xed\x44\xe2\xed\x51\x92\xff\xa8\xb8\x76\x76\x3c\xfb\xd9\x43\x2d\xff\x82\x79\x56\x99\x52\x55\xc9\xa1\x96\x65\x1d\x58\x0d\xea\x03\x6b\x1d\x8f\x8f\xdd\x23\xcb\x32\xa5\x1f\xb0\x23\x33\xbe\xdd\xae\xae\x22\x68\xa1\xa0\xa9\x4b\x49\xa8\x62\x4a\x59\x56\x83\x7b\xaf\x0d\x46\xa7\xe5\x7e\xf0\x46\x8c\x29\x69\x83\xf8\x96\x5f\xa3\xff\x8f\x8f\x44\x34\x28\xb2\x8a\x9f\x79\x29\x65\xe1\xb2\x2f\x18\x0c\x05\xe4\x18\xfe\x4d\x0f\x59\x47\x47\x79\xed\x2b\x09\xad\x58\xfa\x2d\xaf\x5b\x4f\x07\xe5\x42\x73\x2e\x39\xfe\x4c\xe9\x25\x6c\xc7\x4b\xe7\x0d\x7c\xa6\x41\x96\xa6\x59\xe2\x8a\xee\xd3\x0c\x32\xd8\x4f\x7d\x40\xbe\xe4\x82\x29\x8d\x07\xd9\x68\xbb\x8c\x0e\x36\x84\x8f\x8f\x7d\x86\x09\x02\x7e\xff\x76\xed\x4d\xcc\xba\x4b\x8c\x71\x0e\x3e\x19\x03\x76\x50\x99\xd2\xa7\x0f\x7e\x29\x4d\x2d\xa6\x54\x11\x96\xf9\x56\x9c\x37\x9c\xb7\xd9\x22\xda\xad\x44\xf1\xcf\x2a\xaf\x79\xbd\x17\x4d\x89\xe9\x89\x81\xe0\xb1\x99\x56\xc4\x86\xdd\x47\xbe\x5c\x95\x9a\xdf\x08\xb2\xf6\x0c\x0b\xef\x99\xfa\x79\x97\xa5\xe0\x0d\xad\x67\x1a\xd8\xe2\x99\x77\x8a\xb0\xef\x57\x25\x4f\x94\xe1\xfd\xe3\x0f\x7e\x70\x97\xd2\x6f\x9d\xbf\xd2\x8c\x32\x25\xd6\xda\x54\x20\x67\x9c\xa3\x80\x43\xed\x46\xad\x14\xbc\x5d\x2e\x7f\x63\x7f\xa7\xf8\xbf\x01\x00\x00\xff\xff\x20\xa4\x6f\x16\x56\x02\x00\x00")

func manifests0000_90_ingressOperator_02_servicemonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_02_servicemonitorYaml,
		"manifests/0000_90_ingress-operator_02_servicemonitor.yaml",
	)
}

func manifests0000_90_ingressOperator_02_servicemonitorYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_02_servicemonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_02_servicemonitor.yaml", size: 598, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0xfb, 0x5b, 0x51, 0x17, 0x66, 0xe7, 0xee, 0x7f, 0x55, 0x9f, 0xab, 0x62, 0x30, 0xe, 0xbf, 0xd, 0x25, 0xba, 0x93, 0xf7, 0xbd, 0xbe, 0x23, 0x42, 0x66, 0xff, 0x7b, 0xdf, 0xe6, 0xc3, 0x32}}
	return a, nil
}

var _manifests0000_90_ingressOperator_03_prometheusrulesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x90\x4d\x6b\x14\x41\x10\x86\xef\xf3\x2b\x8a\xc5\x83\x1e\x66\xa2\x87\x5c\x1a\x22\x08\x22\x1e\x43\x0e\x5e\x44\x96\xca\xcc\xbb\x33\x85\xdd\x5d\x4d\x75\xcd\x26\x21\xe4\xbf\xcb\x7c\x18\xc5\xe8\xd5\x3e\x75\xd3\xf5\xf1\xbc\x0f\x17\xf9\x02\xab\xa2\x39\x50\xd2\x2c\xae\x26\x79\xec\x7a\x35\x68\xed\x7a\x4d\x17\xe7\x77\xcd\x77\xc9\x43\xa0\x6b\xd3\x04\x9f\x30\xd7\x9b\x39\xa2\x49\x70\x1e\xd8\x39\x34\x44\x99\x13\x02\x49\x1e\x0d\xb5\xb6\x5a\x60\xec\x6a\xfb\x47\x2d\xdc\x23\x90\x16\xe4\x3a\xc9\xc9\xdb\xbf\xd4\x45\xbe\x45\xac\xcb\x28\x22\xd3\x88\x40\x1c\x61\xde\xda\x1c\x51\x1b\x22\xce\x59\x9d\x5d\x34\xef\x45\x92\xfb\x38\x0f\xe8\x0c\x11\x5c\xd1\x3d\x4f\xef\x44\x2f\x2a\xe2\xa9\x4d\x9c\x79\xc4\xd0\x4e\x32\x4e\x2d\x9f\x59\x22\xdf\x4a\x14\x7f\x08\x74\x70\x9b\x71\x68\x6a\x41\xbf\x4c\x1b\x4d\xe7\xb2\xcf\x6d\xf7\x2c\x2f\x68\xbb\x9f\x28\x2b\xe2\x72\x0f\xfb\xa3\xdd\x58\x03\x7d\xfe\x70\x6d\x7a\xff\x70\x83\xa8\x3c\x7c\x62\x89\x7b\x01\x11\xee\x8b\x2d\x7e\x7a\x5b\x60\x5f\x3b\x52\x89\xec\x38\x9a\xce\x0e\x3b\xda\xda\x71\x3c\xb1\xc4\xfa\xf5\x32\x7d\x7b\x43\xef\xe9\xed\x73\xf3\x49\x2d\xd0\x65\x7a\x7e\xff\xee\x6a\x3b\x15\x67\xd8\x9a\xac\x37\x71\xe9\xf9\xd7\xe6\x17\xe2\xb6\x93\x50\x2b\x8f\x08\x74\xd8\xa1\x69\x63\xa8\x34\xf1\x19\xb4\x90\x60\x20\xcd\xf4\xf8\x48\xaf\xb6\x85\x5d\xd1\x81\x9e\x9e\x3a\xba\x59\xa1\x49\x2a\x65\x75\x32\x2c\x1a\x5d\xf2\x48\x86\x1e\xd9\xe3\x03\x2d\x31\x7d\xe9\x37\x4a\x3a\xc8\x49\x30\xd0\x1a\xb5\x1e\xfe\xe1\xec\xa3\xde\xe5\x3f\x6c\x4d\x5c\x96\x9f\xe3\x5c\xe8\xea\xea\xbf\xeb\x48\x70\x93\xbe\x12\x1b\xc8\x50\xd4\xd6\x84\x3e\xb1\x93\x4f\xd8\xd2\xac\x0e\x06\xbd\xcb\x87\xe6\x47\x00\x00\x00\xff\xff\x25\x1c\xb6\xe0\x47\x03\x00\x00")

func manifests0000_90_ingressOperator_03_prometheusrulesYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_03_prometheusrulesYaml,
		"manifests/0000_90_ingress-operator_03_prometheusrules.yaml",
	)
}

func manifests0000_90_ingressOperator_03_prometheusrulesYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_03_prometheusrulesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_03_prometheusrules.yaml", size: 839, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x66, 0xc9, 0x9e, 0x6d, 0xa4, 0x40, 0xd4, 0xa4, 0x45, 0x28, 0xc1, 0x6e, 0x4a, 0xf6, 0xcc, 0x9a, 0x20, 0x4a, 0x9f, 0x77, 0x7, 0xe1, 0x23, 0x3b, 0x53, 0xca, 0x8f, 0x54, 0x78, 0x7, 0x64, 0xb2}}
	return a, nil
}

var _manifests01ClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x31\x4f\x3b\x31\x0c\x47\xf7\x7c\x0a\xab\xff\xf9\xee\x2f\x36\x94\x0d\x18\xd8\x8b\xc4\xee\xe6\xdc\x3b\xd3\xd4\x3e\xd9\x4e\x25\xf8\xf4\x28\xb4\x74\x01\x55\xcc\x89\x7f\x7a\xef\xfd\x83\x47\x96\xc9\x21\x16\x02\x5d\xc9\x30\xd4\xa0\xd4\xe6\x41\x06\xa6\x95\x20\x14\x38\x1c\x5e\xc8\x4e\x5c\x08\x1e\x4a\xd1\x26\x31\xa6\x03\xcb\x94\xe1\xe9\xfc\x75\xab\x95\xfa\x10\xcb\x9c\x70\xe5\x57\x32\x67\x95\x0c\xb6\xc3\x32\x62\x8b\x45\x8d\x3f\x30\x58\x65\x3c\xdc\xfb\xc8\xfa\xff\x74\x97\x8e\x14\x38\x61\x60\x4e\x00\x82\x47\xca\x9d\x40\x7c\xe1\x7d\x0c\x2c\xb3\x91\xfb\xf0\xcd\x94\x00\x50\x44\xe3\x6b\xc3\xfb\x05\x00\x4b\xa9\x6d\xa2\xd1\xa8\x12\x3a\x8d\xd7\xeb\xbe\xef\x54\xf7\xc3\x11\x05\x67\x9a\x86\x85\xe7\x65\xc0\x13\x72\xc5\x1d\x57\x8e\xf7\x0c\x9b\xb0\x46\x9b\xe4\x6d\xf7\x46\x25\x3c\xa7\x01\xce\x46\x17\xd1\x8b\xe7\x15\xed\x17\xa0\xfe\xe0\x2b\x96\xdb\xe0\x3d\xe2\x96\xf6\x1d\xf9\x47\xb2\x6e\xb5\xf2\xb3\x69\x5b\x6f\xb4\xfa\x4b\x9e\xcf\x00\x00\x00\xff\xff\xf3\x76\x77\x3c\xc8\x01\x00\x00")

func manifests01ClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ClusterRoleBindingYaml,
		"manifests/01-cluster-role-binding.yaml",
	)
}

func manifests01ClusterRoleBindingYaml() (*asset, error) {
	bytes, err := manifests01ClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-cluster-role-binding.yaml", size: 456, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb5, 0x7, 0x7e, 0x6f, 0x6a, 0xd8, 0x45, 0x9b, 0x5b, 0xcb, 0x6c, 0x24, 0xb6, 0x2a, 0xf, 0x7e, 0xee, 0x41, 0x1c, 0xd6, 0x22, 0xc7, 0x80, 0x24, 0x5d, 0x48, 0xc2, 0x63, 0x27, 0x7c, 0x19, 0x6e}}
	return a, nil
}

var _manifests01RoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\xab\xcc\x09\x62\x43\xd9\x60\x61\x2f\x12\xbb\x9b\x73\xef\x4c\x53\xfb\x14\x3b\x95\xe0\xd7\xa3\xc0\x01\x0b\xb0\x30\x27\xcf\xdf\xfb\xde\x15\xdc\xb3\x4c\x06\xbe\x10\xe8\x4a\x0d\x5d\x1b\x34\xad\x04\xae\xc0\x6e\xf0\x48\xed\xc2\x85\xe0\xae\x14\xed\xe2\x29\x9c\x58\xa6\x0c\x7b\xad\x34\x92\x2c\x73\xc0\x95\x9f\xa8\x19\xab\x64\x68\x07\x2c\x09\xbb\x2f\xda\xf8\x15\x9d\x55\xd2\xe9\xd6\x12\xeb\xf5\xe5\x26\x9c\xc9\x71\x42\xc7\x1c\x00\x04\xcf\x94\x81\x65\x6e\x64\x16\x3f\xd1\xdb\x83\xad\x58\x28\x8f\x42\x62\x0b\x1f\x3d\xfe\xf0\x0f\x45\xd4\xdf\x09\x36\xee\x01\xb0\x94\xda\x27\x4a\x8d\x2a\xa1\x51\xfa\x4a\x0f\xba\x51\x3d\xc6\x33\x0a\xce\x34\xc5\x85\xe7\x25\xe2\x05\xb9\xe2\x81\x2b\xfb\x4b\x86\x9d\xb7\x4e\xbb\x60\xfd\xf0\x4c\xc5\x2d\x87\x08\x1f\xa2\x9b\xff\xa6\xff\xff\xe2\x63\xdb\x3d\x1d\x47\xe5\xef\x25\x87\xce\xca\x0f\x4d\xfb\xfa\xc7\x84\xbf\xc3\xdf\x02\x00\x00\xff\xff\x81\x84\xdc\x42\xc6\x01\x00\x00")

func manifests01RoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleBindingYaml,
		"manifests/01-role-binding.yaml",
	)
}

func manifests01RoleBindingYaml() (*asset, error) {
	bytes, err := manifests01RoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role-binding.yaml", size: 454, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x77, 0xa, 0x94, 0x1d, 0x3b, 0x40, 0x57, 0xcd, 0xd3, 0x7e, 0x50, 0x32, 0x2b, 0xaf, 0x68, 0x79, 0x3e, 0x11, 0xa9, 0xe4, 0x41, 0xe9, 0xc, 0xd1, 0xe7, 0x8e, 0xb, 0x21, 0x2e, 0x28, 0xde, 0x4c}}
	return a, nil
}

var _manifests01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xbf\x6e\xf3\x30\x0c\xc4\x77\x3d\x05\xe1\x6f\xfb\x00\xbb\xe8\x56\xf8\x05\xba\x77\xe8\xce\xc8\xb4\x4d\x44\x16\x05\x92\x32\x90\x3e\x7d\x61\xe7\x0f\xd2\xa4\x40\x37\x51\xbc\xfb\xdd\x49\xff\xe0\x43\x12\xc1\x28\x0a\x3e\x13\x48\x21\x45\x17\x05\x76\xa3\x34\x76\xe1\xc8\x79\xe8\x77\x4d\xc0\xc2\x9f\xa4\xc6\x92\x7b\xd0\x03\xc6\x0e\xab\xcf\xa2\xfc\x85\xce\x92\xbb\xe3\x9b\x75\x2c\x2f\xeb\x6b\x58\xc8\x71\x40\xc7\x3e\x00\x64\x5c\xa8\x07\xce\x93\x92\x59\x7b\xc5\x5f\x16\x56\x30\x52\xbf\x85\x66\x9b\x79\xf4\xf6\x17\x1d\xe6\x2c\xbe\x27\xd8\xc6\x03\xe0\x1c\x53\x1d\xa8\x53\x4a\x84\x46\xdd\xcd\xbd\xa5\x6f\xa5\xdb\x05\x33\x4e\x34\xb4\x33\x4f\x73\x8b\x2b\x72\xc2\x03\x27\xf6\x53\x0f\x8d\x6b\xa5\x26\x68\x4d\x64\x7d\x68\x01\x0b\xbf\xab\xd4\xb2\xb3\xdb\xdb\xf3\x7f\x40\x03\x80\x92\x49\xd5\x48\x17\x59\xf3\xbf\x09\x00\x2b\xe9\xe1\xee\xe2\x99\xd6\x34\xcf\xd6\x22\x83\xed\x07\x23\x5d\x39\xd2\x79\xa0\x3c\x14\xe1\xec\xe7\xa9\x6c\xbf\x6c\x4e\xd9\x57\x49\x75\xa1\x98\x90\x97\x8b\x70\xa5\xab\x2a\x4a\x1e\x79\x5a\xb0\x5c\x79\x51\x69\x5f\xfd\xd9\x0b\xcb\xee\x79\x68\x36\x50\x49\x72\x5a\x6e\xfc\xbb\x82\x0f\xc4\xef\x00\x00\x00\xff\xff\xb6\xee\xf9\x09\x34\x02\x00\x00")

func manifests01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleYaml,
		"manifests/01-role.yaml",
	)
}

func manifests01RoleYaml() (*asset, error) {
	bytes, err := manifests01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role.yaml", size: 564, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8c, 0x12, 0x1c, 0xc, 0x82, 0xee, 0xd0, 0x5a, 0x6, 0xc1, 0xb6, 0xba, 0x24, 0xfc, 0xa3, 0xc0, 0xd3, 0x35, 0x47, 0x41, 0x31, 0x1, 0xd7, 0x66, 0x6f, 0xca, 0x61, 0x78, 0xb0, 0xff, 0xc6, 0x85}}
	return a, nil
}

var _manifests01ServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x4e\xc4\x40\x0c\x44\xfb\xfd\x0a\xeb\xae\x4e\x10\xed\x76\x94\xd4\x48\xf4\x66\x77\x2e\xb1\xd8\x78\x83\xed\x44\xe2\xef\xd1\x9e\x0e\x2a\x6a\x8f\xdf\xbc\xb9\xd2\x4b\x29\xfd\xd0\xa0\x5b\x37\x8a\x15\xd4\x77\x18\x47\x37\x92\x70\xb4\xdb\x4c\xaf\x41\xbe\xf6\xa3\x55\x32\x7c\x1d\x62\x20\xe5\x0d\xbe\x73\x01\x79\xe9\x3b\x6a\xba\xd2\x0e\xdb\xc4\x5d\xba\xfa\x9c\x3e\x45\x6b\xa6\x37\xd8\x29\x05\x0f\x7e\xe2\x5d\xde\x61\x23\x91\xe9\x7c\x4e\x1b\x82\x2b\x07\xe7\x44\x77\x5e\x26\xd1\xc5\xe0\x3e\xfd\x0a\x3c\x0e\xf7\xa2\x3c\xb4\xd4\x57\xb9\xc5\xf4\x4f\x8e\x55\x7b\x70\x8c\xf6\xc1\x23\x12\x2d\xed\xa8\x98\x0d\x0d\xec\x98\xff\xbe\x67\xe9\x4f\x63\xd6\xb4\xb1\xf2\x82\x3a\xad\xb2\xac\x13\x9f\x2c\x8d\x3f\xa4\x49\x7c\x67\xba\x84\x1d\xb8\xa4\x9f\x00\x00\x00\xff\xff\x63\x63\x37\xd0\x1b\x01\x00\x00")

func manifests01ServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceAccountYaml,
		"manifests/01-service-account.yaml",
	)
}

func manifests01ServiceAccountYaml() (*asset, error) {
	bytes, err := manifests01ServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service-account.yaml", size: 283, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa3, 0xa8, 0x21, 0xd5, 0xfc, 0x67, 0xbd, 0x7c, 0x11, 0xaa, 0x9a, 0x36, 0xd4, 0x84, 0xd8, 0x1d, 0xef, 0xce, 0xb4, 0x96, 0x5d, 0x8c, 0x89, 0x92, 0xd0, 0x94, 0x5e, 0xc8, 0x93, 0xe9, 0x8c, 0x23}}
	return a, nil
}

var _manifests01ServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\xb1\x6e\xf3\x30\x0c\x84\x77\x3d\x05\x91\x5d\xfe\xf1\x23\x53\xb4\x76\xea\x16\xa0\x40\x77\x46\xbe\x38\x44\x65\x49\x20\x19\x03\x79\xfb\x22\x8e\xdb\x02\xcd\xd0\xf1\x78\xbc\xef\x8e\xbb\xbc\x43\x4d\x5a\x4d\xb4\xfc\x0f\x1f\x52\xc7\x44\x6f\xd0\x45\x32\xc2\x0c\xe7\x91\x9d\x53\x20\xe2\x5a\x9b\xb3\x4b\xab\x76\x97\x44\x52\x73\xb9\x8e\x18\x14\x05\x6c\x18\x5a\x47\xb5\x8b\x9c\x7d\x90\xf6\xcf\x50\xce\x71\xe6\xca\x13\xc6\x78\x91\xe9\x12\x79\x61\x29\x7c\x92\x22\x7e\x4b\xb4\x73\xbd\x62\xb7\x72\xec\x51\x36\x9c\xe0\xfc\x1b\xa2\x8b\xd4\x29\x66\xa8\x47\x43\x56\x78\xac\x3c\x23\xd1\x0c\x57\xc9\x16\xbd\x58\x20\x2a\x7c\x42\xd9\x56\x3d\x7c\xa9\x93\xc2\x2c\xb6\x0e\x65\x6f\x1a\xbe\x8c\x2d\xb8\x69\xeb\x9c\x91\xe8\xbb\x34\x3e\xe5\xac\x23\xdf\xc1\xbd\xa9\xaf\x0d\xf1\x09\xf4\x30\x13\x1d\xf6\x87\xfd\x2a\x9d\x75\x82\x1f\xd7\xe3\xcf\x9b\xa1\x20\x7b\xd3\x3f\x66\xfa\xad\x23\xd1\x4b\xb9\x9a\x43\x5f\x8f\xe1\x33\x00\x00\xff\xff\x6f\x46\x30\x19\xa0\x01\x00\x00")

func manifests01ServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceYaml,
		"manifests/01-service.yaml",
	)
}

func manifests01ServiceYaml() (*asset, error) {
	bytes, err := manifests01ServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service.yaml", size: 416, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5d, 0x98, 0xee, 0x3d, 0xc5, 0x90, 0xfc, 0x1e, 0x5a, 0xb, 0x2b, 0x6a, 0xc1, 0x22, 0x5c, 0x93, 0x5b, 0xd2, 0x36, 0x96, 0x53, 0x99, 0x9a, 0xa9, 0xf, 0xe2, 0x5d, 0xf4, 0x97, 0xe3, 0x59, 0x7f}}
	return a, nil
}

var _manifests01TrustedCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xbf\x4e\xf4\x40\x0c\xc4\xfb\x3c\x85\x75\x57\x6f\x3e\x7d\x6d\x5a\x6a\x3a\x44\xef\x6c\x26\x89\xb9\x8d\xbd\x5a\x3b\x87\x78\x7b\x74\x7f\x80\x43\xa2\xdc\xd9\x99\xb1\x7e\x73\xa4\x97\x15\xa4\x88\x77\x6b\x27\xb2\x8a\xc6\x61\x8d\xc4\xa9\xc1\xab\xa9\xcb\x58\x40\xf3\x45\xd2\x37\xe4\x10\x5d\xba\x23\xc5\x0a\x8a\xb6\x7b\x60\xa2\xcc\x34\xee\x3a\x15\x90\x68\x18\xc5\x2a\x4e\xd9\x74\x96\x65\xe3\xda\x77\x5c\xe5\x15\xcd\xc5\x74\xa0\xf3\xff\xee\x24\x3a\x0d\xf4\x74\xfd\x7f\xe6\xda\x6d\x08\x9e\x38\x78\xe8\x88\x58\xd5\x82\x43\x4c\xfd\xf2\x24\x12\xcd\x65\x9f\xd0\x37\x14\xb0\xa3\xb7\x0a\xf5\x55\xe6\xe8\xc5\xfe\x39\xca\x9c\x36\x56\x5e\x30\xa5\x55\x96\x35\xf1\x99\xa5\xf0\x28\x45\xe2\x63\xa0\x43\xb4\x1d\x87\x6b\xcf\x9f\xf9\xdc\xc0\x81\x64\x5a\x1e\xcd\x85\x47\x94\xfb\xf9\x1b\xc5\xef\xd4\x6d\x85\x74\x87\x4f\x99\x6f\xec\x0f\x0d\xca\x1b\x06\xfa\x31\xdc\x25\xaf\x9c\x31\xd0\x77\x59\x12\x5d\x1a\xdc\xd3\xd7\xe6\xdd\x67\x00\x00\x00\xff\xff\x08\xf4\x58\x5e\x8b\x01\x00\x00")

func manifests01TrustedCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01TrustedCaConfigmapYaml,
		"manifests/01-trusted-ca-configmap.yaml",
	)
}

func manifests01TrustedCaConfigmapYaml() (*asset, error) {
	bytes, err := manifests01TrustedCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-trusted-ca-configmap.yaml", size: 395, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3e, 0xe4, 0xdc, 0x71, 0xaf, 0xc6, 0xa1, 0xf8, 0x3, 0x66, 0x4a, 0x36, 0xa3, 0x70, 0xd7, 0xe0, 0x5b, 0x7d, 0xa5, 0x7b, 0xc3, 0xe2, 0x45, 0x24, 0x6f, 0x2c, 0x54, 0xbe, 0x61, 0x50, 0x29, 0x60}}
	return a, nil
}

var _manifests02DeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x41\x6f\x22\x39\x13\xbd\xe7\x57\x58\xe8\x3b\x7c\x2b\xad\x81\x64\x66\x67\x77\x2c\xe5\xc0\x32\x3d\x93\x48\x81\x89\x20\x9a\xd1\x9e\x50\xe1\x2e\xc0\x8b\xdb\xf6\x94\xab\x51\xfa\xdf\xaf\xdc\x10\x68\x1a\x42\xe6\xb0\xdb\x27\x70\xbd\xf7\x5c\x55\xae\x2a\x1b\x82\xf9\x86\x14\x8d\x77\x4a\x40\x08\xb1\xb7\xb9\xbe\x5a\x1b\x97\x2b\xf1\x09\x83\xf5\x55\x81\x8e\xaf\x0a\x64\xc8\x81\x41\x5d\x09\xe1\xa0\x40\x25\x8c\x5b\x12\xc6\x28\x7d\x40\x02\xf6\xb4\x33\xc4\x00\x1a\x95\xf0\x01\x5d\x5c\x99\x05\xcb\x33\x38\x70\xce\x33\xb0\xf1\x2e\x26\x3d\x21\xb4\x77\x0b\xb3\xec\xee\x49\x5d\xe3\x7b\xc6\xfd\x8d\x9a\x65\x20\xff\x5c\x9d\xdd\x4d\x08\xe3\xb4\x2d\x73\xec\x12\x5a\x84\x88\xc7\xfc\x88\x76\x21\x0b\x70\xb0\xc4\x5c\xae\xcc\x72\x25\x61\x03\xc6\xc2\xdc\x58\xc3\x95\x12\x1d\xa6\x12\x3b\x57\x31\xa0\x4e\x4e\x10\x06\x6b\x34\x44\x25\xae\xaf\x84\x88\x4c\xc0\xb8\xac\xb6\xee\x71\x15\x50\x89\x09\x6a\x42\x60\x4c\x66\xb4\xa8\xd9\xd3\xd6\x5c\x00\xeb\xd5\x03\xcc\xd1\xee\xc2\xb9\x90\x22\xc6\x22\x58\x60\xdc\x31\x1b\x59\x4d\x9f\x3d\x12\xb9\x20\x23\xc4\x8b\xdf\x35\xcc\xe7\x38\x3d\x72\x29\x7d\xeb\x72\x8e\xe4\x90\x31\xa6\x74\xf8\xa8\x84\x35\xae\x7c\x3e\x88\xfb\x1c\x25\x79\x8b\xdd\x63\x64\x01\x91\x91\x94\xe8\x74\x76\x50\xf6\x36\x6d\x7c\x38\x2e\x21\xa4\x58\x63\xca\xe1\x65\x8d\xce\x7e\xaf\x17\xd7\x95\xe8\x64\xcf\x26\x72\x3c\x98\x70\xb1\x40\xcd\x4a\x74\xc6\x7e\xaa\x57\x98\x97\x16\x3b\x67\x76\x69\x6d\x50\x3a\x42\xd0\x2b\x98\x1f\xd0\x3f\xbb\x4b\xf6\x8c\xba\xe4\x06\xed\x10\xdf\x14\xb5\x77\x79\xaa\x81\x9b\xfe\xdb\x3e\x38\xcf\x92\x10\xf2\xea\xbf\xf5\x20\x22\x6d\x8c\xc6\x81\xd6\xbe\x74\x3c\x7e\xbd\x24\x84\x08\x64\x3c\x19\xae\x86\x16\x62\xdc\x22\x63\x15\x19\x0b\xa9\x6d\x99\x4e\x44\x6a\x32\x6c\x34\xd8\x1d\x41\x7b\xc7\x60\x1c\x52\xa3\xe8\xe4\xa5\xb2\xdb\xf9\x8b\x54\x18\x57\x3b\x3c\xc2\x18\x61\x89\x8f\xde\x1a\x5d\x29\xf1\x19\xac\x9d\x83\x5e\x3f\xf9\x07\xbf\x8c\x5f\x5d\x46\x74\xc4\x34\x45\x02\x97\xd6\xbe\x10\xee\x17\x63\xcf\x8f\x84\x31\x4d\x99\x16\xae\x31\x46\x7a\x9e\xcc\xd2\xb8\x7d\x1c\x6d\xe7\x54\x6a\xaa\xd8\x54\xd0\xbe\x28\xc0\xe5\xaa\xb1\x24\x2f\xc5\x24\x45\x64\x20\x3e\x5a\x91\x72\x3f\xd2\x8e\xd6\x3b\xff\xfb\xff\xf7\xc1\xd3\xf0\x6e\x36\x1e\x8c\xb2\xe9\xe3\x60\x98\xfd\xd2\x69\x11\xeb\x00\xda\xa4\xfb\xd1\xe0\xcb\x29\x54\x83\x03\xaa\xce\x33\x86\x83\xf1\x60\xf2\xd7\xec\x3c\x71\x37\xf7\xe4\x66\x3b\xbe\xdb\xdc\x49\xf6\x90\x0d\xa6\xd9\xec\x5b\x36\x99\xde\x7f\x1d\x1f\xd1\xd1\x6d\x9a\x99\x39\x9c\x7a\x8b\x74\x84\x11\x62\x03\xb6\x44\x25\x3a\xfd\x6e\xbf\x7b\x2d\xa3\x83\x10\x57\x9e\x3b\x67\x95\x5a\x19\x3a\xa7\xf4\x99\x7c\xa1\x5a\x06\x21\x16\x06\x6d\x3e\xc1\xc5\xa9\x65\x67\x7b\x04\x5e\xa9\xfd\xf0\xec\x9e\x3b\xa3\x83\x1b\x75\xea\xce\x87\x71\x52\x5d\x2b\xa8\xaf\x1b\x49\xbe\x4c\x23\x70\xf3\xbe\xdb\x3f\xab\xd9\x3c\x95\xb7\xa4\x57\x68\xad\x97\xfb\xff\xa7\x85\x4a\x18\x7d\x49\x1a\xe3\x71\xbc\x84\x3f\x4a\x8c\x1c\xdb\x59\xd0\xa1\x54\xe2\xba\x5f\x34\x96\x37\xde\x96\x05\x8e\xd2\x78\x88\xc7\xf5\xbe\x75\x97\x29\x35\x4d\x2e\x35\x1c\x69\x15\x89\xb0\xcd\x65\x0f\x59\xf7\xc2\xda\xf4\x34\xc8\x1a\xdd\xc3\x67\x26\xd0\x8c\x79\x2f\x60\xd1\x72\x0c\xf2\xaf\xce\x56\xb5\x2e\x9e\x8c\x8d\x34\x23\x25\xcd\x41\x6f\xaf\xee\xd3\x9e\xfe\x51\x42\x55\xdf\x48\xed\xec\xb7\x98\xa7\x99\x02\x5a\xb6\xe2\x93\xd2\xfa\x25\xfb\xc8\x39\x12\xb5\x2c\x11\x75\x49\x28\xad\x89\x8c\x4e\x42\x9e\xa7\xce\xbf\x55\x1f\xdf\x7d\x7c\xd7\x42\xb2\x8d\x52\x9b\xb0\x42\x92\xb1\x34\x8c\xf1\xf6\xe9\x61\x3a\xcb\x86\x9f\xee\xb2\xd9\x64\x3a\x98\x7d\xbf\x7f\xba\x9b\x0d\xb2\xe9\xec\xfa\xe6\x8f\xd9\x97\xe1\x68\x36\xbd\x1b\xdc\xfc\xf6\xe1\xd7\x03\x2a\x1b\x7e\x7a\x03\x77\xa2\x33\xfc\x73\xf8\x53\x3a\x67\x71\x17\xd4\x5a\xb1\x95\x21\x32\x21\x14\xb7\x2b\xe6\xa0\x7a\xbd\xeb\x9b\xdf\xbb\x75\xf7\xaa\x0f\xfd\x7e\xbf\xdf\x3b\x97\x0a\x24\x96\x0b\x63\xf1\xb6\x2e\x0b\xb6\xb1\x17\xc8\x6c\x80\x31\xfd\xee\xea\x93\x21\x99\x48\x3b\x84\x5c\x63\x75\x81\xbb\xc6\x66\x41\x04\x4f\xed\x82\xdd\x5f\x48\x8f\x9e\x58\x89\xd6\x61\xbd\xbc\x88\x0a\x64\x32\x3a\xfe\xab\x4d\x24\xea\xf7\x58\xe1\xa9\x52\xe2\x7d\x7f\x64\x7e\xaa\xbf\xda\x2d\xd4\x88\xf7\x75\xb7\x53\xbe\xde\xee\xa8\xed\xa6\x8d\x17\xd7\xeb\x1a\x31\xbd\x4c\xb9\xe9\xd9\x76\x65\xfc\x0a\xe3\xc2\x5c\xd8\xbe\xc4\x47\x10\x9a\x6a\x17\xa6\x88\x61\x2c\x62\xfb\x26\xa9\x5f\x4c\x1a\xe4\xbc\x74\xb9\xc5\x56\xc1\xa4\x2f\xd4\x19\xab\x6b\x6d\x8f\x4a\x63\xe6\x9f\x00\x00\x00\xff\xff\x3b\xd2\x6c\x8e\x8b\x0c\x00\x00")

func manifests02DeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests02DeploymentYaml,
		"manifests/02-deployment.yaml",
	)
}

func manifests02DeploymentYaml() (*asset, error) {
	bytes, err := manifests02DeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/02-deployment.yaml", size: 3211, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0xb6, 0xe0, 0x1e, 0x9d, 0x13, 0x89, 0xcf, 0x1a, 0xa1, 0x2d, 0x6c, 0xc4, 0xdd, 0xfd, 0x8c, 0x4, 0xcb, 0xf3, 0xdc, 0xa7, 0x60, 0x6d, 0x2b, 0xa5, 0x3, 0x6c, 0x84, 0x98, 0x5a, 0xba, 0x47}}
	return a, nil
}

var _manifests03ClusterOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xbd\x8e\x1b\x31\x0c\x84\x7b\x3d\xc5\xc0\x6e\xb3\x9b\xbb\x76\x5b\x57\xa9\xae\x09\xae\xe7\x49\xb4\x45\x44\x4b\x2e\x44\xca\x07\xbf\x7d\xe0\x3d\x1b\xf9\x51\x25\x60\xc0\xf9\xbe\x39\xe2\x67\x15\x47\x67\xb7\xd1\x33\x43\x1c\x6a\x81\xdc\x99\x82\x0b\x3e\x6e\x38\xbd\xbf\x7d\x83\xc4\x3d\x31\x6d\x37\x0c\xe7\x02\x72\x10\xb2\xad\xeb\x50\xc9\x14\x62\x9a\x8e\x58\x39\x57\x52\xf1\x15\x61\x08\x6e\x0d\x51\xf9\x7e\x8f\xcf\x2a\xb9\xe2\xd4\x86\x07\xf7\xb7\x8d\x3b\x85\xf5\x3f\xd0\x30\x7c\x92\x04\xce\xd6\xe7\x74\xc4\x0f\xbd\x74\x76\x3f\x99\x46\xb7\xd6\xb8\x3f\x74\x1c\xa4\x05\x63\x2b\xfb\x3f\xfe\xf6\x9e\x13\x6d\xf2\xce\xdd\xc5\x74\x41\x36\x3d\xcb\x65\xb6\x8d\xd5\xab\x9c\x63\x16\xfb\x7e\x7d\x4d\xbf\x44\xcb\xf2\xbf\x45\x5a\x39\xa8\x50\xd0\x92\x00\xa5\x95\x17\xc8\x17\x3f\x01\xa4\x6a\xb1\xcf\xf3\x7b\x0c\x88\xe6\x36\x0a\xcf\x9d\x1b\x93\xf3\xbf\x08\xe7\x76\x9e\x56\x52\xba\x70\x99\xaa\x5c\xea\x44\x57\x92\x46\x1f\xd2\x24\x6e\x0b\x0e\xd1\x07\x1f\x92\x07\xc5\xd8\xfb\xae\x5f\xc2\x8f\xee\xe9\x81\xb7\xa7\x19\xf6\x77\x7d\xae\x3a\xbc\xcc\x2f\xf3\xeb\xe4\x4a\x9b\x57\x8b\x43\xfa\x1d\x00\x00\xff\xff\x49\xb5\xcd\xda\xbc\x01\x00\x00")

func manifests03ClusterOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests03ClusterOperatorYaml,
		"manifests/03-cluster-operator.yaml",
	)
}

func manifests03ClusterOperatorYaml() (*asset, error) {
	bytes, err := manifests03ClusterOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/03-cluster-operator.yaml", size: 444, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x96, 0x49, 0xd7, 0x83, 0xbf, 0x19, 0x52, 0xf4, 0x20, 0xd, 0x34, 0x91, 0xda, 0xc3, 0x58, 0xf7, 0x76, 0x6b, 0x51, 0x4f, 0x6b, 0x16, 0x77, 0x38, 0x6c, 0xf9, 0x6c, 0xc7, 0xea, 0x65, 0x8c, 0xe5}}
	return a, nil
}

var _manifestsImageReferences = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xbf\x4e\xc3\x40\x0c\x06\xf0\x3d\x4f\x61\x65\xbf\x14\x24\xa6\x9b\x59\x98\x91\xd8\xdd\xe0\xa6\x56\x92\xf3\x61\xfb\x2a\xfa\xf6\x28\x69\x15\x5d\x8b\x3a\xc0\x94\xe8\xfe\x7c\xbf\xfb\x3c\x72\xfa\x8c\xf0\x36\xe3\x40\xef\xae\x84\x73\x83\x99\x3f\x48\x8d\x25\x45\xe0\x65\xbd\x93\x4c\xc9\x8e\x7c\xf0\x8e\x65\x77\x7a\x6e\x2c\x53\x1f\x1b\x00\xc7\xc1\x96\x6f\x80\x84\x33\x45\xe8\xa7\x62\x4e\x1a\x38\x0d\x4a\x66\x41\x32\x29\xba\x68\x03\x00\x70\x50\x99\x23\xac\xbf\x00\x17\xb5\x7d\x95\x7e\x24\x5d\xf1\xf6\xba\x73\x49\x6a\x37\x72\x27\xca\x03\xa7\xf0\x28\x3b\x4e\xe8\x64\xde\x56\xcf\x38\x62\x56\xf9\x3e\x07\x95\xe2\x54\xe1\xff\xb6\x6f\x03\xe3\xe9\xa5\x7b\xaa\xbd\xb1\xec\x29\xe8\x1e\xfb\xb0\x1e\x7b\x00\x56\xde\x0d\xf7\x55\xf0\xbc\xcc\xf5\x97\x7a\x17\x7b\x2d\x5a\xf7\xa4\x69\x92\xb0\xdd\xfb\xa3\x5b\xd5\xbc\x0b\xda\x46\xfa\x13\x00\x00\xff\xff\x09\x34\x44\xf5\x1c\x02\x00\x00")

func manifestsImageReferencesBytes() ([]byte, error) {
	return bindataRead(
		_manifestsImageReferences,
		"manifests/image-references",
	)
}

func manifestsImageReferences() (*asset, error) {
	bytes, err := manifestsImageReferencesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/image-references", size: 540, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x36, 0xea, 0xd2, 0x29, 0x4d, 0x25, 0xdf, 0xe7, 0x17, 0x2, 0xf8, 0xe8, 0x7f, 0xbb, 0x8f, 0xfc, 0x1b, 0x7c, 0x44, 0xf6, 0xbc, 0xf3, 0xdd, 0x81, 0xe8, 0x11, 0x41, 0x59, 0x49, 0xfd, 0x8e, 0x2b}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/canary/deployment.yaml": assetsCanaryDeploymentYaml,

	"assets/canary/namespace.yaml": assetsCanaryNamespaceYaml,

	"assets/canary/route.yaml": assetsCanaryRouteYaml,

	"assets/canary/service.yaml": assetsCanaryServiceYaml,

	"assets/router/cluster-role-binding.yaml": assetsRouterClusterRoleBindingYaml,

	"assets/router/cluster-role.yaml": assetsRouterClusterRoleYaml,

	"assets/router/deployment.yaml": assetsRouterDeploymentYaml,

	"assets/router/metrics/cluster-role-binding.yaml": assetsRouterMetricsClusterRoleBindingYaml,

	"assets/router/metrics/cluster-role.yaml": assetsRouterMetricsClusterRoleYaml,

	"assets/router/metrics/role-binding.yaml": assetsRouterMetricsRoleBindingYaml,

	"assets/router/metrics/role.yaml": assetsRouterMetricsRoleYaml,

	"assets/router/namespace.yaml": assetsRouterNamespaceYaml,

	"assets/router/service-account.yaml": assetsRouterServiceAccountYaml,

	"assets/router/service-cloud.yaml": assetsRouterServiceCloudYaml,

	"assets/router/service-internal.yaml": assetsRouterServiceInternalYaml,

	"manifests/00-cluster-role.yaml": manifests00ClusterRoleYaml,

	"manifests/00-custom-resource-definition-internal.yaml": manifests00CustomResourceDefinitionInternalYaml,

	"manifests/00-custom-resource-definition.yaml": manifests00CustomResourceDefinitionYaml,

	"manifests/00-ingress-credentials-request.yaml": manifests00IngressCredentialsRequestYaml,

	"manifests/00-namespace.yaml": manifests00NamespaceYaml,

	"manifests/0000_90_ingress-operator_00_prometheusrole.yaml": manifests0000_90_ingressOperator_00_prometheusroleYaml,

	"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml": manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,

	"manifests/0000_90_ingress-operator_02_servicemonitor.yaml": manifests0000_90_ingressOperator_02_servicemonitorYaml,

	"manifests/0000_90_ingress-operator_03_prometheusrules.yaml": manifests0000_90_ingressOperator_03_prometheusrulesYaml,

	"manifests/01-cluster-role-binding.yaml": manifests01ClusterRoleBindingYaml,

	"manifests/01-role-binding.yaml": manifests01RoleBindingYaml,

	"manifests/01-role.yaml": manifests01RoleYaml,

	"manifests/01-service-account.yaml": manifests01ServiceAccountYaml,

	"manifests/01-service.yaml": manifests01ServiceYaml,

	"manifests/01-trusted-ca-configmap.yaml": manifests01TrustedCaConfigmapYaml,

	"manifests/02-deployment.yaml": manifests02DeploymentYaml,

	"manifests/03-cluster-operator.yaml": manifests03ClusterOperatorYaml,

	"manifests/image-references": manifestsImageReferences,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"canary": {nil, map[string]*bintree{
			"deployment.yaml": {assetsCanaryDeploymentYaml, map[string]*bintree{}},
			"namespace.yaml":  {assetsCanaryNamespaceYaml, map[string]*bintree{}},
			"route.yaml":      {assetsCanaryRouteYaml, map[string]*bintree{}},
			"service.yaml":    {assetsCanaryServiceYaml, map[string]*bintree{}},
		}},
		"router": {nil, map[string]*bintree{
			"cluster-role-binding.yaml": {assetsRouterClusterRoleBindingYaml, map[string]*bintree{}},
			"cluster-role.yaml":         {assetsRouterClusterRoleYaml, map[string]*bintree{}},
			"deployment.yaml":           {assetsRouterDeploymentYaml, map[string]*bintree{}},
			"metrics": {nil, map[string]*bintree{
				"cluster-role-binding.yaml": {assetsRouterMetricsClusterRoleBindingYaml, map[string]*bintree{}},
				"cluster-role.yaml":         {assetsRouterMetricsClusterRoleYaml, map[string]*bintree{}},
				"role-binding.yaml":         {assetsRouterMetricsRoleBindingYaml, map[string]*bintree{}},
				"role.yaml":                 {assetsRouterMetricsRoleYaml, map[string]*bintree{}},
			}},
			"namespace.yaml":        {assetsRouterNamespaceYaml, map[string]*bintree{}},
			"service-account.yaml":  {assetsRouterServiceAccountYaml, map[string]*bintree{}},
			"service-cloud.yaml":    {assetsRouterServiceCloudYaml, map[string]*bintree{}},
			"service-internal.yaml": {assetsRouterServiceInternalYaml, map[string]*bintree{}},
		}},
	}},
	"manifests": {nil, map[string]*bintree{
		"00-cluster-role.yaml":                                   {manifests00ClusterRoleYaml, map[string]*bintree{}},
		"00-custom-resource-definition-internal.yaml":            {manifests00CustomResourceDefinitionInternalYaml, map[string]*bintree{}},
		"00-custom-resource-definition.yaml":                     {manifests00CustomResourceDefinitionYaml, map[string]*bintree{}},
		"00-ingress-credentials-request.yaml":                    {manifests00IngressCredentialsRequestYaml, map[string]*bintree{}},
		"00-namespace.yaml":                                      {manifests00NamespaceYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_00_prometheusrole.yaml":        {manifests0000_90_ingressOperator_00_prometheusroleYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_01_prometheusrolebinding.yaml": {manifests0000_90_ingressOperator_01_prometheusrolebindingYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_02_servicemonitor.yaml":        {manifests0000_90_ingressOperator_02_servicemonitorYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_03_prometheusrules.yaml":       {manifests0000_90_ingressOperator_03_prometheusrulesYaml, map[string]*bintree{}},
		"01-cluster-role-binding.yaml":                           {manifests01ClusterRoleBindingYaml, map[string]*bintree{}},
		"01-role-binding.yaml":                                   {manifests01RoleBindingYaml, map[string]*bintree{}},
		"01-role.yaml":                                           {manifests01RoleYaml, map[string]*bintree{}},
		"01-service-account.yaml":                                {manifests01ServiceAccountYaml, map[string]*bintree{}},
		"01-service.yaml":                                        {manifests01ServiceYaml, map[string]*bintree{}},
		"01-trusted-ca-configmap.yaml":                           {manifests01TrustedCaConfigmapYaml, map[string]*bintree{}},
		"02-deployment.yaml":                                     {manifests02DeploymentYaml, map[string]*bintree{}},
		"03-cluster-operator.yaml":                               {manifests03ClusterOperatorYaml, map[string]*bintree{}},
		"image-references":                                       {manifestsImageReferences, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
